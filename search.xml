<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>dyld_startup</title>
      <link href="/dyld_startup/"/>
      <url>/dyld_startup/</url>
      <content type="html"><![CDATA[<p>dyld&#x662F;&#x82F9;&#x679C;&#x51FA;&#x54C1;&#x7684;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5668;&#xFF0C;&#x662F;MacOS&#x548C;iOS&#x5E73;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x5B83;&#x8D1F;&#x8D23;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x4E2D;&#x7684;&#x88C5;&#x8F7D;&#x548C;&#x94FE;&#x63A5;&#xFF0C;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x63A2;&#x7D22;dyld&#x5728;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x89D2;&#x8272;&#x3002;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x4E2D;&#x6D89;&#x53CA;&#x5230;&#x4E86;dyld&#x3001;libsystem&#x3001;libdispatch&#x3001;objc&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6587;&#x7AE0;&#x4E2D;&#x5C06;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x7B80;&#x5316;&#x540E;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#x8D34;&#x51FA;&#x6765;&#xFF0C;&#x53EF;&#x8BFB;&#x6027;&#x975E;&#x5E38;&#x9AD8;&#xFF0C;&#x964D;&#x4F4E;&#x4E86;&#x95E8;&#x69DB;&#xFF0C;&#x6293;&#x5927;&#x653E;&#x5C0F;&#xFF0C;&#x4E3B;&#x65E8;&#x5728;&#x4E86;&#x89E3;&#x5176;&#x539F;&#x7406;&#x3002;</p><a id="more"></a><h2 id="dyld-startup"><a href="#dyld-startup" class="headerlink" title="dyld_startup"></a>dyld_startup</h2><p>&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x7684;&#x4E3B;&#x8981;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li>kern&#x521B;&#x5EFA;&#x8FDB;&#x7A0B;&#x5E76;&#x88C5;&#x8F7D;&#x4E3B;&#x7A0B;&#x5E8F;&#x548C;dyld&#xFF0C;&#x8BBE;&#x7F6E;&#x6808;&#x73AF;&#x5883;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x63A5;&#x529B;&#x68D2;&#x4EA4;&#x7ED9;dyld&#x3002;</li><li>&#x6839;&#x636E;&#x6808;&#x73AF;&#x5883;&#xFF0C;dyld&#x81EA;&#x4E3E;(bootstrap)&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x63A5;&#x529B;&#x68D2;&#x4EA4;&#x7ED9;dyld&#x4E3B;&#x51FD;&#x6570;&#x3002;</li><li>dyld&#x94FE;&#x63A5;&#x4E3B;&#x7A0B;&#x5E8F;&#xFF0C;&#x8FDB;&#x884C;&#x6838;&#x5FC3;&#x7CFB;&#x7EDF;&#x5E93;&#x3001;objc&#x81EA;&#x4E3E;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x63A5;&#x529B;&#x68D2;&#x4EA4;&#x7ED9;&#x4E3B;&#x7A0B;&#x5E8F;&#x4E3B;&#x51FD;&#x6570;&#x3002;</li><li>&#x4E3B;&#x7A0B;&#x5E8F;&#x8FDB;&#x5165;main&#x51FD;&#x6570;&#xFF0C;&#x5F00;&#x59CB;&#x4E3B;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x3002;</li></ol><p>&#x4E00;&#x5207;dyld&#x6E90;&#x7801;&#x7684;&#x5165;&#x53E3;&#x5728;<code>__dyld_start</code> &#x4E2D;&#xFF0C;&#x8FD9;&#x6BB5;&#x6C47;&#x7F16;&#x7ED3;&#x675F;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x3002;&#x7B2C;&#x4E00;&#x6B65;&#x4EA4;&#x7531;kern&#x5F15;&#x5BFC;&#xFF0C;&#x8FD9;&#x6BB5;&#x6C47;&#x7F16;&#x4F1A;&#x63A5;&#x6536;&#x63A5;&#x529B;&#x68D2;&#x5E76;&#x8FDB;&#x5165;<code>dyldbootstrap::start</code>&#xFF0C;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x7B2C;&#x4E8C;&#x6B65;&#x3002;</p><h2 id="dyldbootstrap-start"><a href="#dyldbootstrap-start" class="headerlink" title="dyldbootstrap::start"></a>dyldbootstrap::start</h2><p>dyld&#x4F5C;&#x4E3A;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5668;&#x5728;&#x53D1;&#x6325;&#x4F5C;&#x7528;&#x524D;&#x8981;&#x8FDB;&#x884C;&#x81EA;&#x4E3E;&#xFF0C;&#x8FD9;&#x6BB5;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x5728;kern&#x7559;&#x4E0B;&#x7684;&#x6808;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x8FDB;&#x884C;&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x63A5;&#x529B;&#x68D2;&#x4EA4;&#x7ED9;dyld&#x7684;&#x4E3B;&#x51FD;&#x6570;<code>dyld::_main</code>&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">//  This is code to bootstrap dyld.  This work in normally done for a program by dyld and crt.//  In dyld we have to do this manually.//uintptr_t start(const struct macho_header* appsMachHeader, int argc, const char* argv[],                 intptr_t slide, const struct macho_header* dyldsMachHeader,                uintptr_t* startGlue){    // if kernel had to slide dyld, we need to fix up load sensitive locations    // we have to do this before using any global variables    if ( slide != 0 ) {        rebaseDyld(dyldsMachHeader, slide);    }    // allow dyld to use mach messaging    mach_init();    // kernel sets up env pointer to be just past end of agv array    const char** envp = &amp;argv[argc+1];    // kernel sets up apple pointer to be just past end of envp array    const char** apple = envp;    while(*apple != NULL) { ++apple; }    ++apple;    // now that we are done bootstrapping dyld, call dyld&apos;s main    uintptr_t appsSlide = slideOfMainExecutable(appsMachHeader);    return dyld::_main(appsMachHeader, appsSlide, argc, argv, envp, apple, startGlue);}</code></pre><p><code>rebaseDyld</code>&#x4F1A;&#x5BF9;&#x6240;&#x6709;&#x5730;&#x5740;&#x6709;&#x5F15;&#x7528;&#x7684;&#x5730;&#x65B9;&#x8FDB;&#x884C;&#x57FA;&#x5740;&#x91CD;&#x7F6E;&#x3002;&#x5C06;&#x91CD;&#x5B9A;&#x4F4D;(relocation)&#x8868;&#x9879;&#x548C;<code>__LINKEDIT</code>&#x4E2D;&#x7684;non lazy indirect symbol pointers&#x76F8;&#x5BF9;&#x5730;&#x5740;&#x8C03;&#x6574;&#x4E3A;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#xFF0C;&#x6DFB;&#x52A0;slide&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">//// If the kernel does not load dyld at its preferred address, we need to apply // fixups to various initialized parts of the __DATA segment//static void rebaseDyld(const struct macho_header* mh, intptr_t slide){    // rebase non-lazy pointers (which all point internal to dyld, since dyld uses no shared libraries)    // and get interesting pointers into dyld    const uint32_t cmd_count = mh-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)(((char*)mh)+sizeof(macho_header));    const struct load_command* cmd = cmds;    const struct macho_segment_command* linkEditSeg = NULL;    const struct macho_segment_command* firstWritableSeg = NULL;    const struct dysymtab_command* dynamicSymbolTable = NULL;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_SEGMENT_COMMAND:                {                    const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;                    if ( strcmp(seg-&gt;segname, &quot;__LINKEDIT&quot;) == 0 )                        linkEditSeg = seg;                    const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));                    const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];                    for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                        const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                        if ( type == S_NON_LAZY_SYMBOL_POINTERS ) {                            // rebase non-lazy pointers (which all point internal to dyld, since dyld uses no shared libraries)                            const uint32_t pointerCount = (uint32_t)(sect-&gt;size / sizeof(uintptr_t));                            uintptr_t* const symbolPointers = (uintptr_t*)(sect-&gt;addr + slide);                            for (uint32_t j=0; j &lt; pointerCount; ++j) {                                symbolPointers[j] += slide;                            }                        }                    }                    if ( (firstWritableSeg == NULL) &amp;&amp; (seg-&gt;initprot &amp; VM_PROT_WRITE) )                        firstWritableSeg = seg;                }                break;            case LC_DYSYMTAB:                dynamicSymbolTable = (struct dysymtab_command *)cmd;                break;        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }    // use reloc&apos;s to rebase all random data pointers    const uintptr_t relocBase = firstWritableSeg-&gt;vmaddr + slide;    const relocation_info* const relocsStart = (struct relocation_info*)(linkEditSeg-&gt;vmaddr + slide + dynamicSymbolTable-&gt;locreloff - linkEditSeg-&gt;fileoff);    const relocation_info* const relocsEnd = &amp;relocsStart[dynamicSymbolTable-&gt;nlocrel];    for (const relocation_info* reloc=relocsStart; reloc &lt; relocsEnd; ++reloc) {        // update pointer by amount dyld slid        *((uintptr_t*)(reloc-&gt;r_address + relocBase)) += slide;    }}</code></pre><h2 id="dyld-main"><a href="#dyld-main" class="headerlink" title="dyld::_main"></a>dyld::_main</h2><p><code>dyld::_main</code>&#x4F5C;&#x4E3A;dyld&#x7684;&#x4E3B;&#x51FD;&#x6570;&#xFF0C;&#x6838;&#x5FC3;&#x8FC7;&#x7A0B;&#x90FD;&#x53D1;&#x751F;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;<code>dyld::_main</code>&#x4E3B;&#x8981;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li>&#x5BF9;&#x5DF2;&#x88C5;&#x8F7D;&#x7684;&#x4E3B;&#x7A0B;&#x5E8F;&#x94FE;&#x63A5;&#x3002;</li><li>&#x5BF9;&#x63D2;&#x5165;&#x7684;&#x52A8;&#x6001;&#x5E93;(<code>DYLD_INSERT_LIBRARIES</code>)&#x88C5;&#x8F7D;&#x3001;&#x94FE;&#x63A5;&#x3002;</li><li>&#x6838;&#x5FC3;&#x7CFB;&#x7EDF;&#x5E93;(lib&#x2026;)&#x3001;objc&#x81EA;&#x4E3E;(<code>initializeMainExecutable</code>)&#x3002;</li><li>&#x83B7;&#x53D6;&#x4E3B;&#x7A0B;&#x5E8F;main&#x51FD;&#x6570;&#x5730;&#x5740;&#x5E76;&#x8FD4;&#x56DE;&#x3002;</li></ol><p>&#x4E3B;&#x7A0B;&#x5E8F;&#x7684;&#x94FE;&#x63A5;&#x4E0E;&#x52A8;&#x6001;&#x5E93;&#x7684;&#x94FE;&#x63A5;&#x6B65;&#x9AA4;&#x7C7B;&#x4F3C;&#xFF0C;<code>dyld::_main</code>&#x62FF;&#x5230;&#x5DF2;&#x7ECF;&#x88C5;&#x8F7D;&#x597D;&#x7684;&#x4E3B;&#x7A0B;&#x5E8F;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4E3B;&#x7A0B;&#x5E8F;&#x5E93;&#x5E76;&#x94FE;&#x63A5;&#xFF0C;&#x5176;&#x4E2D;<code>weakBind</code>&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x7B49;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5E93;&#x90FD;&#x94FE;&#x63A5;&#x5B8C;&#x6BD5;&#x518D;&#x8FDB;&#x884C;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x63D2;&#x5165;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x4F1A;&#x5728;&#x4E3B;&#x7A0B;&#x5E8F;&#x94FE;&#x63A5;&#x524D;&#xFF0C;&#x5148;&#x8FDB;&#x884C;&#x88C5;&#x8F7D;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x5728;&#x7B26;&#x53F7;flat namespace&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x63D2;&#x5165;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x4E2D;&#x7684;&#x7B49;&#x540C;&#x7B26;&#x53F7;&#x4F1A;&#x8986;&#x76D6;&#x4E3B;&#x7A0B;&#x5E8F;&#x53CA;&#x4E3B;&#x7A0B;&#x5E8F;&#x94FE;&#x63A5;&#x5E93;&#x4E2D;&#x7684;&#x7B49;&#x540C;&#x7B26;&#x53F7;&#x3002;&#x800C;&#x540E;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#xFF0C;&#x4FDD;&#x8BC1;&#x63D2;&#x5165;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x6240;&#x4F9D;&#x8D56;&#x5E93;&#x4E0D;&#x4F1A;&#x5148;&#x4E8E;&#x4E3B;&#x7A0B;&#x5E8F;&#x6240;&#x4F9D;&#x8D56;&#x5E93;&#x3002;</p><p>&#x4E3B;&#x7A0B;&#x5E8F;&#x4ECE;<code>LC_MAIN</code>&#x6216;<code>LC_UNIXTHREAD</code>cmd&#x4E2D;&#x83B7;&#x53D6;main&#x51FD;&#x6570;&#x5730;&#x5740;&#x3002;</p><p>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">//// Entry point for dyld.  The kernel loads dyld and jumps to __dyld_start which// sets up some registers and call this function.//// Returns address of main() in target program which __dyld_start jumps to//uintptr_t_main(const macho_header* mainExecutableMH, uintptr_t mainExecutableSlide,         int argc, const char* argv[], const char* envp[], const char* apple[],         uintptr_t* startGlue){    uintptr_t result = 0;    sMainExecutableMachHeader = mainExecutableMH;    try {        // instantiate ImageLoader for main executable        sMainExecutable = instantiateFromLoadedImage(mainExecutableMH, mainExecutableSlide, sExecPath);        // load any inserted libraries        if    ( sEnv.DYLD_INSERT_LIBRARIES != NULL ) {            for (const char* const* lib = sEnv.DYLD_INSERT_LIBRARIES; *lib != NULL; ++lib)                loadInsertedDylib(*lib);        }        // record count of inserted libraries so that a flat search will look at         // inserted libraries, then main, then others.        sInsertedDylibCount = sAllImages.size()-1;        // link main executable        link(sMainExecutable, sEnv.DYLD_BIND_AT_LAUNCH, true, ImageLoader::RPathChain(NULL, NULL));        // link any inserted libraries        // do this after linking main executable so that any dylibs pulled in by inserted         // dylibs (e.g. libSystem) will not be in front of dylibs the program uses        if ( sInsertedDylibCount &gt; 0 ) {            for(unsigned int i=0; i &lt; sInsertedDylibCount; ++i) {                ImageLoader* image = sAllImages[i+1];                link(image, sEnv.DYLD_BIND_AT_LAUNCH, true, ImageLoader::RPathChain(NULL, NULL));                image-&gt;setNeverUnloadRecursive();            }            // only INSERTED libraries can interpose            // register interposing info after all inserted libraries are bound so chaining works            for(unsigned int i=0; i &lt; sInsertedDylibCount; ++i) {                ImageLoader* image = sAllImages[i+1];                image-&gt;registerInterposing();            }        }        for (int i=sInsertedDylibCount+1; i &lt; sAllImages.size(); ++i) {            ImageLoader* image = sAllImages[i];            if ( image-&gt;inSharedCache() )                continue;            image-&gt;registerInterposing();        }        sMainExecutable-&gt;weakBind(gLinkContext);        // run all initializers        initializeMainExecutable();         // find entry point for main executable        result = (uintptr_t)sMainExecutable-&gt;getThreadPC();        if ( result != 0 ) {            // main executable uses LC_MAIN, needs to return to glue in libdyld.dylib            if ( (gLibSystemHelpers != NULL) &amp;&amp; (gLibSystemHelpers-&gt;version &gt;= 9) )                *startGlue = (uintptr_t)gLibSystemHelpers-&gt;startGlueToCallExit;        }        else {            // main executable uses LC_UNIXTHREAD, dyld needs to let &quot;start&quot; in program set up for main()            result = (uintptr_t)sMainExecutable-&gt;getMain();            *startGlue = 0;        }    }    catch(const char* message) {        ...    }    return result;}</code></pre><p>&#x7ECF;&#x8FC7;<code>initializeMainExecutable</code>&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#xFF0C;&#x6838;&#x5FC3;&#x7CFB;&#x7EDF;&#x5E93;(lib&#x2026;)&#x3001;objc&#x81EA;&#x4E3E;&#xFF0C;&#x81EA;&#x4E3E;&#x540E;&#x624D;&#x751F;&#x6548;&#x3002;&#x5148;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;(static initializers)&#xFF0C;&#x540E;&#x8FDB;&#x884C;&#x7EC8;&#x6B62;&#x5316;(static terminator)&#x3002;&#x5148;&#x521D;&#x59CB;&#x5316;&#x63D2;&#x5165;&#x7684;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x518D;&#x521D;&#x59CB;&#x5316;&#x4E3B;&#x7A0B;&#x5E8F;&#xFF0C;&#x6700;&#x540E;&#x4EE5;&#x540C;&#x6837;&#x987A;&#x5E8F;&#x7EC8;&#x6B62;&#x5316;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void initializeMainExecutable(){    // run initialzers for any inserted dylibs    const size_t rootCount = sImageRoots.size();    if ( rootCount &gt; 1 ) {        for(size_t i=1; i &lt; rootCount; ++i) {            sImageRoots[i]-&gt;recursiveInitialization(gLinkContext, mach_thread_self());        }    }    // run initializers for main executable and everything it brings up     sMainExecutable-&gt;recursiveInitialization(gLinkContext, mach_thread_self());    // register cxa_atexit() handler to run static terminators in all loaded images when this process exits    if ( gLibSystemHelpers != NULL )         (*gLibSystemHelpers-&gt;cxa_atexit)(&amp;runAllStaticTerminators, NULL, NULL);}</code></pre><p><code>recursiveInitialization</code>&#x4EE5;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x7684;&#x5F15;&#x7528;&#x6DF1;&#x5EA6;&#x9012;&#x5F52;&#x521D;&#x59CB;&#x5316;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x5148;&#x521D;&#x59CB;&#x5316;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x540E;&#x521D;&#x59CB;&#x5316;&#x88AB;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x5E76;&#x5728;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E3A;&#x7EC8;&#x6B62;&#x5316;&#x8BB0;&#x5F55;&#x987A;&#x5E8F;&#x3002;<code>runAllStaticTerminators</code>&#x5219;&#x4EE5;&#x8BB0;&#x5F55;&#x7684;&#x987A;&#x5E8F;&#x7EC8;&#x6B62;&#x5316;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoader::recursiveInitialization(const LinkContext&amp; context, mach_port_t this_thread){    try {        // initialize lower level libraries first        for(unsigned int i=0; i &lt; libraryCount(); ++i) {            ImageLoader* dependentImage = libImage(i);            if ( dependentImage != NULL ) {                if ( dependentImage-&gt;fDepth &gt;= fDepth ) {                    dependentImage-&gt;recursiveInitialization(context, this_thread);                }            }        }        // record termination order        if ( this-&gt;needsTermination() )            context.terminationRecorder(this);        this-&gt;doInitialization(context);    }    catch (const char* msg) {        ...    }    }static void runAllStaticTerminators(void* extra){    try {        const size_t imageCount = sImageFilesNeedingTermination.size();        for(size_t i=imageCount; i &gt; 0; --i){            ImageLoader* image = sImageFilesNeedingTermination[i-1];            image-&gt;doTermination(gLinkContext);        }        sImageFilesNeedingTermination.clear();    }    catch (const char* msg) {        ...    }}</code></pre><p>&#x521D;&#x59CB;&#x5316;&#x6700;&#x7EC8;&#x6536;&#x655B;&#x5230;<code>doInitialization</code>&#xFF0C;<code>doInitialization</code>&#x4F1A;&#x8FD0;&#x884C;&#x5E93;&#x7684;Routine(<code>doImageInit</code>)&#x548C;ModInitFunction(<code>doModInitFunctions</code>)&#x3002;&#x7EC8;&#x6B62;&#x5316;&#x6700;&#x7EC8;&#x6536;&#x655B;&#x5230;<code>doTermination</code>&#xFF0C;<code>doTermination</code>&#x4F1A;&#x8FD0;&#x884C;&#x5E93;&#x7684;ModTermFunction&#x3002;&#x8FD9;&#x51E0;&#x4E2A;&#x8FC7;&#x7A0B;&#x90FD;&#x662F;&#x4ECE;segment&#x4E2D;&#x627E;&#x51FA;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x7684;&#x5730;&#x5740;&#x5E76;&#x8C03;&#x7528;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::doImageInit(const LinkContext&amp; context){    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_ROUTINES_COMMAND:                Initializer func = (Initializer)(((struct macho_routines_command*)cmd)-&gt;init_address + fSlide);                func(context.argc, context.argv, context.envp, context.apple, &amp;context.programVars);                break;        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}void ImageLoaderMachO::doModInitFunctions(const LinkContext&amp; context){    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        if ( cmd-&gt;cmd == LC_SEGMENT_COMMAND ) {            const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;            const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));            const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];            for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                if ( type == S_MOD_INIT_FUNC_POINTERS ) {                    Initializer* inits = (Initializer*)(sect-&gt;addr + fSlide);                    const size_t count = sect-&gt;size / sizeof(uintptr_t);                    for (size_t i=0; i &lt; count; ++i) {                        Initializer func = inits[i];                        func(context.argc, context.argv, context.envp, context.apple, &amp;context.programVars);                    }                }            }        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}void ImageLoaderMachO::doTermination(const LinkContext&amp; context){    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        if ( cmd-&gt;cmd == LC_SEGMENT_COMMAND ) {            const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;            const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));            const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];            for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                if ( type == S_MOD_TERM_FUNC_POINTERS ) {                    Terminator* terms = (Terminator*)(sect-&gt;addr + fSlide);                    const size_t count = sect-&gt;size / sizeof(uintptr_t);                    for (size_t i=count; i &gt; 0; --i) {                        Terminator func = terms[i-1];                        func();                    }                }            }        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><p>&#x7ECF;&#x8FC7;<code>_attribute__((constructor))</code>&#x4FEE;&#x9970;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x88AB;&#x52A0;&#x5165;ModInitFunction&#x4E2D;&#xFF0C;&#x800C;&#x7ECF;&#x8FC7;<code>_attribute__((destructor))</code>&#x4FEE;&#x9970;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x88AB;&#x52A0;&#x5165;ModTermFunction&#x4E2D;&#xFF0C;&#x90FD;&#x4F1A;&#x5728;&#x6B64;&#x6B65;&#x88AB;&#x8C03;&#x7528;&#x3002;</p><p>&#x6838;&#x5FC3;&#x7CFB;&#x7EDF;&#x5E93;&#x5C31;&#x662F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6CE8;&#x5165;&#x81EA;&#x4E3E;&#xFF0C;&#x4EE3;&#x7801;&#x5728;<a href="https://opensource.apple.com/source/Libsystem/" target="_blank" rel="noopener">libSystem</a>&#x4E2D;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">// system library initialisersextern void bootstrap_init(void);        // from liblaunch.dylibextern void mach_init(void);            // from libsystem_mach.dylibextern void pthread_init(void);            // from libc.aextern void __libc_init(const struct ProgramVars *vars, void (*atfork_prepare)(void), void (*atfork_parent)(void), void (*atfork_child)(void), const char *apple[]);    // from libc.aextern void __keymgr_initializer(void);        // from libkeymgr.aextern void _dyld_initializer(void);        // from libdyld.aextern void libdispatch_init(void);        // from libdispatch.aextern void _libxpc_initializer(void);        // from libxpc/* * libsyscall_initializer() initializes all of libSystem.dylib &lt;rdar://problem/4892197&gt; */static __attribute__((constructor)) void libSystem_initializer(int argc, const char* argv[], const char* envp[], const char* apple[], const struct ProgramVars* vars){    _libkernel_functions_t libkernel_funcs = {        .get_reply_port = _mig_get_reply_port,        .set_reply_port = _mig_set_reply_port,        .get_errno = __error,        .set_errno = cthread_set_errno_self,        .dlsym = dlsym,    };    _libkernel_init(libkernel_funcs);    bootstrap_init();    mach_init();    pthread_init();    __libc_init(vars, libSystem_atfork_prepare, libSystem_atfork_parent, libSystem_atfork_child, apple);    __keymgr_initializer();    _dyld_initializer();    libdispatch_init();    _libxpc_initializer();}</code></pre><p>&#x5176;&#x4E2D;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5E93;&#x5305;&#x62EC;&#xFF1A;<code>libdispatch</code>&#x3001;<code>libxpc</code>&#x3001;<code>libsystem_mach</code>&#x3001;<code>liblaunch</code>&#x3001;<code>libc</code>&#x3001;<code>libkeymgr</code>&#x7B49;&#x3002;objc&#x7684;&#x81EA;&#x4E3E;&#x5728;<code>libdispatch_init</code>&#x4E2D;&#xFF0C;&#x4EE3;&#x7801;&#x5728;<a href="https://opensource.apple.com/tarballs/libdispatch/" target="_blank" rel="noopener">libdispatch</a>&#x4E2D;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">libdispatch_init(void){#if DISPATCH_USE_THREAD_LOCAL_STORAGE    _dispatch_thread_key_create(&amp;__dispatch_tsd_key, _libdispatch_tsd_cleanup);#else    _dispatch_thread_key_create(&amp;dispatch_priority_key, NULL);    _dispatch_thread_key_create(&amp;dispatch_r2k_key, NULL);    _dispatch_thread_key_create(&amp;dispatch_queue_key, _dispatch_queue_cleanup);    _dispatch_thread_key_create(&amp;dispatch_frame_key, _dispatch_frame_cleanup);    _dispatch_thread_key_create(&amp;dispatch_cache_key, _dispatch_cache_cleanup);    _dispatch_thread_key_create(&amp;dispatch_context_key, _dispatch_context_cleanup);    _dispatch_thread_key_create(&amp;dispatch_pthread_root_queue_observer_hooks_key,            NULL);    _dispatch_thread_key_create(&amp;dispatch_basepri_key, NULL);#if DISPATCH_INTROSPECTION    _dispatch_thread_key_create(&amp;dispatch_introspection_key , NULL);#elif DISPATCH_PERF_MON    _dispatch_thread_key_create(&amp;dispatch_bcounter_key, NULL);#endif    _dispatch_thread_key_create(&amp;dispatch_wlh_key, _dispatch_wlh_cleanup);    _dispatch_thread_key_create(&amp;dispatch_voucher_key, _voucher_thread_cleanup);    _dispatch_thread_key_create(&amp;dispatch_deferred_items_key,            _dispatch_deferred_items_cleanup);    _dispatch_queue_set_current(&amp;_dispatch_main_q);    _dispatch_queue_set_bound_thread(&amp;_dispatch_main_q);    _dispatch_hw_config_init();    _dispatch_time_init();    _dispatch_vtable_init();    _os_object_init();    _voucher_init();    _dispatch_introspection_init();}</code></pre><p>&#x5728;&#x832B;&#x832B;&#x521D;&#x59CB;&#x5316;&#x4E2D;&#xFF0C;<code>_os_object_init</code>&#x8FDB;&#x884C;&#x4E86;objc&#x7684;&#x81EA;&#x4E3E;&#xFF0C;<code>_os_object_init</code>&#x4E3B;&#x8FC7;&#x7A0B;&#x662F;&#x5728;<a href="https://opensource.apple.com/tarballs/objc4/" target="_blank" rel="noopener">objc4</a>&#x4EE3;&#x7801;&#x4E2D;&#x7684;<code>_objc_init</code>&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/*********************************************************************** _objc_init* Bootstrap initialization. Registers our image notifier with dyld.* Called by libSystem BEFORE library initialization time**********************************************************************/void _objc_init(void){    static bool initialized = false;    if (initialized) return;    initialized = true;    // fixme defer initialization until an objc-using image is found?    environ_init();    tls_init();    static_init();    lock_init();    exception_init();    _dyld_objc_notify_register(&amp;map_images, load_images, unmap_image);}</code></pre><p><code>_objc_init</code>&#x5728;dyld&#x4E2D;&#x6CE8;&#x518C;&#x4E86;<code>map_images</code>&#x3001;<code>load_images</code> &#x3001;<code>unmap_image</code>&#xFF0C;&#x5206;&#x522B;&#x8FDB;&#x884C;objc&#x81EA;&#x4E3E;&#x3001;&#x8C03;&#x7528;Load&#x65B9;&#x6CD5;&#x3001;&#x6E05;&#x7406;&#x73B0;&#x573A;&#x3002;</p><h3 id="map-images"><a href="#map-images" class="headerlink" title="map_images"></a>map_images</h3><p><code>map_images</code>&#x4F1A;&#x8FDB;&#x5165;<code>_read_images</code>&#xFF0C;<code>_read_images</code>&#x4F1A;&#x4ECE;&#x5E93;&#x4E2D;&#x76F8;&#x5E94;segment&#x8BFB;&#x51FA;class&#x3001;protocol&#x3001;category&#x7B49;&#x4FE1;&#x606F;&#x5E76;&#x8F7D;&#x5165;runtime&#xFF0C;&#x8FD9;&#x5C31;&#x662F;objc&#x81EA;&#x4E3E;&#x7684;&#x6838;&#x5FC3;&#x8FC7;&#x7A0B;&#x3002;class&#x3001;protocol&#x3001;category&#x8981;&#x5411;runtime&#x6CE8;&#x518C;&#x7ED3;&#x6784;&#xFF0C;category&#x8FD8;&#x8981;&#x4F9D;&#x9644;&#x5230;&#x76F8;&#x5E94;class&#x7ED3;&#x6784;&#x3002;</p><p>&#x6B64;&#x8FC7;&#x7A0B;&#x4E00;&#x76F4;&#x56F4;&#x7ED5;&#x7740;class&#x7ED3;&#x6784;&#xFF0C;class&#x7ED3;&#x6784;&#x4E2D;&#x7684;data&#x53EF;&#x80FD;&#x4E3A;&#x53EA;&#x8BFB;&#x7ED3;&#x6784;<code>class_ro_t</code>&#x6216;&#x53EF;&#x8BFB;&#x5199;&#x7ED3;&#x6784;<code>class_rw_t</code>&#xFF0C;data&#x4E3A;<code>class_ro_t</code>&#x7ED3;&#x6784;&#x7684;class&#x53EB;&#x505A;unrealized class&#xFF0C;data&#x4E3A;<code>class_rw_t</code>&#x7ED3;&#x6784;&#x7684;class&#x53EB;&#x505A;realized class&#xFF0C;&#x8981;&#x4F7F;&#x7528;class&#xFF0C;<code>class_ro_t</code>&#x90FD;&#x8981;&#x7ECF;&#x8FC7;resolve&#x8F6C;&#x5316;&#x4E3A;<code>class_rw_t</code>&#xFF0C;&#x5373;&#x5BF9;class&#x8FDB;&#x884C;realize&#x3002;class&#x7ED3;&#x6784;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x80FD;&#x7ECF;&#x8FC7;&#x4E86;resolve&#x5E76;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x8981;&#x8FDB;&#x884C;realize&#xFF0C;&#x8FD9;&#x6837;&#x7684;class&#x5B66;&#x540D;&#x53EB;future class&#x3002;realize&#x53EF;&#x4EE5;&#x4F7F;&#x7528;lazy&#x6280;&#x672F;&#xFF0C;&#x533A;&#x5206;&#x4E3A;lazy&#x548C;non-lazy&#xFF0C;non-lazy&#x8981;&#x6C42;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x8FDB;&#x884C;realize&#x3002;</p><p>&#x5728;&#x6B64;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x8981;&#x5BF9;future class&#x548C;non-lazy class&#x8FDB;&#x884C;realize&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/********************************************************************* _read_images* Perform initial processing of the headers in the linked * list beginning with headerList. ** Called by: map_images_nolock** Locking: runtimeLock acquired by map_images**********************************************************************/void _read_images(header_info hList, uint32_t hCount, int totalClasses, int unoptimizedTotalClasses){    header_info *hi;    uint32_t hIndex;    size_t count;    size_t i;    Class *resolvedFutureClasses = nil;    size_t resolvedFutureClassCount = 0;    static bool doneOnce;#define EACH_HEADER \    hIndex = 0;         \    hIndex &lt; hCount &amp;&amp; (hi = hList[hIndex]); \    hIndex++    if (!doneOnce) {        doneOnce = YES;        // namedClasses        // Preoptimized classes don&apos;t go in this table.        // 4/3 is NXMapTable&apos;s load factor        int namedClassesSize =             (isPreoptimized() ? unoptimizedTotalClasses : totalClasses) * 4 / 3;        gdb_objc_realized_classes =            NXCreateMapTable(NXStrValueMapPrototype, namedClassesSize);    }    // Discover classes. Fix up unresolved future classes. Mark bundle classes.    for (EACH_HEADER) {        classref_t *classlist = _getObjc2ClassList(hi, &amp;count);        for (i = 0; i &lt; count; i++) {            Class cls = (Class)classlist[i];            Class newCls = readClass(cls);            if (newCls != cls  &amp;&amp;  newCls) {                // Class was moved but not deleted. Currently this occurs                 // only when the new class resolved a future class.                // Non-lazily realize the class below.                resolvedFutureClasses = (Class *)                    realloc(resolvedFutureClasses,                             (resolvedFutureClassCount+1) * sizeof(Class));                resolvedFutureClasses[resolvedFutureClassCount++] = newCls;            }        }    }    // Discover protocols. Fix up protocol refs.    for (EACH_HEADER) {        extern objc_class OBJC_CLASS_$_Protocol;        Class cls = (Class)&amp;OBJC_CLASS_$_Protocol;        assert(cls);        NXMapTable *protocol_map = protocols();        bool isPreoptimized = hi-&gt;isPreoptimized();        bool isBundle = hi-&gt;isBundle();        protocol_t **protolist = _getObjc2ProtocolList(hi, &amp;count);        for (i = 0; i &lt; count; i++) {            readProtocol(protolist[i], cls, protocol_map,                          isPreoptimized, isBundle);        }    }    // Realize non-lazy classes (for +load methods and static instances)    for (EACH_HEADER) {        classref_t *classlist =             _getObjc2NonlazyClassList(hi, &amp;count);        for (i = 0; i &lt; count; i++) {            Class cls = remapClass(classlist[i]);            if (!cls) continue;            realizeClass(cls);        }    }    // Realize newly-resolved future classes, in case CF manipulates them    if (resolvedFutureClasses) {        for (i = 0; i &lt; resolvedFutureClassCount; i++) {            realizeClass(resolvedFutureClasses[i]);            resolvedFutureClasses[i]-&gt;setInstancesRequireRawIsa(false/*inherited*/);        }        free(resolvedFutureClasses);    }    // Discover categories.     for (EACH_HEADER) {        category_t **catlist =             _getObjc2CategoryList(hi, &amp;count);        for (i = 0; i &lt; count; i++) {            category_t *cat = catlist[i];            Class cls = remapClass(cat-&gt;cls);            if (!cls) {                continue;            }            // Process this category.             // First, register the category with its target class.             // Then, rebuild the class&apos;s method lists (etc) if             // the class is realized.             if (cat-&gt;instanceMethods ||  cat-&gt;protocols                  ||  cat-&gt;instanceProperties)             {                NXMapTable *cats = unattachedCategories();                category_list *list = (category_list *)NXMapGet(cats, cls);                NXMapInsert(cats, cls, list);                if (cls-&gt;isRealized()) {                    remethodizeClass(cls);                }            }            if (cat-&gt;classMethods  ||  cat-&gt;protocols)             {                NXMapTable *cats = unattachedCategories();                category_list *list = (category_list *)NXMapGet(cats, cls-&gt;ISA());                NXMapInsert(cats, cls-&gt;ISA(), list);                if (cls-&gt;ISA()-&gt;isRealized()) {                    remethodizeClass(cls-&gt;ISA());                }            }        }}</code></pre><p>&#x5176;&#x4E2D;<code>_getObjc2ClassList</code>&#x3001;<code>_getObjc2ProtocolList</code>&#x3001;<code>_getObjc2NonlazyClassList</code>&#x3001;<code>_getObjc2CategoryList</code> &#x8FD9;&#x51E0;&#x4E2A;&#x8FC7;&#x7A0B;&#x90FD;&#x662F;&#x4ECE;&#x5E93;&#x4E2D;&#x76F8;&#x5E94;segement&#x8BFB;&#x51FA;&#x4FE1;&#x606F;&#x3002;</p><p><code>readClass</code>&#x3001;<code>readProtocol</code>&#x8FD9;&#x51E0;&#x4E2A;&#x8FC7;&#x7A0B;&#x662F;&#x5411;<code>gdb_objc_realized_classes</code>&#x3001;<code>protocol_map</code>&#x6CE8;&#x518C;&#x7ED3;&#x6784;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/************************************************************************ readClass* Read a class and metaclass as written by a compiler.* Returns the new class pointer. This could be: * - cls* - nil  (cls has a missing weak-linked superclass)* - something else (space for this class was reserved by a future class)** Note that all work performed by this function is preflighted by * mustReadClasses(). Do not change this function without updating that one.** Locking: runtimeLock acquired by map_images or objc_readClassPair**********************************************************************/Class readClass(Class cls){    const char *mangledName = cls-&gt;mangledName();    Class replacing = nil;    if (Class newCls = popFutureNamedClass(mangledName)) {        // This name was previously allocated as a future class.        // Copy objc_class to future class&apos;s struct.        // Preserve future&apos;s rw data block.        class_rw_t *rw = newCls-&gt;data();        const class_ro_t *old_ro = rw-&gt;ro;        memcpy(newCls, cls, sizeof(objc_class));        rw-&gt;ro = (class_ro_t *)newCls-&gt;data();        newCls-&gt;setData(rw);        freeIfMutable((char *)old_ro-&gt;name);        free((void *)old_ro);        addRemappedClass(cls, newCls);        replacing = cls;        cls = newCls;    }    Class old = getClass(mangledName);    if (!old || old == replacing) {        NXMapInsert(gdb_objc_realized_classes, mangledName, cls);    }    return cls;}/************************************************************************ readProtocol* Read a protocol as written by a compiler.**********************************************************************/static voidreadProtocol(protocol_t *newproto, Class protocol_class,             NXMapTable *protocol_map){    protocol_t *oldproto = (protocol_t *)getProtocol(newproto-&gt;mangledName);    if (oldproto) {        return;    }    newproto-&gt;initIsa(protocol_class);    NXMapInsert(protocol_map, installedproto-&gt;mangledName,                  installedproto);}</code></pre><p>&#x6574;&#x4F53;&#x6D41;&#x7A0B;&#x6E05;&#x6670;&#x540E;&#xFF0C;&#x518D;&#x8FD1;&#x8DDD;&#x79BB;&#x89C2;&#x5BDF;&#x4E00;&#x4E0B;&#x5BF9;class&#x7ED3;&#x6784;&#x5904;&#x7406;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x5BF9;class&#x8FDB;&#x884C;realize&#xFF0C;&#x5305;&#x542B;&#x5BF9;class&#x7ED3;&#x6784;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#xFF1A;</p><ol><li>resolve class&#x3002;</li><li>realize class&#x7684;super class&#x548C;meta class&#x3002;</li><li>&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;class&#x548C;super class&#x3001;meta class&#x7684;&#x5173;&#x7CFB;&#x3002;</li><li>&#x91CD;&#x65B0;&#x8BA1;&#x7B97;instance variable layout&#x3002;</li><li>&#x5C06;class&#x7ED3;&#x6784;&#x4E2D;&#x7684;<code>class_ro_t</code>&#x7ED3;&#x6784;&#x4E2D;&#x7684;method&#x3001;property&#x3001;protocol&#x5B89;&#x88C5;&#x5230;<code>class_rw_t</code>&#x7ED3;&#x6784;&#xFF0C;&#x5E76;&#x4F9D;&#x9644;category&#x3002;</li></ol><p><code>realizeClass</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/************************************************************************ realizeClass* Performs first-time initialization on class cls, * including allocating its read-write data.* Returns the real class structure for the class. * Locking: runtimeLock must be write-locked by the caller**********************************************************************/static Class realizeClass(Class cls){    const class_ro_t *ro;    class_rw_t *rw;    Class supercls;    Class metacls;    bool isMeta;    if (!cls) return nil;    if (cls-&gt;isRealized()) return cls;    // fixme verify class is not in an un-dlopened part of the shared cache?    ro = (const class_ro_t *)cls-&gt;data();    if (ro-&gt;flags &amp; RO_FUTURE) {        // This was a future class. rw data is already allocated.        rw = cls-&gt;data();        ro = cls-&gt;data()-&gt;ro;        cls-&gt;changeInfo(RW_REALIZED|RW_REALIZING, RW_FUTURE);    } else {        // Normal class. Allocate writeable class data.        rw = (class_rw_t *)calloc(sizeof(class_rw_t), 1);        rw-&gt;ro = ro;        rw-&gt;flags = RW_REALIZED|RW_REALIZING;        cls-&gt;setData(rw);    }    isMeta = ro-&gt;flags &amp; RO_META;    // Realize superclass and metaclass, if they aren&apos;t already.    // This needs to be done after RW_REALIZED is set above, for root classes.    // This needs to be done after class index is chosen, for root metaclasses.    supercls = realizeClass(remapClass(cls-&gt;superclass));    metacls = realizeClass(remapClass(cls-&gt;ISA()));    // Update superclass and metaclass in case of remapping    cls-&gt;superclass = supercls;    cls-&gt;initClassIsa(metacls);    // Reconcile instance variable offsets / layout.    // This may reallocate class_ro_t, updating our ro variable.    if (supercls  &amp;&amp;  !isMeta) reconcileInstanceVariables(cls, supercls, ro);    // Set fastInstanceSize if it wasn&apos;t set already.    cls-&gt;setInstanceSize(ro-&gt;instanceSize);    // Copy some flags from ro to rw    if (ro-&gt;flags &amp; RO_HAS_CXX_STRUCTORS) {        cls-&gt;setHasCxxDtor();        if (! (ro-&gt;flags &amp; RO_HAS_CXX_DTOR_ONLY)) {            cls-&gt;setHasCxxCtor();        }    }    // Connect this class to its superclass&apos;s subclass lists    if (supercls) {        addSubclass(supercls, cls);    } else {        addRootClass(cls);    }    // Attach categories    methodizeClass(cls);    return cls;}</code></pre><p>&#x7B2C;&#x56DB;&#x6B65;&#x5728;&#x8BBE;&#x7F6E;&#x4E86;super class&#x540E;&#xFF0C;&#x5982;&#x679C;super class&#x7A7A;&#x95F4;&#x4E0E;&#x539F;class&#x7A7A;&#x95F4;&#x91CD;&#x53E0;&#xFF0C;&#x9700;&#x8981;&#x5BF9;&#x539F;class&#x7684;&#x5B9E;&#x4F8B;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x5176;&#x4F4D;&#x7F6E;&#x5E76;&#x8C03;&#x6574;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">static void reconcileInstanceVariables(Class cls, Class supercls, const class_ro_t*&amp; ro) {    class_rw_t *rw = cls-&gt;data();    // Non-fragile ivars - reconcile this class with its superclass    const class_ro_t *super_ro = supercls-&gt;data()-&gt;ro;    if (ro-&gt;instanceStart &gt;= super_ro-&gt;instanceSize) {        // Superclass has not overgrown its space. We&apos;re done here.        return;    }    if (ro-&gt;instanceStart &lt; super_ro-&gt;instanceSize) {        // Superclass has changed size. This class&apos;s ivars must move.        // Also slide layout bits in parallel.        // This code is incapable of compacting the subclass to         //   compensate for a superclass that shrunk, so don&apos;t do that.        class_ro_t *ro_w = make_ro_writeable(rw);        ro = rw-&gt;ro;        moveIvars(ro_w, super_ro-&gt;instanceSize);    } }/************************************************************************ moveIvars* Slides a class&apos;s ivars to accommodate the given superclass size.* Ivars are NOT compacted to compensate for a superclass that shrunk.* Locking: runtimeLock must be held by the caller.**********************************************************************/static void moveIvars(class_ro_t *ro, uint32_t superSize){    uint32_t diff;    assert(superSize &gt; ro-&gt;instanceStart);    diff = superSize - ro-&gt;instanceStart;    if (ro-&gt;ivars) {        // Find maximum alignment in this class&apos;s ivars        uint32_t maxAlignment = 1;        for (const auto&amp; ivar : *ro-&gt;ivars) {            if (!ivar.offset) continue;  // anonymous bitfield            uint32_t alignment = ivar.alignment();            if (alignment &gt; maxAlignment) maxAlignment = alignment;        }        // Compute a slide value that preserves that alignment        uint32_t alignMask = maxAlignment - 1;        diff = (diff + alignMask) &amp; ~alignMask;        // Slide all of this class&apos;s ivars en masse        for (const auto&amp; ivar : *ro-&gt;ivars) {            if (!ivar.offset) continue;  // anonymous bitfield            uint32_t oldOffset = (uint32_t)*ivar.offset;            uint32_t newOffset = oldOffset + diff;            *ivar.offset = newOffset;        }    }    *(uint32_t *)&amp;ro-&gt;instanceStart += diff;    *(uint32_t *)&amp;ro-&gt;instanceSize += diff;}</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x6B65;&#x7684;&#x5904;&#x7406;&#x90FD;&#x5728;<code>methodizeClass</code>&#x4E2D;&#xFF0C;&#x5148;&#x5C06;<code>class_ro_t</code>&#x7ED3;&#x6784;&#x4E2D;&#x7684;method&#x3001;property&#x3001;protocol&#x5B89;&#x88C5;&#x5230;<code>class_rw_t</code>&#xFF0C;&#x540E;&#x4F9D;&#x9644;category&#xFF0C;&#x800C;<code>_read_images</code>&#x4E2D;&#x7684;<code>remethodizeClass</code>&#x4E5F;&#x662F;&#x7528;&#x540C;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#x4F9D;&#x9644;category&#xFF0C;<code>methodizeClass</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/************************************************************************ methodizeClass* Fixes up cls&apos;s method list, protocol list, and property list.* Attaches any outstanding categories.* Locking: runtimeLock must be held by the caller**********************************************************************/static void methodizeClass(Class cls){    bool isMeta = cls-&gt;isMetaClass();    auto rw = cls-&gt;data();    auto ro = rw-&gt;ro;    // Install methods and properties that the class implements itself.    method_list_t *list = ro-&gt;baseMethods();    if (list) {        prepareMethodLists(cls, &amp;list, 1, YES, isBundleClass(cls));        rw-&gt;methods.attachLists(&amp;list, 1);    }    property_list_t *proplist = ro-&gt;baseProperties;    if (proplist) {        rw-&gt;properties.attachLists(&amp;proplist, 1);    }    protocol_list_t *protolist = ro-&gt;baseProtocols;    if (protolist) {        rw-&gt;protocols.attachLists(&amp;protolist, 1);    }    // Attach categories.    category_list *cats = unattachedCategoriesForClass(cls, true /*realizing*/);    attachCategories(cls, cats, false /*don&apos;t flush caches*/);}</code></pre><p>&#x4F9D;&#x9644;category&#x5C31;&#x662F;&#x5C06;category&#x7684;method&#x3001;property&#x3001;protocol append&#x5230;&#x539F;class&#x4E2D;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">// Attach method lists and properties and protocols from categories to a class.// Assumes the categories in cats are all loaded and sorted by load order, // oldest categories first.static void attachCategories(Class cls, category_list *cats, bool flush_caches){    if (!cats) return;    bool isMeta = cls-&gt;isMetaClass();    // fixme rearrange to remove these intermediate allocations    method_list_t **mlists = (method_list_t **)        malloc(cats-&gt;count * sizeof(*mlists));    property_list_t **proplists = (property_list_t **)        malloc(cats-&gt;count * sizeof(*proplists));    protocol_list_t **protolists = (protocol_list_t **)        malloc(cats-&gt;count * sizeof(*protolists));    // Count backwards through cats to get newest categories first    int mcount = 0;    int propcount = 0;    int protocount = 0;    int i = cats-&gt;count;    while (i--) {        auto&amp; entry = cats-&gt;list[i];        method_list_t *mlist = entry.cat-&gt;methodsForMeta(isMeta);        if (mlist) {            mlists[mcount++] = mlist;        }        property_list_t *proplist =             entry.cat-&gt;propertiesForMeta(isMeta, entry.hi);        if (proplist) {            proplists[propcount++] = proplist;        }        protocol_list_t *protolist = entry.cat-&gt;protocols;        if (protolist) {            protolists[protocount++] = protolist;        }    }    auto rw = cls-&gt;data();    rw-&gt;methods.attachLists(mlists, mcount);    free(mlists);    rw-&gt;properties.attachLists(proplists, propcount);    free(proplists);    rw-&gt;protocols.attachLists(protolists, protocount);    free(protolists);}</code></pre><h3 id="load-images"><a href="#load-images" class="headerlink" title="load_images"></a>load_images</h3><p><code>load_images</code>&#x6838;&#x5FC3;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x4EE5;super class &gt; class &gt; category&#x7684;&#x987A;&#x5E8F;&#x8C03;&#x7528;class&#x7684;load&#x65B9;&#x6CD5;&#xFF0C;&#x5148;&#x8C03;&#x6574;&#x987A;&#x5E8F;&#x518D;&#x8C03;&#x7528;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">voidload_images(const char *path __unused, const struct mach_header *mh){    // Return without taking locks if there are no +load methods here.    if (!hasLoadMethods((const headerType *)mh)) return;    // Discover load methods    prepare_load_methods((const headerType *)mh);    // Call +load methods (without runtimeLock - re-entrant)    call_load_methods();}</code></pre><p><code>prepare_load_methods</code>&#x8FC7;&#x7A0B;&#x4EE5;&#x53CA;&#x5176;<code>schedule_class_load</code>&#x5B50;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x8C03;&#x6574;&#x8C03;&#x7528;&#x987A;&#x5E8F;&#xFF0C;&#x5148;&#x52A0;&#x5165;super class&#xFF0C;&#x518D;&#x52A0;&#x5165;&#x539F;class&#xFF0C;&#x518D;&#x52A0;&#x5165;category&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">void prepare_load_methods(const headerType *mhdr){    size_t count, i;    classref_t *classlist =         _getObjc2NonlazyClassList(mhdr, &amp;count);    for (i = 0; i &lt; count; i++) {        schedule_class_load(remapClass(classlist[i]));    }    category_t **categorylist = _getObjc2NonlazyCategoryList(mhdr, &amp;count);    for (i = 0; i &lt; count; i++) {        category_t *cat = categorylist[i];        Class cls = remapClass(cat-&gt;cls);        realizeClass(cls);        add_category_to_loadable_list(cat);    }}/************************************************************************ prepare_load_methods* Schedule +load for classes in this image, any un-+load-ed * superclasses in other images, and any categories in this image.**********************************************************************/// Recursively schedule +load for cls and any un-+load-ed superclasses.// cls must already be connected.static void schedule_class_load(Class cls){    if (!cls) return;    if (cls-&gt;data()-&gt;flags &amp; RW_LOADED) return;    // Ensure superclass-first ordering    schedule_class_load(cls-&gt;superclass);    add_class_to_loadable_list(cls);}</code></pre><p><code>call_load_methods</code>&#x6838;&#x5FC3;&#x8FC7;&#x7A0B;&#x5219;&#x662F;while&#x5FAA;&#x73AF;&#x8C03;&#x7528;load&#x65B9;&#x6CD5;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/************************************************************************ call_load_methods* Call all pending class and category +load methods.* Class +load methods are called superclass-first. * Category +load methods are not called until after the parent class&apos;s +load.* * This method must be RE-ENTRANT, because a +load could trigger * more image mapping. In addition, the superclass-first ordering * must be preserved in the face of re-entrant calls. Therefore, * only the OUTERMOST call of this function will do anything, and * that call will handle all loadable classes, even those generated * while it was running.** The sequence below preserves +load ordering in the face of * image loading during a +load, and make sure that no * +load method is forgotten because it was added during * a +load call.* Sequence:* 1. Repeatedly call class +loads until there aren&apos;t any more* 2. Call category +loads ONCE.* 3. Run more +loads if:*    (a) there are more classes to load, OR*    (b) there are some potential category +loads that have *        still never been attempted.* Category +loads are only run once to ensure &quot;parent class first&quot; * ordering, even if a category +load triggers a new loadable class * and a new loadable category attached to that class. ** Locking: loadMethodLock must be held by the caller *   All other locks must not be held.**********************************************************************/void call_load_methods(void){    bool more_categories;    do {        // 1. Repeatedly call class +loads until there aren&apos;t any more        while (loadable_classes_used &gt; 0) {            call_class_loads();        }        // 2. Call category +loads ONCE        more_categories = call_category_loads();        // 3. Run more +loads if there are classes OR more untried categories    } while (loadable_classes_used &gt; 0  ||  more_categories);}</code></pre><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p><a href="https://www.mikeash.com/pyblog/friday-qa-2012-11-09-dyld-dynamic-linking-on-os-x.html" target="_blank" rel="noopener">https://www.mikeash.com/pyblog/friday-qa-2012-11-09-dyld-dynamic-linking-on-os-x.html</a></p>]]></content>
      
      <categories>
          
          <category> 链接与装载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链接与装载 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>dyld_link&amp;load</title>
      <link href="/dyld_link&amp;load/"/>
      <url>/dyld_link&amp;load/</url>
      <content type="html"><![CDATA[<p>dyld&#x662F;&#x82F9;&#x679C;&#x51FA;&#x54C1;&#x7684;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5668;&#xFF0C;&#x662F;MacOS&#x548C;iOS&#x5E73;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x5B83;&#x8D1F;&#x8D23;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x4E2D;&#x7684;&#x88C5;&#x8F7D;&#x548C;&#x94FE;&#x63A5;&#xFF0C;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x63A2;&#x7D22;&#x94FE;&#x63A5;&#x3001;&#x88C5;&#x8F7D;&#x5728;&#x5176;&#x6E90;&#x7801;&#x4E2D;&#x7684;&#x5965;&#x79D8;&#x3002;&#x6587;&#x7AE0;&#x4E2D;&#x8D34;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x7ECF;&#x8FC7;&#x7B80;&#x5316;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#xFF0C;&#x53EF;&#x8BFB;&#x6027;&#x975E;&#x5E38;&#x9AD8;&#xFF0C;&#x5176;&#x6DF1;&#x610F;&#x8DC3;&#x7136;&#x5C4F;&#x4E0A;&#x3002;</p><a id="more"></a><h2 id="dyld-link-amp-load"><a href="#dyld-link-amp-load" class="headerlink" title="dyld_link&amp;load"></a>dyld_link&amp;load</h2><p>&#x4E0B;&#x6587;&#x6536;&#x96C6;&#x4E86;&#x4E00;&#x4E9B;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x80FD;&#x5E2E;&#x52A9;&#x5145;&#x5206;&#x4E86;&#x89E3;&#x80CC;&#x666F;&#x3002;</p><ul><li>preflight&#xFF1A;&#x9884;&#x5148;&#x6267;&#x884C;&#x88C5;&#x8F7D;&#x6765;&#x68C0;&#x67E5;&#x52A8;&#x6001;&#x5E93;&#x662F;&#x5426;&#x53EF;&#x88AB;&#x88C5;&#x8F7D;&#x6210;&#x529F;&#xFF0C;&#x4EE5;&#x786E;&#x5B9A;&#x8FD0;&#x884C;&#x65F6;&#x88C5;&#x8F7D;&#x52A8;&#x6001;&#x5E93;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5DEE;&#x9519;&#x3002;</li><li><a href="https://opensource.apple.com/source/cctools/cctools-384/RelNotes/Prebinding.html" target="_blank" rel="noopener">preBind</a>&#xFF1A;&#x5C06;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x7684;&#x91CD;&#x5B9A;&#x4F4D;&#x63D0;&#x524D;&#x5230;&#x88C5;&#x8F7D;&#x4E4B;&#x524D;&#xFF0C;&#x8FD9;&#x8981;&#x6C42;&#x8FDB;&#x7A0B;&#x8981;&#x9884;&#x7559;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x7ED9;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5C31;&#x53EF;&#x4EE5;&#x50CF;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#x4E00;&#x6837;&#xFF0C;&#x5728;&#x88C5;&#x8F7D;&#x524D;&#x786E;&#x5B9A;&#x548C;&#x5206;&#x914D;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x3002;&#x8FD9;&#x79CD;&#x6280;&#x672F;&#x4E5F;&#x662F;&#x4E3A;&#x4E86;&#x8282;&#x7701;&#x52A8;&#x6001;&#x5E93;&#x91CD;&#x5B9A;&#x4F4D;&#x8017;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x3002;</li><li>image&#xFF1A;&#x5E93;&#x7684;&#x4EE3;&#x6307;&#xFF0C;&#x5E93;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x6620;&#x5C04;&#x5230;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x5C31;&#x50CF;&#x955C;&#x5B50;&#x7167;&#x51FA;&#x6765;&#x7684;&#x5F71;&#x50CF;&#x4E00;&#x6837;&#x3002;</li><li>slide&#xFF1A;<a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E5%9D%80%E7%A9%BA%E9%96%93%E9%85%8D%E7%BD%AE%E9%9A%A8%E6%A9%9F%E8%BC%89%E5%85%A5" target="_blank" rel="noopener">ASLR</a>(&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x914D;&#x7F6E;&#x968F;&#x673A;&#x52A0;&#x8F7D;)&#x6280;&#x672F;&#x968F;&#x673A;&#x51FA;&#x6765;&#x7684;&#x5730;&#x5740;offset&#xFF0C;&#x5BF9;&#x52A8;&#x6001;&#x5E93;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#x7684;&#x65F6;&#x5019;&#x8981;&#x6DFB;&#x52A0;&#x6B64;offset&#x3002;</li><li>ordinal&#xFF1A;&#x5E8F;&#x53F7;&#x7684;&#x4EE3;&#x6307;&#xFF0C;&#x6307;&#x4EE3;&#x53EF;&#x4EE5;&#x7528;&#x5168;&#x79F0;&#x7D22;&#x5F15;&#xFF0C;&#x800C;&#x4E3A;&#x4E86;&#x8282;&#x7701;&#x7A7A;&#x95F4;&#xFF0C;&#x6539;&#x7528;&#x53F7;&#x7801;&#x6765;&#x7D22;&#x5F15;&#x7684;&#x65B9;&#x5F0F;&#x3002;</li></ul><h2 id="link-amp-load"><a href="#link-amp-load" class="headerlink" title="link &amp; load"></a>link &amp; load</h2><p>link&#x662F;dyld&#x7684;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#xFF0C;&#x4E5F;&#x662F;&#x9AD8;&#x6548;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#x7684;&#x5165;&#x53E3;&#xFF0C;&#x5728;&#x4E86;&#x89E3;dyld&#x5185;&#x90E8;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x771F;&#x6B63;&#x80FD;&#x7406;&#x89E3;&#x94FE;&#x63A5;&#x548C;&#x88C5;&#x8F7D;&#x662F;&#x5BC6;&#x4E0D;&#x53EF;&#x5206;&#x7684;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoader::link(const LinkContext&amp; context, bool forceLazysBound, bool preflightOnly, bool neverUnload, const RPathChain&amp; loaderRPaths){    this-&gt;recursiveLoadLibraries(context, preflightOnly, loaderRPaths);    this-&gt;recursiveUpdateDepth(context.imageCount());     this-&gt;recursiveRebase(context);     this-&gt;recursiveBind(context, forceLazysBound, neverUnload);    if ( !context.linkingMainExecutable )        this-&gt;weakBind(context);    std::vector&lt;DOFInfo&gt; dofs;    this-&gt;recursiveGetDOFSections(context, dofs);    context.registerDOFs(dofs);    // interpose any dynamically loaded images    if ( !context.linkingMainExecutable ) {        this-&gt;recursiveApplyInterposing(context);    }}</code></pre><p>link&#x4E00;&#x4E2A;&#x5E93;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li>load dependency library&#xFF1A;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x627E;&#x51FA;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5E93;&#x5E76;&#x88C5;&#x8F7D;(load)&#x3002;</li><li>update depth&#xFF1A;&#x8BB0;&#x5F55;&#x6DF1;&#x5EA6;&#x904D;&#x5386;&#x5F15;&#x7528;&#x6DF1;&#x5EA6;&#x6A21;&#x62DF;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;&#x7528;&#x4E8E;&#x5F62;&#x6210;&#x6240;&#x6709;&#x88AB;&#x4F9D;&#x8D56;&#x5E93;&#x5728;&#x4F9D;&#x8D56;&#x5E93;&#x524D;&#x5E8F;&#x7684;&#x6392;&#x5E8F;&#x3002;</li><li>rebase&#xFF1A;&#x5BF9;&#x5E93;&#x53CA;&#x5176;&#x4F9D;&#x8D56;&#x5E93;&#x8FDB;&#x884C;rebase&#x3002;</li><li>bind&#xFF1A;&#x5BF9;&#x5E93;&#x53CA;&#x5176;&#x4F9D;&#x8D56;&#x5E93;&#x8FDB;&#x884C;bind&#x3002;</li><li>weak bind&#xFF1A;&#x5BF9;&#x5E93;&#x8FDB;&#x884C;weak bind&#x3002;</li><li>DOF&#xFF1A;&#x5BF9;&#x5E93;&#x6DFB;&#x52A0;debugg&#x5DE5;&#x5177;DTrace(Dynamic Trace)&#x652F;&#x6301;&#x3002;</li><li>interpose &#xFF1A;&#x5BF9;&#x52A8;&#x6001;&#x5E93;&#x8FDB;&#x884C;&#x7B26;&#x53F7;&#x4ECB;&#x5165;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x52A8;&#x6001;&#x5E93;&#x7B26;&#x53F7;&#x5730;&#x5740;&#x66FF;&#x6362;&#x6210;&#x6307;&#x5B9A;&#x5730;&#x5740;&#x3002;</li></ol><h2 id="load-dependency-library"><a href="#load-dependency-library" class="headerlink" title="load dependency library"></a>load dependency library</h2><p>&#x94FE;&#x63A5;&#x5E93;&#x4E4B;&#x524D;&#x8981;&#x88C5;&#x8F7D;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x88C5;&#x8F7D;&#x4F1A;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x987A;&#x5E8F;&#x627E;&#x51FA;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5E93;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoader::recursiveLoadLibraries(const LinkContext&amp; context, bool preflightOnly, const RPathChain&amp; loaderRPaths){    // get list of libraries this image needs    DependentLibraryInfo libraryInfos[fLibraryCount];     this-&gt;doGetDependentLibraries(libraryInfos);    for(unsigned int i=0; i &lt; fLibraryCount; ++i){        ImageLoader* dependentLib;        DependentLibraryInfo&amp; requiredLibInfo = libraryInfos[i];        try {            dependentLib = context.loadLibrary(requiredLibInfo.name, true, this-&gt;getPath(),                                                                         &amp;thisRPaths);            LibraryInfo actualInfo = dependentLib-&gt;doGetLibraryInfo();            depLibReRequired = requiredLibInfo.required;            depLibCheckSumsMatch = ( actualInfo.checksum == requiredLibInfo.info.checksum );            depLibReExported = requiredLibInfo.reExported;        }        catch (const char* msg) {            ...        }        setLibImage(i, dependentLib, depLibReExported, requiredLibInfo.upward);    }    // tell each to load its dependents    for(unsigned int i=0; i &lt; libraryCount(); ++i) {        ImageLoader* dependentImage = libImage(i);        if ( dependentImage != NULL ) {                dependentImage-&gt;recursiveLoadLibraries(context, preflightOnly, thisRPaths);        }    }}</code></pre><p>&#x5176;&#x4E2D;&#xFF0C;<code>doGetDependentLibraries</code>&#x4ECE;<code>dylib_command</code> &#x67E5;&#x8BE2;&#x51FA;&#x4F9D;&#x8D56;&#x5E93;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::doGetDependentLibraries(DependentLibraryInfo libs[]){    uint32_t index = 0;    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_LOAD_DYLIB:            case LC_LOAD_WEAK_DYLIB:            case LC_REEXPORT_DYLIB:            case LC_LOAD_UPWARD_DYLIB:                {                    const struct dylib_command* dylib = (struct dylib_command*)cmd;                    DependentLibraryInfo* lib = &amp;libs[index++];                    lib-&gt;name = (char*)cmd + dylib-&gt;dylib.name.offset;                    lib-&gt;info.checksum = dylib-&gt;dylib.timestamp;                    lib-&gt;info.minVersion = dylib-&gt;dylib.compatibility_version;                    lib-&gt;info.maxVersion = dylib-&gt;dylib.current_version;                    lib-&gt;required = (cmd-&gt;cmd != LC_LOAD_WEAK_DYLIB);                    lib-&gt;reExported = (cmd-&gt;cmd == LC_REEXPORT_DYLIB);                    lib-&gt;upward = (cmd-&gt;cmd == LC_LOAD_UPWARD_DYLIB);                }                break;        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><h3 id="load"><a href="#load" class="headerlink" title="load"></a>load</h3><p>&#x771F;&#x6B63;&#x88C5;&#x8F7D;&#x5E93;&#x7684;&#x52A8;&#x4F5C;&#x5728;<code>loadLibrary</code>&#x4E2D;&#xFF0C;&#x88C5;&#x8F7D;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x8DEF;&#x5F84;&#x5904;&#x7406;&#x9636;&#x6BB5;&#x548C;&#x4ECE;&#x8DEF;&#x5F84;&#x521D;&#x59CB;&#x5316;&#x5E93;&#x7EC4;&#x6210;&#x3002;</p><h4 id="load-phase"><a href="#load-phase" class="headerlink" title="load phase"></a>load phase</h4><p>&#x8FD9;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x8DEF;&#x5F84;&#x5904;&#x7406;&#x9636;&#x6BB5;&#xFF0C;&#x5C31;&#x662F;&#x6C42;&#x89E3;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F84;&#x7EC4;&#x5408;(permutation)&#x3002;&#x6BCF;&#x4E00;&#x9636;&#x6BB5;&#x90FD;&#x662F;&#x589E;&#x52A0;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F84;&#x7EC4;&#x5408;&#x5E76;&#x8C03;&#x7528;&#x4E0B;&#x4E00;&#x9636;&#x6BB5;&#xFF0C;&#x5728;&#x6700;&#x540E;&#x9636;&#x6BB5;&#x5C1D;&#x8BD5;&#x7528;&#x53EF;&#x80FD;&#x8DEF;&#x5F84;&#x521D;&#x59CB;&#x5316;&#x5E93;&#x3002;&#x4E00;&#x7CFB;&#x5217;&#x9636;&#x6BB5;&#x5305;&#x542B;&#xFF1A;</p><p><code>loadPhase0</code>&#x3001;<code>loadPhase1</code>&#x3001;<code>loadPhase2</code>&#x3001;<code>loadPhase3</code>&#x3001;<code>loadPhase4</code>&#x3001;<code>loadPhase5</code>&#x3001;<code>loadPhase5check</code>&#x3001;<code>loadPhase5load</code>&#x3001;<code>loadPhase5open</code> &#x3001;<code>loadPhase6</code>&#x3002;</p><ol><li><code>loadPhase0</code>&#xFF1A;&#x6DFB;&#x52A0;rootPath&#x7EC4;&#x5408;&#x3002;</li><li><code>loadPhase1</code>&#xFF1A;&#x6DFB;&#x52A0;LD_LIBRARY_PATH&#x3001;DYLD_FRAMEWORK_PATH &#x3001;DYLD_FALLBACK_LIBRARY_PATH&#x7EC4;&#x5408;&#x3002;</li><li><code>loadPhase2</code>&#xFF1A;&#x6DFB;&#x52A0;FrameworkPartialPath&#x3001;LibraryLeaf&#x7EC4;&#x5408;&#x3002;</li><li><code>loadPhase3</code>&#xFF1A;&#x6DFB;&#x52A0;@variables&#x7EC4;&#x5408;(@executable_path&#x3001;@loader_path&#x3001;@rpath)&#x3002;</li><li><code>loadPhase4</code>&#xFF1A;&#x6DFB;&#x52A0;image suffix&#x7EC4;&#x5408;&#x3002;</li><li><code>loadPhase5</code>&#xFF1A;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;dylib override&#xFF0C;&#x6709;&#x5219;&#x8FDB;&#x5165;<code>loadPhase5check</code>&#xFF0C;&#x6CA1;&#x6709;&#x5219;&#x8FDB;&#x5165;<code>loadPhase5load</code>&#x3002;</li><li><code>loadPhase5check</code> &#xFF1A;&#x68C0;&#x67E5;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x5339;&#x914D;&#x5DF2;&#x88C5;&#x8F7D;&#x7684;&#x5E93;&#x3002;</li><li><code>loadPhase5load</code>&#xFF1A;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x5728;&#x7F13;&#x5B58;&#x4E2D;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x5E93;&#xFF0C;&#x6CA1;&#x6709;&#x5219;&#x8FDB;&#x5165;<code>loadPhase5open</code>&#x3002;</li><li><code>loadPhase5open</code>&#xFF1A;&#x68C0;&#x67E5;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x53EF;&#x88AB;&#x6253;&#x5F00;&#xFF0C;&#x6709;&#x5219;&#x8FDB;&#x5165;<code>loadPhase6</code>&#x3002;</li><li><code>loadPhase6</code>&#xFF1A;&#x8BFB;&#x5165;&#x6587;&#x4EF6;&#x9996;&#x9875;(page)&#xFF0C;&#x5E76;&#x8FDB;&#x5165;<code>ImageLoaderMachO</code>&#x7684;<code>instantiateFromFile</code></li></ol><h4 id="instantiateFromFile"><a href="#instantiateFromFile" class="headerlink" title="instantiateFromFile"></a>instantiateFromFile</h4><p>&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x4F1A;&#x521D;&#x59CB;&#x5316;<code>ImageLoaderMachO</code>&#x5B9E;&#x4F8B;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5148;&#x5C06;&#x5E93;&#x6587;&#x4EF6;&#x8BFB;&#x5165;&#x6808;&#x4E0A;&#x7A7A;&#x95F4;&#xFF0C;&#x8BBE;&#x7F6E;<code>ImageLoaderMachO</code>&#x5BF9;&#x6570;&#x636E;&#x7684;&#x6307;&#x9488;<code>fMachOData</code>&#x6307;&#x5411;&#x6808;&#x4E0A;&#x7A7A;&#x95F4;&#xFF0C;&#x5BF9;&#x5E93;segment&#x8FDB;&#x884C;&#x89E3;&#x6790;&#xFF0C;&#x518D;mmap&#x6240;&#x6709;segment&#xFF0C;&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x6307;&#x9488;<code>fMachOData</code>&#x6307;&#x5411;mmap&#x51FA;&#x6765;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x6700;&#x540E;&#x91CA;&#x653E;&#x6808;&#x4E0A;&#x7A7A;&#x95F4;&#x3002;</p><p>&#x5176;&#x4E2D;&#xFF0C;<code>sniffLoadCommands</code>&#x4ECE;&#x5E93;&#x4E2D;&#x83B7;&#x53D6;code sign&#x3001;encrypt&#x3001;compress&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;compress&#x4E86;&#x8C03;&#x7528;<code>ImageLoaderMachOCompressed</code>&#xFF0C;&#x53CD;&#x4E4B;&#x8C03;&#x7528;<code>ImageLoaderMachOClassic</code>&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">// create image by mapping in a mach-o fileImageLoader* ImageLoaderMachO::instantiateFromFile(const char* path, int fd, const uint8_t firstPage[4096], uint64_t offsetInFat, uint64_t lenInFat, const struct stat&amp; info, const LinkContext&amp; context){    // get load commands    const unsigned int dataSize = sizeof(macho_header) + ((macho_header*)firstPage)-&gt;sizeofcmds;    uint8_t buffer[dataSize];    const uint8_t* fileData = firstPage;    if ( dataSize &gt; 4096 ) {        // only read more if cmds take up more space than first page        fileData = buffer;        memcpy(buffer, firstPage, 4096);        pread(fd, &amp;buffer[4096], dataSize-4096, offsetInFat+4096);    }    bool compressed;    unsigned int segCount;    unsigned int libCount;    const linkedit_data_command* codeSigCmd;    const encryption_info_command* encryptCmd;    sniffLoadCommands((const macho_header*)fileData, path, false, &amp;compressed, &amp;segCount, &amp;libCount, context, &amp;codeSigCmd, &amp;encryptCmd);    // instantiate concrete class based on content of load commands    if ( compressed )         return ImageLoaderMachOCompressed::instantiateFromFile(path, fd, fileData, dataSize, offsetInFat, lenInFat, info, segCount, libCount, codeSigCmd, encryptCmd, context);    else        return ImageLoaderMachOClassic::instantiateFromFile(path, fd, fileData, dataSize, offsetInFat, lenInFat, info, segCount, libCount, codeSigCmd, context);}</code></pre><p><code>ImageLoaderMachOCompressed</code>&#x548C;<code>ImageLoaderMachOClassic</code>&#x90FD;&#x7EE7;&#x627F;&#x81EA;<code>ImageLoaderMachO</code>&#xFF0C;<code>ImageLoaderMachOCompressed</code>&#x662F;<code>ImageLoaderMachOClassic</code>&#x7684;&#x538B;&#x7F29;&#x7248;&#x672C;&#xFF0C;&#x57FA;&#x672C;&#x539F;&#x7406;&#x90FD;&#x4E00;&#x81F4;&#xFF0C;&#x540E;&#x6587;&#x4EE5;<code>ImageLoaderMachOClassic</code>&#x4E3A;&#x4F8B;&#x7EE7;&#x7EED;&#x63A2;&#x7D22;&#xFF0C;<code>ImageLoaderMachOClassic</code>&#x7684;<code>instantiateFromFile</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">// create image by mapping in a mach-o fileImageLoaderMachOClassic* ImageLoaderMachOClassic::instantiateFromFile(const char* path, int fd, const uint8_t* fileData, size_t lenFileData,uint64_t offsetInFat, uint64_t lenInFat, const struct stat&amp; info, unsigned int segCount, unsigned int libCount, const struct linkedit_data_command* codeSigCmd, const LinkContext&amp; context){        ImageLoaderMachOClassic* image = ImageLoaderMachOClassic::instantiateStart((macho_header*)fileData, path, segCount, libCount);    try {        // record info about file          image-&gt;setFileInfo(info.st_dev, info.st_ino, info.st_mtime);        // if this image is code signed, let kernel validate signature before mapping any pages from image        image-&gt;loadCodeSignature(codeSigCmd, fd, offsetInFat, context);        // Validate that first data we read with pread actually matches with code signature        image-&gt;validateFirstPages(codeSigCmd, fd, fileData, lenFileData, offsetInFat, context);        // mmap segments        image-&gt;mapSegmentsClassic(fd, offsetInFat, lenInFat, info.st_size, context);        // finish up        image-&gt;instantiateFinish(context);    }    catch (...) {        delete image;        throw;    }    return image;}</code></pre><p>&#x5176;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6B65;&#x9AA4;&#x662F;&#x5BF9;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#x9A8C;&#x8BC1;(<code>loadCodeSignature</code>)&#x3001;&#x6620;&#x5C04;&#x6240;&#x6709;&#x6BB5;(<code>mapSegments</code>)&#x3001;&#x89E3;&#x6790;segment(<code>instantiateFinish</code>)&#x3002;</p><p><code>loadCodeSignature</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::loadCodeSignature(const struct linkedit_data_command* codeSigCmd, int fd,  uint64_t offsetInFatFile, const LinkContext&amp; context){    if (codeSigCmd != NULL) {        fsignatures_t siginfo;        siginfo.fs_file_start=offsetInFatFile;                // start of mach-o slice in fat file         siginfo.fs_blob_start=(void*)(long)(codeSigCmd-&gt;dataoff);    // start of CD in mach-o file        siginfo.fs_blob_size=codeSigCmd-&gt;datasize;            // size of CD        int result = fcntl(fd, F_ADDFILESIGS_RETURN, &amp;siginfo);        if ( result == -1 ) {            ...        }    }}</code></pre><p><code>mapSegments</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::mapSegments(int fd, uint64_t offsetInFat, uint64_t lenInFat, uint64_t fileLen, const LinkContext&amp; context){    // find address range for image    intptr_t slide = this-&gt;assignSegmentAddresses(context);    // map in all segments    for(unsigned int i=0, e=segmentCount(); i &lt; e; ++i) {        vm_offset_t fileOffset = segFileOffset(i) + offsetInFat;        vm_size_t size = segFileSize(i);        uintptr_t requestedLoadAddress = segPreferredLoadAddress(i) + slide;        int protection = 0;        if ( !segUnaccessible(i) ) {            // If has text-relocs, don&apos;t set x-bit initially.            // Instead set it later after text-relocs have been done.            if ( segExecutable(i) &amp;&amp; !(segHasRebaseFixUps(i) &amp;&amp; (slide != 0)) )                protection   |= PROT_EXEC;            if ( segReadable(i) )                protection   |= PROT_READ;            if ( segWriteable(i) )                protection   |= PROT_WRITE;        }        // wholly zero-fill segments have nothing to mmap() in        if ( size &gt; 0 ) {                    void* loadAddress = xmmap((void*)requestedLoadAddress, size, protection, MAP_FIXED | MAP_PRIVATE, fd, fileOffset);        }    }}</code></pre><p><code>instantiateFinish</code>&#x76F4;&#x63A5;&#x8FDB;&#x5165;<code>parseLoadCmds</code>&#xFF0C;<code>parseLoadCmds</code>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::parseLoadCmds(const LinkContext&amp; context){    // now that segments are mapped in, get real fMachOData, fLinkEditBase, and fSlide    for(unsigned int i=0; i &lt; fSegmentsCount; ++i) {        // set up pointer to __LINKEDIT segment        if ( strcmp(segName(i),&quot;__LINKEDIT&quot;) == 0 ) {            fLinkEditBase = (uint8_t*)(segActualLoadAddress(i) - segFileOffset(i));        }        // some segment always starts at beginning of file and contains mach_header and load commands        if ( (segFileOffset(i) == 0) &amp;&amp; (segFileSize(i) != 0) ) {            fMachOData = (uint8_t*)(segActualLoadAddress(i));        }    }    const struct load_command* firstUnknownCmd = NULL;    const struct version_min_command* minOSVersionCmd = NULL;    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_SYMTAB:                {                    fSymbolTable = (struct symtab_command*)cmd;                    fStrings = (const char*)&amp;fLinkEditBase[symtab-&gt;stroff];                    fDynamicInfo = (macho_nlist*)(&amp;fLinkEditBase[symtab-&gt;symoff]);                }                break;            case LC_DYSYMTAB:                fDynamicInfo = (struct dysymtab_command*)cmd;                break;            case LC_SUB_UMBRELLA:                fHasSubUmbrella = true;                break;            case LC_SUB_FRAMEWORK:                fInUmbrella = true;                break;            case LC_SUB_LIBRARY:                fHasSubLibraries = true;                break;            case LC_ROUTINES_COMMAND:                fHasDashInit = true;                break;            case LC_DYLD_INFO:            case LC_DYLD_INFO_ONLY:                break;            case LC_SEGMENT_COMMAND:                {                    const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;                    const bool isTextSeg = (strcmp(seg-&gt;segname, &quot;__TEXT&quot;) == 0);                    const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));                    const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];                    for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                        const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                        if ( type == S_MOD_INIT_FUNC_POINTERS )                            fHasInitializers = true;                        else if ( type == S_MOD_TERM_FUNC_POINTERS )                            fHasTerminators = true;                        else if ( type == S_DTRACE_DOF )                            fHasDOFSections = true;                        else if ( isTextSeg &amp;&amp; (strcmp(sect-&gt;sectname, &quot;__eh_frame&quot;) == 0) )                            fEHFrameSectionOffset = (uint32_t)((uint8_t*)sect - fMachOData);                        else if ( isTextSeg &amp;&amp; (strcmp(sect-&gt;sectname, &quot;__unwind_info&quot;) == 0) )                            fUnwindInfoSectionOffset = (uint32_t)((uint8_t*)sect - fMachOData);                    }                }                break;            case LC_TWOLEVEL_HINTS:                // no longer supported                break;            case LC_ID_DYLIB:                {                    fDylibIDOffset = (uint32_t)((uint8_t*)cmd - fMachOData);                }                break;            case LC_RPATH:            case LC_LOAD_WEAK_DYLIB:            case LC_REEXPORT_DYLIB:            case LC_LOAD_UPWARD_DYLIB:            case LC_MAIN:                // do nothing, just prevent LC_REQ_DYLD exception from occuring                break;            case LC_VERSION_MIN_MACOSX:            case LC_VERSION_MIN_IPHONEOS:            case LC_VERSION_MIN_TVOS:            case LC_VERSION_MIN_WATCHOS:                minOSVersionCmd = (version_min_command*)cmd;                break;            default:                if ( (cmd-&gt;cmd &amp; LC_REQ_DYLD) != 0 ) {                    if ( firstUnknownCmd == NULL )                        firstUnknownCmd = cmd;                }                break;         }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><h2 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h2><p>&#x5BF9;&#x4E8E;&#x91CD;&#x5B9A;&#x4F4D;(relocation)&#x8868;&#x9879;&#xFF0C;&#x5176;&#x6307;&#x5411;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x4F4D;&#x7684;&#x5730;&#x5740;&#x662F;&#x76F8;&#x5BF9;&#x5730;&#x5740;&#xFF0C;&#x662F;&#x8DDD;&#x7B2C;&#x4E00;&#x4E2A;segement&#x6216;&#x7B2C;&#x4E00;&#x4E2A;&#x53EF;&#x5199;(writable)segment&#x7684;offset&#xFF0C;rebase&#x8FD9;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x5C06;&#x76F8;&#x5BF9;&#x5730;&#x5740;&#x8C03;&#x6574;&#x4E3A;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#xFF0C;&#x6DFB;&#x52A0;relocBase&#x548C;slide&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachOClassic::rebase(const LinkContext&amp; context){    register const uintptr_t slide = this-&gt;fSlide;    const uintptr_t relocBase = this-&gt;getRelocBase();    // loop through all local (internal) relocation records    const relocation_info* const relocsStart = (struct relocation_info*)(&amp;fLinkEditBase[fDynamicInfo-&gt;locreloff]);    const relocation_info* const relocsEnd = &amp;relocsStart[fDynamicInfo-&gt;nlocrel];    for (const relocation_info* reloc=relocsStart; reloc &lt; relocsEnd; ++reloc) {        uintptr_t rebaseAddr = reloc-&gt;r_address + relocBase;        *((uintptr_t*)rebaseAddr) += slide;    }}</code></pre><p>&#x91CD;&#x5B9A;&#x4F4D;&#x8868;&#x9879;&#x7ED3;&#x6784;relocation_info&#x5728;rebase&#x548C;bind&#x4E2D;&#x81F3;&#x5173;&#x91CD;&#x8981;&#xFF0C;&#x5176;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">/* * Format of a relocation entry of a Mach-O file.  Modified from the 4.3BSD * format.  The modifications from the original format were changing the value * of the r_symbolnum field for &quot;local&quot; (r_extern == 0) relocation entries. * This modification is required to support symbols in an arbitrary number of * sections not just the three sections (text, data and bss) in a 4.3BSD file. * Also the last 4 bits have had the r_type tag added to them. */struct relocation_info {   int32_t    r_address;    /* offset in the section to what is being                   relocated */   uint32_t     r_symbolnum:24,    /* symbol index if r_extern == 1 or section                   ordinal if r_extern == 0 */        r_pcrel:1,     /* was relocated pc relative already */        r_length:2,    /* 0=byte, 1=word, 2=long, 3=quad */        r_extern:1,    /* does not include value of sym referenced */        r_type:4;    /* if not 0, machine specific relocation type */};</code></pre><p>&#x5176;&#x4E2D;&#xFF0C;<code>r_address</code>&#x6307;&#x5411;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x4F4D;&#x7684;&#x5730;&#x5740;&#x3002;&#x5BF9;&#x4E8E;&#x88AB;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x6765;&#x8BF4;&#xFF0C;<code>r_symbolnum</code>&#x5B57;&#x6BB5;&#x4F1A;&#x6307;&#x5411;&#x7B26;&#x53F7;&#x5728;&#x7B26;&#x53F7;&#x8868;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><h2 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h2><p>bind&#x6709;&#x4E24;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li>&#x5BF9;&#x88AB;&#x5BFC;&#x51FA;(exported)&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;</li><li>&#x5BF9;Segment&#x4E2D;&#x7684;non lazy indirect symbol pointers&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#x3002;</li><li>&#x5BF9;Segment&#x4E2D;&#x7684;lazy indirect symbol pointers&#x5B8C;&#x5584;stub&#x673A;&#x5236;&#x3002;</li></ol><h3 id="external-relocation"><a href="#external-relocation" class="headerlink" title="external relocation"></a>external relocation</h3><p>&#x5BF9;&#x88AB;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x91CD;&#x5B9A;&#x4F4D;&#x5C31;&#x662F;&#xFF1A;&#x4F9D;&#x636E;&#x88AB;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x91CD;&#x5B9A;&#x4F4D;&#x8868;&#x9879;&#xFF0C;&#x53BB;&#x7B26;&#x53F7;&#x8868;&#x4E2D;&#x627E;&#x51FA;&#x7B26;&#x53F7;&#x7684;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#xFF0C;&#x518D;&#x53BB;&#x5176;&#x4ED6;&#x5E93;&#x7B26;&#x53F7;&#x8868;&#x4E2D;resolve&#x7B26;&#x53F7;&#xFF0C;&#x5C06;resolve&#x7ED3;&#x679C;bind&#x5230;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x4F4D;&#x5730;&#x5740;&#x4E0A;&#x3002;&#x5176;&#x4E2D;resolve undefined&#x5C31;&#x662F;&#x67E5;&#x627E;&#x7B26;&#x53F7;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachOClassic::doBindExternalRelocations(const LinkContext&amp; context){    const uintptr_t relocBase = this-&gt;getRelocBase();    const bool twoLevel = this-&gt;usesTwoLevelNameSpace();    // loop through all external relocation records and bind each    const relocation_info* const relocsStart = (struct relocation_info*)(&amp;fLinkEditBase[fDynamicInfo-&gt;extreloff]);    const relocation_info* const relocsEnd = &amp;relocsStart[fDynamicInfo-&gt;nextrel];    for (const relocation_info* reloc=relocsStart; reloc &lt; relocsEnd; ++reloc) {        if (reloc-&gt;r_length == RELOC_SIZE) {            switch(reloc-&gt;r_type) {                case POINTER_RELOC:                    {                          const struct macho_nlist* undefinedSymbol =                             &amp;fSymbolTable[reloc-&gt;r_symbolnum];                       uintptr_t* location = ((uintptr_t*)(reloc-&gt;r_address + relocBase));                         uintptr_t symbolAddr = this-&gt;resolveUndefined(context, undefinedSymbol, twoLevel,                                             symbolIsWeakReference(undefinedSymbol), &amp;image);                         uintptr_t value = *location;                         value += symbolAddr;                    }            }        }    }}</code></pre><h4 id="flat-namespace-vs-two-level-namespace"><a href="#flat-namespace-vs-two-level-namespace" class="headerlink" title="flat namespace vs two level namespace"></a>flat namespace vs two level namespace</h4><p>&#x7B26;&#x53F7;&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;flat&#x548C;two level&#xFF0C;flat&#x4EE3;&#x8868;&#x7B26;&#x53F7;&#x6CA1;&#x6709;&#x5173;&#x8054;&#x6240;&#x5728;&#x5E93;&#xFF0C;two level&#x4EE3;&#x8868;&#x7B26;&#x53F7;&#x5173;&#x8054;&#x7740;&#x6240;&#x5728;&#x5E93;&#x3002;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;&#x4E86;resolve undefined&#x7B26;&#x53F7;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;flat&#x548C;two level&#xFF0C;flat&#x5C06;&#x5728;&#x6240;&#x6709;&#x5E93;&#x4E2D;resolve&#x7B26;&#x53F7;&#xFF0C;&#x800C;two level&#x4F1A;&#x5728;&#x7B26;&#x53F7;&#x7684;n_desc&#x6807;&#x8BC6;&#x7B26;&#x53F7;&#x6240;&#x5728;&#x7684;&#x5E93;&#xFF0C;two level&#x53EA;&#x8981;&#x53BB;&#x6240;&#x5728;&#x5E93;resolve&#x7B26;&#x53F7;&#x3002;&#x57FA;&#x7840;&#x5E93;&#x7B26;&#x53F7;&#x90FD;&#x662F;two level&#x65B9;&#x5F0F;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x8FD8;&#x6709;&#x4E2A;&#x91CD;&#x70B9;&#x5C31;&#x662F;&#x5F31;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#x53EF;&#x4EE5;&#x627E;&#x4E0D;&#x5230;&#x3002;&#x4F2A;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">uintptr_t ImageLoaderMachOClassic::resolveUndefined(const LinkContext&amp; context, const struct         macho_nlist* undefinedSymbol, bool twoLevel, bool dontCoalesce, const ImageLoader foundIn){    const char* symbolName = &amp;fStrings[undefinedSymbol-&gt;n_un.n_strx];     if ( context.bindFlat || !twoLevel ) {        // flat lookup         const Symbol* sym;        if ( context.flatExportFinder(symbolName, &amp;sym, foundIn) ) {            return (*foundIn)-&gt;getExportedSymbolAddress(sym, context, this);        }         if ( (undefinedSymbol-&gt;n_desc &amp; N_WEAK_REF) != 0 ) {             // definition can&apos;t be found anywhere            // if reference is weak_import, then it is ok, just return 0            return 0;         }     } else {         // two level lookup        ImageLoader* target = NULL;        uint8_t ord = GET_LIBRARY_ORDINAL(undefinedSymbol-&gt;n_desc);        if ( ord == EXECUTABLE_ORDINAL ) {            target = context.mainExecutable;        }        else if ( ord == SELF_LIBRARY_ORDINAL ) {            target = this;        } else {            ...        }        const Symbol* sym = target-&gt;findExportedSymbol(symbolName, true, foundIn);        if ( sym!= NULL ) {            return (*foundIn)-&gt;getExportedSymbolAddress(sym, context, this);        } else if ( (undefinedSymbol-&gt;n_desc &amp; N_WEAK_REF) != 0 ) {             // definition can&apos;t be found anywhere            // if reference is weak_import, then it is ok, just return 0            return 0;        } else {            ...        }     }}</code></pre><p>flat lookup&#x4E2D;&#x7684;<code>flatExportFinder</code>&#x4F1A;&#x5BF9;&#x6240;&#x6709;&#x5E93;&#x8C03;&#x7528;<code>findExportedSymbol</code> &#xFF0C;two level lookup&#x4E5F;&#x4F1A;&#x8C03;&#x7528;<code>findExportedSymbol</code>&#xFF0C;&#x6700;&#x7EC8;&#x6536;&#x655B;&#x5230;<code>binarySearch</code>&#xFF0C;&#x5BF9;&#x7B26;&#x53F7;&#x8868;&#x505A;&#x4E8C;&#x5206;&#x641C;&#x7D22;&#xFF0C;&#x5176;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">const struct macho_nlist* ImageLoaderMachOClassic::binarySearch(const char* key, const char stringPool[], const struct macho_nlist symbols[], uint32_t symbolCount) const{    const struct macho_nlist* base = symbols;    for (uint32_t n = symbolCount; n &gt; 0; n /= 2) {        const struct macho_nlist* pivot = &amp;base[n/2];        const char* pivotStr = &amp;stringPool[pivot-&gt;n_un.n_strx];        int cmp = strcmp(key, pivotStr);        if ( cmp == 0 )            return pivot;        if ( cmp &gt; 0 ) {            // key &gt; pivot             // move base to symbol after pivot            base = &amp;pivot[1];            --n;         }        else {            // key &lt; pivot             // keep same base        }    }    return NULL;}</code></pre><p>&#x627E;&#x5230;&#x7B26;&#x53F7;&#x540E;&#xFF0C;&#x518D;&#x83B7;&#x53D6;&#x7B26;&#x53F7;&#x5730;&#x5740;&#x5E76;&#x8FD4;&#x56DE;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">uintptr_t ImageLoaderMachOClassic::exportedSymbolAddress(const LinkContext&amp; context, const Symbol* symbol, const ImageLoader* requestor, bool runResolver) const{    const struct macho_nlist* sym = (macho_nlist*)symbol;    uintptr_t result = sym-&gt;n_value + fSlide;    return result;}</code></pre><p>&#x4F2A;&#x4EE3;&#x7801;&#x4E2D;&#x7701;&#x7565;&#x4E86;&#x5BF9;&#x5F31;&#x7B26;&#x53F7;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x603B;&#x4E4B;&#xFF0C;&#x5BF9;&#x4E8E;&#x5F31;&#x7B26;&#x53F7;&#x65E0;&#x6CD5;resolve&#x4E5F;&#x53EF;&#x63A5;&#x53D7;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/symbol_relocaiton.png" alt="symbol_relocaiton"></p><h3 id="bind-non-lazy-indirection-symbol-pointers"><a href="#bind-non-lazy-indirection-symbol-pointers" class="headerlink" title="bind non lazy indirection symbol pointers"></a>bind non lazy indirection symbol pointers</h3><p><code>__DATA</code>&#x4E2D;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#xFF0C;&#x4EE5;&#x76F4;&#x63A5;&#x6307;&#x5411;&#x7B26;&#x53F7;&#x5B9E;&#x9645;&#x5730;&#x5740;(&#x800C;&#x4E0D;&#x662F;&#x7B26;&#x53F7;&#x8868;&#x5730;&#x5740;)&#x7684;&#x6307;&#x9488;&#x5F62;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x6709;non lazy symbol pointer&#x548C;lazy symbol pointer&#x4E24;&#x79CD;&#xFF0C;&#x533A;&#x522B;&#x5C31;&#x662F;&#x662F;&#x5426;&#x662F;&#x4F7F;&#x7528;&#x4E86;plt(&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;)&#x6280;&#x672F;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x7B26;&#x53F7;&#x5982;&#x679C;&#x60F3;&#x8981;&#x83B7;&#x5F97;&#x66F4;&#x591A;&#x7B26;&#x53F7;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x8981;&#x901A;&#x8FC7;&#x95F4;&#x63A5;&#x8DF3;&#x8F6C;&#x8868;&#xFF0C;&#x6240;&#x4EE5;&#x5F97;&#x540D;indirection symbol pointer&#x3002;</p><p>&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x4E2D;&#xFF0C;&#x5C31;&#x662F;&#x53BB;bind non lazy symbol pointers&#xFF0C;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E3A;&#x5F3A;&#x8FEB;bind lazy symbol pointers&#x3002;&#x5176;&#x4E2D;&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x91CD;&#x5B9A;&#x4F4D;&#x4E2D;&#x7684;.got&#x662F;non lazy symbol pointers&#xFF0C;&#x8FD9;&#x4EE3;&#x8868;&#x5728;&#x8FD9;&#x6B65;&#x9AA4;&#x4E2D;&#xFF0C;.got&#x4E5F;&#x4F1A;&#x88AB;&#x7ED1;&#x5B9A;&#x3002;</p><p>&#x904D;&#x5386;section&#xFF0C;&#x627E;&#x5230;<code>S_NON_LAZY_SYMBOL_POINTERS</code>&#xFF0C;&#x5E76;&#x83B7;&#x5F97;indirection table&#x7684;index&#xFF0C;&#x6765;&#x6700;&#x7EC8;&#x5230;&#x8FBE;&#x7B26;&#x53F7;&#x8868;&#xFF0C;resolve undefined&#x7B26;&#x53F7;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachOClassic::bindIndirectSymbolPointers(const LinkContext&amp; context, bool bindNonLazys, bool bindLazys){    // scan for all non-lazy-pointer sections     const bool twoLevel = this-&gt;usesTwoLevelNameSpace();    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    const uint32_t* const indirectTable = (uint32_t*)&amp;fLinkEditBase[fDynamicInfo-&gt;indirectsymoff];    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_SEGMENT_COMMAND:                {                    const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;                    const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));                    const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];                    for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd;                                                                                 ++sect) {                        const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                        uint32_t elementSize = sizeof(uintptr_t);                        size_t elementCount = sect-&gt;size / elementSize;                        if ( type == S_NON_LAZY_SYMBOL_POINTERS ) {                            if ( ! bindNonLazys )                                continue;                        }                        else if ( type == S_LAZY_SYMBOL_POINTERS ) {                            // process each symbol pointer in this section                            if ( ! bindLazys )                                continue;                        }                        const uint32_t indirectTableOffset = sect-&gt;reserved1;                        uint8_t* ptrToBind = (uint8_t*)(sect-&gt;addr + fSlide);                        for (size_t j=0; j &lt; elementCount; ++j, ptrToBind += elementSize) {                            uint32_t symbolIndex = indirectTable[indirectTableOffset + j];                               const struct macho_nlist* sym = &amp;fSymbolTable[symbolIndex];                            const ImageLoader* image = NULL;                            uintptr_t symbolAddr = resolveUndefined(context, sym, twoLevel,                                                         symbolIsWeakReference(sym), &amp;image);                            // update pointer                              *ptrToBind = symbolAddr;                        }                    }                }        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><h3 id="setup-lazy-symbol-pointers-handler"><a href="#setup-lazy-symbol-pointers-handler" class="headerlink" title="setup lazy symbol pointers handler"></a>setup lazy symbol pointers handler</h3><p>&#x5BF9;&#x4E8E;lazy symbol pointer&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x4E2D;&#xFF0C;&#x5C06;&#x4E3A;&#x5176;&#x8BBE;&#x7F6E;stub&#x673A;&#x5236;&#x7684;handler&#x3002;&#x5177;&#x4F53;&#x4F4D;&#x7F6E;&#x5728;<code>__DATA</code>&#x4E2D;&#x7684;dyld  section&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachO::setupLazyPointerHandler(const LinkContext&amp; context){    const macho_header* mh = (macho_header*)fMachOData;    const uint32_t cmd_count = mh-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd;    cmd = cmds;    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        if ( cmd-&gt;cmd == LC_SEGMENT_COMMAND ) {            const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;            if ( strncmp(seg-&gt;segname, &quot;__DATA&quot;, 6) == 0 ) {                const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));               const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];               for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                   if ( strcmp(sect-&gt;sectname, &quot;__dyld&quot; ) == 0 ) {                       struct DATAdyld* dd = (struct DATAdyld*)(sect-&gt;addr + fSlide);                       if ( sect-&gt;size &gt; offsetof(DATAdyld, dyldLazyBinder) ) {                           if ( dd-&gt;dyldLazyBinder != (void*)&amp;stub_binding_helper )                               dd-&gt;dyldLazyBinder = (void*)&amp;stub_binding_helper;                     }                     if ( sect-&gt;size &gt; offsetof(DATAdyld, dyldFuncLookup) ) {                         if ( dd-&gt;dyldFuncLookup != (void*)&amp;_dyld_func_lookup )                             dd-&gt;dyldFuncLookup = (void*)&amp;_dyld_func_lookup;                     }                   }               }            }        }}</code></pre><p>&#x5728;&#x5EF6;&#x65F6;&#x7ED1;&#x5B9A;&#x65F6;&#xFF0C;&#x4F1A;&#x8FDB;&#x5165;<code>stub_binding_helper</code>&#x6C47;&#x7F16;&#xFF0C;&#x800C;&#x6C47;&#x7F16;&#x6700;&#x7EC8;&#x4EA4;&#x7ED9;<code>doBindLazySymbol</code>&#x6765;&#x5B8C;&#x6210;&#x5EF6;&#x65F6;&#x7ED1;&#x5B9A;&#x3002; <code>doBindLazySymbol</code>&#x4F1A;&#x904D;&#x5386;section&#xFF0C;&#x6839;&#x636E;&#x5730;&#x5740;&#x8303;&#x56F4;&#x627E;&#x5230;&#x6240;&#x5C5E;section&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;indirection table&#x7684;index&#xFF0C;&#x6765;&#x6700;&#x7EC8;&#x5230;&#x8FBE;&#x7B26;&#x53F7;&#x8868;&#xFF0C;resolve undefined&#x7B26;&#x53F7;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">uintptr_t ImageLoaderMachOClassic::doBindLazySymbol(uintptr_t* lazyPointer, const LinkContext&amp; context){    // scan for all lazy-pointer sections    const bool twoLevel = this-&gt;usesTwoLevelNameSpace();    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    const uint32_t* const indirectTable = (uint32_t*)&amp;fLinkEditBase[fDynamicInfo-&gt;indirectsymoff];    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        switch (cmd-&gt;cmd) {            case LC_SEGMENT_COMMAND:                {                    const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;                    const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));                    const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];                    for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd;                                                                                     ++sect) {                        const uint8_t type = sect-&gt;flags &amp; SECTION_TYPE;                        uint32_t symbolIndex = INDIRECT_SYMBOL_LOCAL;                        if ( type == S_LAZY_SYMBOL_POINTERS ) {                            const size_t pointerCount = sect-&gt;size / sizeof(uintptr_t);                            uintptr_t* const symbolPointers = (uintptr_t*)(sect-&gt;addr + fSlide);                            if ( (lazyPointer &gt;= symbolPointers) &amp;&amp; (lazyPointer &lt; &amp;symbolPointers[pointerCount]) ) {                                const uint32_t indirectTableOffset = sect-&gt;reserved1;                                const size_t lazyIndex = lazyPointer - symbolPointers;                                symbolIndex = indirectTable[indirectTableOffset + lazyIndex];                            }                        }                        if ( symbolIndex != INDIRECT_SYMBOL_ABS &amp;&amp; symbolIndex !=                                                                                INDIRECT_SYMBOL_LOCAL ) {                            const char* symbolName =                                                     &amp;fStrings[fSymbolTable[symbolIndex].n_un.n_strx];                            const ImageLoader* image = NULL;                            uintptr_t symbolAddr = this-&gt;resolveUndefined(context,                                         &amp;fSymbolTable[symbolIndex], twoLevel, false, &amp;image);                               *lazyPointer = symbolAddr;                            return symbolAddr;                        }                    }                }                break;        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><h3 id="stub&#x673A;&#x5236;"><a href="#stub&#x673A;&#x5236;" class="headerlink" title="stub&#x673A;&#x5236;"></a>stub&#x673A;&#x5236;</h3><p>&#x8D77;&#x70B9;&#x5728;<code>__TEXT</code>&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;<code>__TEXT</code>&#x4E2D;&#x5BF9;<code>_la_symbol_ptr</code>&#x7684;&#x5F15;&#x7528;&#x662F;&#x4E00;&#x6761;<code>call</code>&#x547D;&#x4EE4;&#xFF0C;<code>call</code>&#x547D;&#x4EE4;&#x4F1A;&#x5C06;&#x4E0B;&#x6761;&#x5730;&#x5740;&#x7559;&#x5B58;&#x5230;&#x6808;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x8DF3;&#x8F6C;&#x5230;&#x76EE;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x6267;&#x884C;&#x5B8C;&#x8DF3;&#x8F6C;&#x8FC7;&#x7A0B;&#x540E;&#x56DE;&#x5230;&#x4E0B;&#x6761;&#x5730;&#x5740;&#x3002;<code>call</code>&#x547D;&#x4EE4;&#x4F1A;&#x8DF3;&#x8F6C;&#x5230;<code>(__TEXT,__stubs)</code>&#x4E2D;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x662F;&#x4E00;&#x6761;<code>jmp</code>&#x547D;&#x4EE4;&#xFF0C;&#x518D;&#x6B21;&#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#xFF0C;&#x76EE;&#x7684;&#x5730;&#x5730;&#x5740;&#x5728;<code>(__DATA,__la_symbol_ptr)</code>&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x9996;&#x6B21;resolve&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x5176;&#x5730;&#x5740;&#x662F;<code>(__TEXT,__stub_helper)</code>&#xFF0C;&#x800C;&#x7ECF;&#x8FC7;resolve&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x5176;&#x5730;&#x5740;&#x4FBF;&#x662F;&#x7B26;&#x53F7;&#x7684;&#x6700;&#x7EC8;&#x5730;&#x5740;&#x4E86;&#x3002;</p><p>stub&#x673A;&#x5236;&#x9700;&#x8981;&#x7ECF;&#x8FC7;&#x4E24;&#x6B21;&#x8DF3;&#x8F6C;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#x95F4;&#x63A5;(indirection)&#x8DF3;&#x8F6C;&#xFF0C;&#x8FD9;&#x79CD;&#x8BBE;&#x8BA1;&#x6709;&#x4E24;&#x4E2A;&#x8981;&#x70B9;&#xFF1A;</p><ul><li>&#x95F4;&#x63A5;&#x8DF3;&#x8F6C;&#x7684;&#x672C;&#x8D28;&#x662F;&#x6DFB;&#x52A0;&#x4E86;&#x6B21;<code>jmp</code>&#xFF0C;&#x53EA;&#x80FD;&#x653E;&#x5728;<code>__TEXT</code>&#x4E2D;&#xFF0C;&#x8FD9;&#x5F52;&#x7ED3;&#x4E8E;&#x5176;&#x83B7;&#x5F97;&#x7684;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x6BB5;&#x53EF;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x3002;</li><li>&#x76EE;&#x7684;&#x5730;&#x5740;&#x8981;&#x653E;&#x5728;<code>__DATA</code>&#x4E2D;&#xFF0C;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x5C06;&#x7ED1;&#x5B9A;&#x8FC7;&#x7A0B;&#x5730;&#x5740;&#x66F4;&#x6539;&#x4E3A;&#x6700;&#x7EC8;&#x5730;&#x5740;&#x3002;</li></ul><p><img src="http://o79rgqboc.bkt.clouddn.com/symbol_stub.png" alt="symbol_stub"></p><h2 id="weak-bind"><a href="#weak-bind" class="headerlink" title="weak bind"></a>weak bind</h2><p>weak bind&#x8FD9;&#x4E00;&#x6B65;&#x662F;&#x5C06;&#x76F8;&#x540C;&#x7684;&#x5F31;&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x5F52;&#x5E76;(coalesce )&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5F3A;&#x7B26;&#x53F7;&#x5219;&#x5F52;&#x5E76;&#x6210;&#x5F3A;&#x7B26;&#x53F7;&#xFF0C;&#x5426;&#x5219;&#x5F52;&#x5E76;&#x6210;&#x6309;&#x88C5;&#x8F7D;&#x987A;&#x5E8F;&#x7684;&#x9996;&#x4E2A;&#x5F31;&#x7B26;&#x53F7;&#xFF0C;&#x5B9E;&#x73B0;&#x4E0A;&#x901A;&#x8FC7;&#x7B26;&#x53F7;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;&#x8C03;&#x6574;&#x5E93;&#x7684;&#x987A;&#x5E8F;&#x4EE5;&#x7F6E;&#x524D;&#x76F8;&#x540C;&#x7684;&#x7B26;&#x53F7;&#x548C;&#x7F6E;&#x540E;&#x5904;&#x7406;&#x5B8C;&#x7684;&#x5E93;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x7B26;&#x53F7;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5F3A;&#x7B26;&#x53F7;&#x5219;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x67E5;&#x627E;&#xFF0C;&#x5426;&#x5219;&#x4ECE;&#x88C5;&#x8F7D;&#x987A;&#x5E8F;&#x627E;&#x5230;&#x9996;&#x4E2A;&#x5F31;&#x7B26;&#x53F7;&#x5730;&#x5740;&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x5E93;&#x4E2D;&#x7684;&#x76F8;&#x540C;&#x7B26;&#x53F7;&#x90FD;&#x8986;&#x76D6;(ovveride)&#x4E3A;&#x8BE5;&#x5730;&#x5740;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x589E;&#x52A0;(increment)&#x9996;&#x4E2A;&#x5E93;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x5E76;&#x91CD;&#x65B0;&#x6392;&#x5E8F;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoader::weakBind(const LinkContext&amp; context){    // get set of ImageLoaders that participate in coalecsing    ImageLoader* imagesNeedingCoalescing[fgImagesRequiringCoalescing];    int count = context.getCoalescedImages(imagesNeedingCoalescing);    // make symbol iterators for each    ImageLoader::CoalIterator iterators[count];    ImageLoader::CoalIterator* sortedIts[count];    for(int i=0; i &lt; count; ++i) {        imagesNeedingCoalescing[i]-&gt;initializeCoalIterator(iterators[i], i);        sortedIts[i] = &amp;iterators[i];    }    // walk all symbols keeping iterators in sync by     // only ever incrementing the iterator with the lowest symbol     int doneCount = 0;    while ( doneCount != count ) {        // increment iterator with lowest symbol        if ( sortedIts[0]-&gt;image-&gt;incrementCoalIterator(*sortedIts[0]) )            ++doneCount;         // re-sort iterators        for(int i=1; i &lt; count; ++i) {            int result = strcmp(sortedIts[i-1]-&gt;symbolName, sortedIts[i]-&gt;symbolName);            if ( result == 0 )                sortedIts[i-1]-&gt;symbolMatches = true;            if ( result &gt; 0 ) {                // new one is bigger then next, so swap                ImageLoader::CoalIterator* temp = sortedIts[i-1];                sortedIts[i-1] = sortedIts[i];                sortedIts[i] = temp;            }            if ( result &lt; 0 )                break;        }        // process all matching symbols just before incrementing the lowest one that matches        if ( sortedIts[0]-&gt;symbolMatches &amp;&amp; !sortedIts[0]-&gt;done ) {            const char* nameToCoalesce = sortedIts[0]-&gt;symbolName;            // pick first symbol in load order (and non-weak overrides weak)            uintptr_t targetAddr = 0;            ImageLoader* targetImage = NULL;            for(int i=0; i &lt; count; ++i) {                if ( strcmp(iterators[i].symbolName, nameToCoalesce) == 0 ) {                    if ( iterators[i].weakSymbol ) {                        if ( targetAddr == 0 ) {                            targetAddr = iterators[i].image-&gt;getAddressCoalIterator(iterators[i], context);                            if ( targetAddr != 0 )                                targetImage = iterators[i].image;                        }                    }                    else {                        targetAddr = iterators[i].image-&gt;getAddressCoalIterator(iterators[i], context);                        if ( targetAddr != 0 ) {                            targetImage = iterators[i].image;                            // strong implementation found, stop searching                            break;                        }                    }                }            }        }        // tell each to bind to this symbol (unless already bound)        if ( targetAddr != 0 ) {            for(int i=0; i &lt; count; ++i) {                if ( strcmp(iterators[i].symbolName, nameToCoalesce) == 0 ) {                    if ( ! iterators[i].image-&gt;fWeakSymbolsBound )                        iterators[i].image-&gt;updateUsesCoalIterator(iterators[i], targetAddr, targetImage, context);                      iterators[i].symbolMatches = false;                 }            }        }     }}</code></pre><p><code>getCoalescedImages</code>&#x5C06;&#x6240;&#x6709;&#x5E93;&#x4E2D;&#x6709;&#x88AB;&#x5BFC;&#x51FA;&#x5F31;&#x7B26;&#x53F7;&#x5B9A;&#x4E49;&#x548C;&#x5BFC;&#x5165;&#x4E86;&#x5F31;&#x7B26;&#x53F7;&#x7684;&#x5E93;&#x5168;&#x90E8;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x3002;</p><p><code>CoalIterator</code>&#x662F;&#x4E3A;&#x4E86;&#x6392;&#x5E8F;&#x800C;&#x5B9E;&#x73B0;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x6301;&#x6709;&#x5E93;&#x548C;&#x5F53;&#x524D;&#x8FED;&#x4EE3;&#x7B26;&#x53F7;index&#xFF0C;&#x7ED3;&#x6784;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">struct CoalIterator{    ImageLoader*    image;    const char*        symbolName;    unsigned int    loadOrder;    bool            weakSymbol;    bool            symbolMatches;    bool            done;    // the following are private to the ImageLoader subclass    uintptr_t        curIndex;    uintptr_t        endIndex;    uintptr_t        address;    uintptr_t        type;    uintptr_t        addend;};</code></pre><p>&#x5728;<code>initializeCoalIterator</code>&#x4E2D;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5728;<code>incrementCoalIterator</code>&#x4E2D;&#x8FED;&#x4EE3;&#x5230;&#x4E0B;&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x5728;<code>getAddressCoalIterator</code>&#x4E2D;&#x83B7;&#x53D6;&#x7B26;&#x53F7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5728;<code>updateUsesCoalIterator</code>&#x4E2D;&#x66F4;&#x65B0;&#x7B26;&#x53F7;&#x5730;&#x5740;&#x3002;<code>updateUsesCoalIterator</code>&#x4E0E;&#x4E0A;&#x6587;&#x4E2D;&#x7684;&#x88AB;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#x548C;&#x7ED1;&#x5B9A;non lazy indirect symbol pointers&#x7C7B;&#x4F3C;&#xFF0C;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c++">void ImageLoaderMachOClassic::updateUsesCoalIterator(CoalIterator&amp; it, uintptr_t value, ImageLoader* targetImage, const LinkContext&amp; context){    uint32_t symbol_index = 0;    if ( fDynamicInfo-&gt;tocoff != 0 ) {        const dylib_table_of_contents* toc = (dylib_table_of_contents*)&amp;fLinkEditBase[fDynamicInfo-&gt;tocoff];        symbol_index = toc[it.curIndex-1].symbol_index;    }    else {       symbol_index = fDynamicInfo-&gt;iextdefsym + (uint32_t)it.curIndex - 1;    }    // scan external relocations for uses of symbol_index    const uintptr_t relocBase = this-&gt;getRelocBase();    const relocation_info* const relocsStart = (struct relocation_info*)(&amp;fLinkEditBase[fDynamicInfo-&gt;extreloff]);    const relocation_info* const relocsEnd = &amp;relocsStart[fDynamicInfo-&gt;nextrel];    for (const relocation_info* reloc=relocsStart; reloc &lt; relocsEnd; ++reloc) {        if ( reloc-&gt;r_symbolnum == symbol_index ) {            const struct macho_nlist* undefinedSymbol = &amp;fSymbolTable[reloc-&gt;r_symbolnum];            const char* symbolName = &amp;fStrings[undefinedSymbol-&gt;n_un.n_strx];            uintptr_t* location = ((uintptr_t*)(reloc-&gt;r_address + relocBase));            *location = value;        }    }    // scan lazy and non-lazy pointers for uses of symbol_index    const uint32_t cmd_count = ((macho_header*)fMachOData)-&gt;ncmds;    const struct load_command* const cmds = (struct load_command*)&amp;fMachOData[sizeof(macho_header)];    const struct load_command* cmd = cmds;    const uint32_t* const indirectTable = (uint32_t*)&amp;fLinkEditBase[fDynamicInfo-&gt;indirectsymoff];    for (uint32_t i = 0; i &lt; cmd_count; ++i) {        if ( cmd-&gt;cmd == LC_SEGMENT_COMMAND ) {            const struct macho_segment_command* seg = (struct macho_segment_command*)cmd;            const struct macho_section* const sectionsStart = (struct macho_section*)((char*)seg + sizeof(struct macho_segment_command));            const struct macho_section* const sectionsEnd = &amp;sectionsStart[seg-&gt;nsects];            for (const struct macho_section* sect=sectionsStart; sect &lt; sectionsEnd; ++sect) {                uint32_t elementSize = sizeof(uintptr_t);                switch ( sect-&gt;flags &amp; SECTION_TYPE ) {                    case S_NON_LAZY_SYMBOL_POINTERS:                    case S_LAZY_SYMBOL_POINTERS:                         {                            size_t elementCount = sect-&gt;size / elementSize;                            const uint32_t indirectTableOffset = sect-&gt;reserved1;                            uint8_t* ptrToBind = (uint8_t*)(sect-&gt;addr + fSlide);                            for (size_t j=0; j &lt; elementCount; ++j, ptrToBind += elementSize) {                                if ( indirectTable[indirectTableOffset + j] == symbol_index ) {                                // update pointer                                   *ptrToBind = value;                                }                            }                        }                        break;                }            }        }        cmd = (const struct load_command*)(((char*)cmd)+cmd-&gt;cmdsize);    }}</code></pre><h2 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2><ul><li>&#x88C5;&#x8F7D;&#x4F9D;&#x8D56;(load dependency)&#xFF1A;&#x88C5;&#x8F7D;&#x4F9D;&#x8D56;&#x4EE5;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5F62;&#x6210;&#x6709;&#x5411;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x6216;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#xFF0C;&#x4E00;&#x822C;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x3002;&#x88C5;&#x8F7D;&#x5E93;&#x5C31;&#x662F;&#x5C06;&#x5E93;&#x7684;&#x6BB5;&#x6620;&#x5C04;&#x5165;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x3002;</li><li>&#x57FA;&#x5740;&#x91CD;&#x7F6E;(rebasing)&#xFF1A;dyld&#x94FE;&#x63A5;&#x6B65;&#x9AA4;&#x4E2D;&#x7684;rebase&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x7684;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#x3002;</li><li>&#x5168;&#x5C40;&#x7B26;&#x53F7;&#x4ECB;&#x5165;(global symbol interpose)&#xFF1A;&#x5168;&#x5C40;&#x7B26;&#x53F7;&#x4ECB;&#x5165;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;&#x76F8;&#x540C;&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x4E3A;&#x4E86;&#x4E0D;&#x9020;&#x6210;&#x51B3;&#x8BAE;&#x6210;&#x4E0D;&#x540C;&#x5730;&#x5740;&#xFF0C;&#x8981;&#x5BF9;&#x76F8;&#x540C;&#x7B26;&#x53F7;&#x4ECB;&#x5165;&#x5904;&#x7406;&#xFF0C;&#x7EDF;&#x4E00;&#x8986;&#x76D6;&#x6210;&#x5168;&#x5C40;&#x9996;&#x4E2A;&#x52A0;&#x5165;&#x7684;&#x7B26;&#x53F7;&#x3002;dyld&#x94FE;&#x63A5;&#x6B65;&#x9AA4;&#x4E2D;weak bind&#x6B63;&#x662F;&#x5BF9;&#x5F31;&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x5168;&#x5C40;&#x7B26;&#x53F7;&#x4ECB;&#x5165;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x76F8;&#x540C;&#x7684;&#x5F3A;&#x7B26;&#x53F7;&#x5219;&#x8986;&#x76D6;&#x6210;&#x5F3A;&#x7B26;&#x53F7;&#xFF0C;&#x5426;&#x5219;&#x8986;&#x76D6;&#x6210;&#x9996;&#x4E2A;&#x52A0;&#x5165;&#x7684;&#x5F31;&#x7B26;&#x53F7;&#x3002;</li><li>&#x5168;&#x5C40;&#x7B26;&#x53F7;&#x8868;(global symbol table)&#xFF1A;dyld&#x94FE;&#x63A5;&#x5E93;&#x7684;&#x6B65;&#x9AA4;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x5408;&#x5E76;&#x7B26;&#x53F7;&#x8868;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x8FD9;&#x8868;&#x660E;&#xFF0C;dyld&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x5168;&#x5C40;&#x7B26;&#x53F7;&#x8868;&#xFF0C;&#x7B26;&#x53F7;&#x5206;&#x6563;&#x5230;&#x5404;&#x81EA;&#x7B26;&#x53F7;&#x8868;&#x4E2D;&#xFF0C;&#x51B3;&#x8BAE;&#x7B26;&#x53F7;&#x6839;&#x636E;flat&#x6216;two level&#x5230;&#x6240;&#x6709;&#x7B26;&#x53F7;&#x8868;&#x6216;&#x5173;&#x8054;&#x7B26;&#x53F7;&#x8868;&#x641C;&#x7D22;&#x3002;</li></ul><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p><a href="https://glandium.org/blog/?p=2764" target="_blank" rel="noopener">https://glandium.org/blog/?p=2764</a></p><p><a href="http://newosxbook.com/articles/DYLD.html" target="_blank" rel="noopener">http://newosxbook.com/articles/DYLD.html</a></p>]]></content>
      
      <categories>
          
          <category> 链接与装载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链接与装载 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机体系-链接与装载</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%A3%85%E8%BD%BD/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%A3%85%E8%BD%BD/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x7AE0;&#x7684;&#x4E3B;&#x89D2;&#x662F;&#x94FE;&#x63A5;&#x4E0E;&#x88C5;&#x8F7D;&#xFF0C;&#x94FE;&#x63A5;&#x548C;&#x88C5;&#x8F7D;&#x662F;&#x4E00;&#x6BB5;&#x9690;&#x85CF;&#x7684;&#x5F88;&#x6DF1;&#x7684;&#x5492;&#x8BED;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x7A0B;&#x5E8F;&#x5458;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x63A5;&#x89E6;&#x5230;&#xFF0C;&#x542C;&#x5230;&#x7684;&#x4E5F;&#x53EA;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x7A83;&#x7A83;&#x79C1;&#x8BED;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#xFF0C;&#x5374;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x7684;&#x6838;&#x5FC3;&#x3002;</p><a id="more"></a><h2 id="&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x5386;&#x53F2;"><a href="#&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x5386;&#x53F2;" class="headerlink" title="&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x5386;&#x53F2;"></a>&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x5386;&#x53F2;</h2><p>&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x7684;&#x5386;&#x53F2;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x8FDB;&#x5316;&#x53F2;&#xFF0C;&#x662F;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x4E00;&#x6BB5;&#x6545;&#x4E8B;&#x3002;Long time ago&#x2026; &#x7A0B;&#x5E8F;&#x5458;&#x5199;&#x7A0B;&#x5E8F;&#x90FD;&#x662F;&#x7528;&#x7EB8;&#x5E26;&#xFF0C;&#x90A3;&#x65F6;&#x5019;&#x8FD8;&#x5728;&#x5199;0&#x3001;1&#x673A;&#x5668;&#x7801;&#x3002;&#x7EB8;&#x5E26;&#x4E0A;&#x6253;&#x5B54;&#x5C31;&#x662F;0&#xFF0C;&#x4E0D;&#x6253;&#x5B54;&#x5C31;&#x662F;1&#x3002;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x673A;&#x8BFB;&#x53D6;&#x7EB8;&#x5E26;&#x5C31;&#x662F;&#x8BFB;&#x53D6;&#x6307;&#x4EE4;&#x3002;&#x8FD9;&#x6837;&#x5199;&#x7A0B;&#x5E8F;&#x7684;&#x6548;&#x7387;&#x600E;&#x80FD;&#x63A5;&#x53D7;&#xFF1F;&#x5E76;&#x4E14;&#xFF0C;&#x5199;&#x7A0B;&#x5E8F;&#x5982;&#x679C;&#x72AF;&#x4E86;&#x9519;&#x8BEF;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x91CD;&#x65B0;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x518D;&#x7528;&#x65B0;&#x7EB8;&#x5E26;&#x5199;&#x4E00;&#x904D;&#xFF1F;&#x7A0B;&#x5E8F;&#x5458;&#x4EEC;&#x673A;&#x667A;&#x7684;&#x5F00;&#x59CB;&#x60F3;&#x529E;&#x6CD5;&#x4E86;&#xFF0C;&#x5148;&#x662F;&#x8FD9;&#x6837;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF1A;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/Patch%E7%9A%84%E7%94%B1%E6%9D%A5.jpg" alt="Patch&#x7684;&#x7531;&#x6765;"></p><p>&#x5C06;&#x6307;&#x5E26;&#x6709;&#x8BEF;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x7528;&#x9ED1;&#x9ED1;&#x7684;&#x5C0F;&#x8D34;&#x7EB8;&#x586B;&#x4E0A;&#x53BB;&#xFF0C;&#x8FD9;&#x6837;&#x5C06;0&#x6539;&#x6210;1&#x4E86;&#x3002;&#x8FD9;&#x4E5F;&#x662F;Patch&#x540D;&#x5B57;&#x7684;&#x7531;&#x6765;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x5199;&#x6307;&#x4EE4;&#x6548;&#x7387;&#x8FD8;&#x662F;&#x592A;&#x4F4E;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x4EEC;&#x518D;&#x673A;&#x667A;&#x7684;&#x60F3;&#x529E;&#x6CD5;&#x3002;&#x540E;&#x6765;&#x5C06;&#x6307;&#x4EE4;&#x8FDB;&#x884C;&#x7B26;&#x53F7;&#x5316;(Symbol)&#xFF0C;&#x62BD;&#x8C61;&#x51FA;&#x6307;&#x4EE4;&#x96C6;&#xFF0C;&#x8FD9;&#x65F6;&#x5C31;&#x51FA;&#x73B0;&#x4E86;&#x6C47;&#x7F16;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x6548;&#x7387;&#x4E0A;&#x4E86;&#x4E00;&#x4E2A;&#x6863;&#x6B21;&#x3002;&#x4F46;&#x662F;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x53C8;&#x51FA;&#x73B0;&#x4E86;&#x3002;&#x5728;&#x5199;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x5199;jmp &#x5177;&#x4F53;&#x7684;&#x51FD;&#x6570;&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x540E;&#x6765;&#x8981;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x524D;&#x9762;&#x6DFB;&#x52A0;&#x6307;&#x4EE4;&#xFF0C;&#x90A3;&#x4E48;&#x51FD;&#x6570;&#x5730;&#x5740;&#x4E5F;&#x8981;&#x8DDF;&#x7740;&#x6539;&#x3002;&#x8FD9;&#x6837;&#x7275;&#x4E00;&#x53D1;&#x52A8;&#x5168;&#x8EAB;&#x7684;&#x611F;&#x89C9;&#x53EF;&#x4E0D;&#x597D;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x5F71;&#x54CD;(impact)&#x7F29;&#x51CF;&#x5230;&#x6700;&#x5C0F;&#xFF0C;&#x4E0D;&#x5982;&#x5C06;&#x51FD;&#x6570;&#x5730;&#x5740;&#x4E5F;&#x7B26;&#x53F7;&#x5316;&#x3002;&#x51E1;&#x662F;&#x5199;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x5148;&#x5199;&#x6210;jmp func&#xFF0C;&#x7B49;&#x5230;&#x7A0B;&#x5E8F;&#x5206;&#x914D;&#x4E86;&#x865A;&#x62DF;&#x5730;&#x5740;&#x540E;&#xFF0C;&#x518D;&#x5C06;func&#x6362;&#x6210;&#x771F;&#x6B63;&#x7684;&#x51FD;&#x6570;&#x5730;&#x5740;&#x3002;</p><p>&#x968F;&#x7740;&#x751F;&#x4EA7;&#x529B;&#x7684;&#x63D0;&#x5347;&#xFF0C;&#x7A0B;&#x5E8F;&#x7684;&#x89C4;&#x6A21;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x51FA;&#x73B0;&#x4E86;&#xFF0C;&#x7A0B;&#x5E8F;&#x81A8;&#x80C0;&#x5230;&#x96BE;&#x4EE5;&#x7EF4;&#x62A4;&#x548C;&#x9605;&#x8BFB;&#x4E86;&#x3002;&#x7A0B;&#x5E8F;&#x5458;&#x4EEC;&#x5C31;&#x5C06;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#x5316;&#x3001;&#x5C42;&#x6B21;&#x5316;&#x3002;&#x8FD9;&#x6837;&#x4E5F;&#x4F7F;&#x7F16;&#x8BD1;&#x7684;&#x5355;&#x4F4D;&#x66F4;&#x5C0F;&#x7C92;&#x5EA6;&#x5316;&#x3002;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x540C;&#x7F16;&#x8BD1;&#x5355;&#x4F4D;&#x4E4B;&#x95F4;&#x76F8;&#x4E92;&#x9694;&#x79BB;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5BF9;&#x4E8E;C&#x8BED;&#x8A00;&#x7CFB;&#xFF0C;&#x4E00;&#x4E2A;.h&#x548C;&#x4E00;&#x4E2A;.m&#x5C31;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x5355;&#x4F4D;&#x3002;.m&#x6C47;&#x7F16;&#x65F6;&#xFF0C;&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x5176;&#x4ED6;.m&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3001;&#x51FD;&#x6570;&#x5730;&#x5740;&#x7684;&#x3002;</p><p>&#x800C;&#x4E0D;&#x540C;&#x7F16;&#x8BD1;&#x5355;&#x4F4D;&#x4E4B;&#x95F4;&#x76F8;&#x4E92;&#x5F15;&#x7528;&#x9700;&#x8981;&#x5982;&#x6B64;&#x8FC7;&#x7A0B;&#xFF1A;&#x88AB;&#x5F15;&#x7528;&#x653E;&#x5B9A;&#x4E49;&#x7B26;&#x53F7;&#xFF0C;&#x5F15;&#x7528;&#x65B9;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#xFF0C;&#x7B49;&#x7F16;&#x8BD1;&#x5355;&#x4F4D;&#x5206;&#x914D;&#x4E86;&#x865A;&#x62DF;&#x5730;&#x5740;&#x540E;&#xFF0C;&#x8FDB;&#x884C;&#x7B26;&#x53F7;&#x51B3;&#x8BAE;&#xFF0C;&#x5C06;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#x4FEE;&#x6B63;(fix)&#x6210;&#x771F;&#x6B63;&#x8C03;&#x7528;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x3002;&#x800C;&#x8D1F;&#x8D23;&#x8FD9;&#x4E00;&#x6B65;&#x7684;&#x5C31;&#x662F;&#x94FE;&#x63A5;&#x5668;(Linker)&#xFF0C;&#x8FD9;&#x4E5F;&#x53EB;&#x91CD;&#x5B9A;&#x4F4D;(relocation)&#x3002;</p><h2 id="&#x94FE;&#x63A5;"><a href="#&#x94FE;&#x63A5;" class="headerlink" title="&#x94FE;&#x63A5;"></a>&#x94FE;&#x63A5;</h2><p>&#x94FE;&#x63A5;&#x4E3B;&#x8981;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x5C06;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;</p><h3 id="&#x91CD;&#x5B9A;&#x4F4D;-relocation"><a href="#&#x91CD;&#x5B9A;&#x4F4D;-relocation" class="headerlink" title="&#x91CD;&#x5B9A;&#x4F4D;(relocation)"></a>&#x91CD;&#x5B9A;&#x4F4D;(relocation)</h3><p>&#x6240;&#x754C;&#x5B9A;&#x7684;&#x91CD;&#x5B9A;&#x4F4D;&#x53EA;&#x9488;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x6A21;&#x5757;&#xFF0C;&#x76F8;&#x540C;&#x6A21;&#x5757;&#x4E0D;&#x5B58;&#x5728;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;&#x6307;&#x4EE4;&#x533A;&#x5206;&#x4E3A;&#x7EDD;&#x5BF9;&#x6307;&#x4EE4;&#x548C;&#x76F8;&#x5BF9;&#x6307;&#x4EE4;&#xFF0C;&#x540C;&#x4E00;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#x76F4;&#x63A5;&#x53EF;&#x4EE5;&#x7528;&#x76F8;&#x5BF9;&#x6307;&#x4EE4;&#x6765;&#x5B8C;&#x6210;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x66F4;&#x590D;&#x6742;&#x7684;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x800C;&#x4E0D;&#x540C;&#x6A21;&#x5757;&#x53EA;&#x80FD;&#x7528;&#x7EDD;&#x5BF9;&#x6307;&#x4EE4;&#xFF0C;&#x901A;&#x8FC7;&#x91CD;&#x5B9A;&#x4F4D;&#x4FEE;&#x6B63;&#x4E86;&#x3002;</p><h3 id="&#x9759;&#x6001;&#x94FE;&#x63A5;"><a href="#&#x9759;&#x6001;&#x94FE;&#x63A5;" class="headerlink" title="&#x9759;&#x6001;&#x94FE;&#x63A5;"></a>&#x9759;&#x6001;&#x94FE;&#x63A5;</h3><p>&#x9759;&#x6001;&#x94FE;&#x63A5;&#x4E3A;<strong>&#x4E24;&#x9636;&#x6BB5;&#x94FE;&#x63A5;(Two-pass Linking)</strong>:</p><ol><li>&#x786E;&#x5B9A;&#x548C;&#x5206;&#x914D;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF1A;&#x5C06;&#x6240;&#x6709;&#x6A21;&#x5757;&#x76F8;&#x540C;section&#x5408;&#x5E76;&#xFF0C;&#x518D;&#x660E;&#x786E;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x5B9A;&#x4E49;&#x548C;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#xFF0C;&#x751F;&#x6210;&#x91CD;&#x5B9A;&#x4F4D;&#x8868;&#x548C;.symtab&#xFF0C;&#x518D;&#x4E3A;&#x6BCF;&#x4E2A;section&#x5206;&#x914D;&#x865A;&#x62DF;&#x5730;&#x5740;&#xFF0C;&#x6700;&#x540E;&#x5C06;.symtab&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x7F6E;&#x6362;&#x6210;&#x865A;&#x62DF;&#x5730;&#x5740;&#x3002;</li><li>&#x7B26;&#x53F7;&#x91CD;&#x5B9A;&#x4F4D;&#xFF1A;&#x5C06;&#x6240;&#x6709;&#x7B26;&#x53F7;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x901A;&#x8FC7;&#x91CD;&#x5B9A;&#x4F4D;&#x8868;&#x627E;&#x5230;&#x6240;&#x6709;section&#x4E2D;&#x9700;&#x8981;&#x88AB;&#x4FEE;&#x6B63;&#x7684;&#x7B26;&#x53F7;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x4ECE;.symtab&#x67E5;&#x8BE2;&#x51FA;&#x865A;&#x62DF;&#x5730;&#x5740;&#x66FF;&#x6362;&#x3002;</li></ol><p>&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x94FE;&#x63A5;&#x5668;&#x5F88;&#x806A;&#x660E;&#xFF0C;&#x53EA;&#x6709;&#x5305;&#x542B;&#x771F;&#x6B63;&#x88AB;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x624D;&#x4F1A;&#x88AB;&#x94FE;&#x63A5;&#x5165;&#x6700;&#x7EC8;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;</p><h3 id="&#x4E00;&#x4F53;&#x5316;"><a href="#&#x4E00;&#x4F53;&#x5316;" class="headerlink" title="&#x4E00;&#x4F53;&#x5316;"></a>&#x4E00;&#x4F53;&#x5316;</h3><p>&#x968F;&#x7740;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x6162;&#x6162;&#x53D1;&#x5C55;&#x8D77;&#x6765;&#xFF0C;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x4E5F;&#x66B4;&#x9732;&#x51FA;&#x4E86;&#x95EE;&#x9898;&#x3002;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x5C06;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#x548C;&#x4E3B;&#x4F53;&#x7A0B;&#x5E8F;&#x4F5C;&#x4E3A;&#x4E00;&#x4F53;&#xFF0C;&#x5982;&#x679C;&#x591A;&#x4E2A;&#x7A0B;&#x5E8F;&#x94FE;&#x63A5;&#x540C;&#x4E00;&#x4EFD;&#x7A0B;&#x5E8F;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x8981;&#x8FDB;&#x5165;&#x6BCF;&#x4E00;&#x4E2A;&#x4E3B;&#x7A0B;&#x5E8F;&#xFF0C;&#x8FD9;&#x6837;&#x76F8;&#x5F53;&#x4E8E;&#x5C06;&#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x590D;&#x5236;&#x4E86;&#x591A;&#x4EFD;&#xFF0C;&#x5360;&#x4E86;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#x3002;&#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x662F;&#x5C06;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#x548C;&#x4E3B;&#x7A0B;&#x5E8F;&#x9694;&#x79BB;&#x5F00;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x8BDE;&#x751F;&#x4E86;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x3002;</p><h3 id="&#x52A8;&#x6001;&#x94FE;&#x63A5;"><a href="#&#x52A8;&#x6001;&#x94FE;&#x63A5;" class="headerlink" title="&#x52A8;&#x6001;&#x94FE;&#x63A5;"></a>&#x52A8;&#x6001;&#x94FE;&#x63A5;</h3><p>&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5C06;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#x548C;&#x4E3B;&#x7A0B;&#x5E8F;&#x9694;&#x79BB;&#x5F00;&#xFF0C;&#x591A;&#x4E2A;&#x4E3B;&#x7A0B;&#x5E8F;&#x4E5F;&#x53EF;&#x4EE5;&#x94FE;&#x63A5;&#x540C;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#xFF0C;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#x4E0D;&#x5FC5;&#x548C;&#x4E3B;&#x7A0B;&#x5E8F;&#x4E00;&#x8D77;&#x8F7D;&#x5165;&#xFF0C;&#x53EF;&#x7B49;&#x5230;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x65F6;&#x518D;&#x8F7D;&#x5165;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x52A8;&#x6001;&#x5E93;&#x63D0;&#x4F9B;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;&#x5171;&#x4EAB;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x52A0;&#x8F7D;&#x3002;</p><p>&#x53CD;&#x89C2;&#x9759;&#x6001;&#x94FE;&#x63A5;&#xFF0C;&#x5728;&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#x5C31;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x51FA;&#x865A;&#x62DF;&#x5730;&#x5740;&#xFF0C;&#x800C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5C31;&#x4E0D;&#x884C;&#x4E86;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x65E0;&#x6CD5;&#x201C;&#x9884;&#x6D4B;&#x201D;&#x51FA;&#x4E3B;&#x4F53;&#x7A0B;&#x5E8F;&#x5730;&#x5740;&#x3002;&#x8FD9;&#x5BFC;&#x81F4;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x8981;&#x5C06;&#x91CD;&#x5B9A;&#x4F4D;&#x63A8;&#x8FDF;&#x5230;&#x52A8;&#x6001;&#x5E93;&#x88C5;&#x8F7D;&#x540E;&#x3002;&#x4E0D;&#x4EC5;&#x5982;&#x6B64;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x4E0D;&#x4EC5;&#x65E0;&#x6CD5;&#x201C;&#x9884;&#x6D4B;&#x201D;&#x51FA;&#x4E3B;&#x4F53;&#x7A0B;&#x5E8F;&#x5730;&#x5740;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x4E5F;&#x65E0;&#x6CD5;&#x201C;&#x9884;&#x6D4B;&#x201D;&#x51FA;&#x81EA;&#x5DF1;&#x7A0B;&#x5E8F;&#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#x3002;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x540C;&#x6837;&#x4E3A;<strong>&#x4E24;&#x9636;&#x6BB5;&#x94FE;&#x63A5;(Two-pass Linking)</strong>:</p><ol><li>&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;&#xFF1A;&#x88C5;&#x8F7D;&#x5E76;&#x786E;&#x5B9A;&#x548C;&#x5206;&#x914D;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x540E;&#xFF0C;&#x8981;&#x5BF9;&#x4F7F;&#x7528;&#x7684;&#x5730;&#x5740;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#x3002;</li><li>&#x7B26;&#x53F7;&#x91CD;&#x5B9A;&#x4F4D;&#xFF1A;&#x4E0E;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#x7C7B;&#x4F3C;&#x3002;</li></ol><h3 id="&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;"><a href="#&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;" class="headerlink" title="&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;"></a>&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;</h3><p>&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;&#x6709;&#x4E24;&#x79CD;&#x601D;&#x8DEF;&#xFF1A;</p><ul><li>&#x5730;&#x5740;&#x65E0;&#x5173;&#x7801;(PIC)&#xFF1A;&#x5176;&#x4EE3;&#x7801;&#x4E2D;&#x5BF9;&#x5730;&#x5740;&#x7684;&#x5F15;&#x7528;&#x4E0D;&#x80FD;&#x6709;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x5FC5;&#x987B;&#x201C;&#x95F4;&#x63A5;&#x201D;&#x5F15;&#x7528;&#xFF0C;&#x800C;&#x201C;&#x95F4;&#x63A5;&#x201D;&#x5F15;&#x7528;&#x5F85;&#x88C5;&#x8F7D;&#x540E;&#x518D;&#x4FEE;&#x6B63;&#x3002;</li><li>&#x57FA;&#x5740;&#x91CD;&#x7F6E;(Rebasing)&#xFF1A;&#x5176;&#x4EE3;&#x7801;&#x4E2D;&#x5BF9;&#x5730;&#x5740;&#x7684;&#x5F15;&#x7528;&#x4F7F;&#x7528;&#x76F8;&#x5BF9;&#x5730;&#x5740;&#xFF0C;&#x5F85;&#x88C5;&#x8F7D;&#x540E;&#x5F97;&#x51FA;&#x81EA;&#x5DF1;&#x5730;&#x5740;&#x540E;&#xFF0C;&#x518D;&#x5C06;&#x6240;&#x6709;&#x76F8;&#x5BF9;&#x5730;&#x5740;&#x6DFB;&#x52A0;offset&#xFF0C;&#x7F6E;&#x6362;&#x6210;&#x7EDD;&#x5BF9;&#x5730;&#x5740;&#x3002;</li></ul><p>&#x8FD9;&#x4E24;&#x79CD;&#x601D;&#x8DEF;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#xFF0C;&#x662F;&#x5426;&#x4FDD;&#x7559;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5171;&#x4EAB;&#x7684;&#x7279;&#x70B9;&#x3002;&#x52A8;&#x6001;&#x5E93;&#x88AB;&#x591A;&#x4E2A;&#x7A0B;&#x5E8F;&#x94FE;&#x63A5;&#x800C;&#x53EA;&#x5B58;&#x5728;&#x4E00;&#x4EFD;&#xFF0C;&#x88AB;&#x94FE;&#x5165;&#x7684;&#x4E0D;&#x540C;&#x7A0B;&#x5E8F;&#x5176;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x4E0D;&#x540C;&#xFF0C;&#x5176;&#x5BF9;&#x4E3B;&#x7A0B;&#x5E8F;&#x7684;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#x5730;&#x5740;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x3002;</p><p><strong>&#x5730;&#x5740;&#x65E0;&#x5173;&#x4EE3;&#x7801;(PIC)</strong>&#xFF1A;&#x5927;&#x4F53;&#x601D;&#x8DEF;&#x662F;&#x5C06;&#x4EE3;&#x7801;&#x4ECD;&#x653E;&#x5728;.text&#xFF0C;&#x800C;&#x5F15;&#x7528;&#x5730;&#x5740;&#x653E;&#x5728;.data&#xFF0C;&#x5F15;&#x7528;&#x201C;&#x95F4;&#x63A5;&#x201D;&#x5230;.data&#x4E2D;&#x53BB;&#x5BFB;&#x627E;&#xFF0C;&#x8FD9;&#x6837;&#x6BCF;&#x4E2A;&#x4E3B;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x4FDD;&#x6301;&#x52A8;&#x6001;&#x5E93;&#x4EE3;&#x7801;&#x662F;&#x4E00;&#x4EFD;&#xFF0C;&#x800C;&#x5F15;&#x7528;&#x5730;&#x5740;&#x5404;&#x4E0D;&#x540C;&#x3002;&#x5185;&#x90E8;&#x5F15;&#x7528;&#x540C;&#x6837;&#x7528;&#x76F8;&#x5BF9;&#x5730;&#x5740;&#x6307;&#x4EE4;&#x89E3;&#x51B3;&#x3002;</p><p>ELF&#x901A;&#x8FC7;.got(global offset table)&#x6765;&#x5B8C;&#x6210;&#x201C;&#x95F4;&#x63A5;&#x201D;&#x5F15;&#x7528;&#xFF0C;.got&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6570;&#x7EC4;&#xFF0C;.got&#x5B58;&#x50A8;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#x7684;&#x5B9E;&#x9645;&#x5730;&#x5740;&#x3002;&#x800C;&#x4EE3;&#x7801;&#x6BB5;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#x76F4;&#x63A5;&#x66F4;&#x6539;&#x4E3A;&#x5F15;&#x7528;.got&#x9879;&#x7684;&#x4F4D;&#x79FB;&#xFF0C;&#x8FD9;&#x5728;&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#x4EE5;&#x540E;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x6539;&#x53D8;&#x4E86;&#x3002;&#x7136;&#x540E;&#x5C06;.got&#x5206;&#x914D;&#x5728;.data section&#xFF0C;&#x88C5;&#x8F7D;&#x65F6;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x590D;&#x5236;&#x4E00;&#x4EFD;&#x5E76;&#x4FEE;&#x6B63;&#x3002;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5728;&#x88C5;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6839;&#x636E;&#x7B26;&#x53F7;&#x8868;&#x4FEE;&#x6B63;.got&#x8868;&#x9879;&#x3002;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3001;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3001;&#x5F15;&#x7528;&#x6587;&#x4EF6;&#x5916;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x90FD;&#x8981;&#x7ECF;&#x8FC7;.got&#x3002;</p><p>&#x8FD9;&#x6837;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x867D;&#x7136;&#x5728;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x4E2D;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x6620;&#x5C04;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x4F46;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E0A;&#x5171;&#x4EAB;&#x3002;.got&#x5728;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x4E2D;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x548C;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x90FD;&#x4E0D;&#x5171;&#x4EAB;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><pre><code class="lang-c">    virtual address             -&gt;             physical address  &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |processA            |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |.....               |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |dynamic libiraries  |----------                 |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         | |.....               |         |           |.....               | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |           |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |.got                |---------|----------&gt;|.got                | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |           |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |.....               |         |           |.....               |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |           |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|                                -----------&gt;|dynamic libiraries  |                   &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;          |           |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |processB            |         |           |.....               | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |           |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |.....               |         |    ------&gt;|.got                | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |    |      |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |dynamic libiraries  |----------    |      |.....               | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|              | |.....               |              | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|              | |.got                |---------------   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|        |.....               |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|</code></pre><p><strong>&#x57FA;&#x5740;&#x91CD;&#x7F6E;(Rebasing)&#xFF1A;</strong>&#x5927;&#x4F53;&#x601D;&#x8DEF;&#x662F;&#x5C06;&#x6240;&#x6709;&#x5BF9;&#x5730;&#x5740;&#x7684;&#x5F15;&#x7528;&#x751F;&#x6210;.rel&#xFF0C;&#x7B49;&#x5F85;&#x52A8;&#x6001;&#x5E93;&#x88C5;&#x8F7D;&#x540E;&#xFF0C;&#x91CD;&#x5B9A;&#x4F4D;&#x9636;&#x6BB5;&#x5BF9;&#x6240;&#x6709;.rel&#x4E2D;&#x7684;&#x8868;&#x9879;&#x8FDB;&#x884C;&#x539F;&#x5730;&#x5740;&#x548C;&#x57FA;&#x5730;&#x5740;&#x7684;&#x52A0;&#x64CD;&#x4F5C;&#xFF0C;&#x518D;&#x5C06;&#x7ED3;&#x679C;&#x7F6E;&#x6362;&#x6389;&#x539F;&#x5730;&#x5740;&#x5F15;&#x7528;&#x3002;&#x800C;&#x8FD9;&#x79CD;&#x601D;&#x8DEF;&#x5C31;&#x65E0;&#x6CD5;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x4E3B;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#x52A8;&#x6001;&#x5E93;&#x4EE3;&#x7801;&#xFF0C;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x8981;&#x590D;&#x5236;&#x81EA;&#x5DF1;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x526F;&#x672C;&#x3002;</p><p>&#x8FD9;&#x4E24;&#x79CD;&#x601D;&#x8DEF;&#x76F8;&#x6BD4;&#x800C;&#x8A00;&#xFF0C;<strong>&#x5730;&#x5740;&#x65E0;&#x5173;&#x4EE3;&#x7801;(PIC)</strong>&#x4FDD;&#x6301;&#x5171;&#x4EAB;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x8282;&#x7701;&#x4E86;&#x5185;&#x5B58;&#xFF0C;&#x800C;<strong>&#x57FA;&#x5740;&#x91CD;&#x7F6E;(Rebasing)</strong>&#x4ECD;&#x7136;&#x662F;&#x76F4;&#x63A5;&#x5F15;&#x7528;&#xFF0C;&#x8282;&#x7701;&#x4E86;&#x65F6;&#x95F4;&#x3002;</p><h3 id="&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;-PLT"><a href="#&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;-PLT" class="headerlink" title="&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;(PLT)"></a>&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;(PLT)</h3><p>&#x7531;&#x4E8E;&#x8981;&#x5728;&#x88C5;&#x8F7D;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x88C5;&#x8F7D;&#x52A8;&#x6001;&#x5E93;&#x4F1A;&#x5E26;&#x6765;&#x6027;&#x80FD;&#x6D88;&#x8017;&#xFF0C;&#x9488;&#x5BF9;&#x8FD9;&#x70B9;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#xFF0C;&#x76F4;&#x63A5;&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;&#xFF0C;&#x7B49;&#x5230;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x7B26;&#x53F7;&#x8FD0;&#x884C;&#x65F6;&#x88AB;&#x7528;&#x5230;&#x518D;&#x8FDB;&#x884C;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x8C03;&#x7528;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x7B26;&#x53F7;&#x6BD4;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x7B26;&#x53F7;&#x6162;5%&#x5DE6;&#x53F3;&#x3002;</p><h2 id="&#x7B26;&#x53F7;"><a href="#&#x7B26;&#x53F7;" class="headerlink" title="&#x7B26;&#x53F7;"></a>&#x7B26;&#x53F7;</h2><h3 id="&#x7B26;&#x53F7;&#x7C7B;&#x578B;"><a href="#&#x7B26;&#x53F7;&#x7C7B;&#x578B;" class="headerlink" title="&#x7B26;&#x53F7;&#x7C7B;&#x578B;"></a>&#x7B26;&#x53F7;&#x7C7B;&#x578B;</h3><p>&#x7B26;&#x53F7;&#x7C7B;&#x578B;&#x6709;&#x4E09;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;&#x4ECE;&#x53EF;&#x7528;&#x8303;&#x56F4;&#xFF1A;</p><ul><li>&#x5BFC;&#x51FA;(export)&#xFF1A;&#x5728;&#x672C;&#x6A21;&#x5757;&#x5B9A;&#x4E49;&#xFF0C;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x5F15;&#x7528;&#x3002;</li><li>&#x5BFC;&#x5165;(import)&#xFF1A;&#x5728;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x5B9A;&#x4E49;&#xFF0C;&#x672C;&#x6A21;&#x5757;&#x5F15;&#x7528;&#x3002;</li><li>&#x79C1;&#x6709;(private)&#xFF1A;&#x5728;&#x672C;&#x6A21;&#x5757;&#x5B9A;&#x4E49;&#xFF0C;&#x53EA;&#x80FD;&#x7531;&#x672C;&#x6A21;&#x5757;&#x5F15;&#x7528;&#x3002;</li></ul><p>&#x51B2;&#x7A81;&#xFF1A;</p><ul><li>&#x5F3A;(strong)&#xFF1A;&#x5F3A;&#x7B26;&#x53F7;&#x6709;&#x552F;&#x4E00;&#x6027;&#xFF0C;&#x591A;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x5F3A;&#x7B26;&#x53F7;&#x4E0D;&#x53EF;&#x4EE5;&#x5171;&#x5B58;&#x3002;</li><li>&#x5F31;(weak)&#xFF1A;&#x5F31;&#x7B26;&#x53F7;&#x6CA1;&#x6709;&#x552F;&#x4E00;&#x6027;&#xFF0C;&#x4E00;&#x4E2A;&#x5F3A;&#x7B26;&#x53F7;&#x53EF;&#x4EE5;&#x548C;&#x591A;&#x4E2A;&#x5F31;&#x7B26;&#x53F7;&#x5171;&#x5B58;&#xFF0C;&#x591A;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x5F31;&#x7B26;&#x53F7;&#x53EF;&#x4EE5;&#x5171;&#x5B58;&#x3002;</li></ul><p>&#x5F15;&#x7528;&#xFF1A;</p><ul><li>&#x5F3A;&#x5F15;&#x7528;(strong reference)&#xFF1A;&#x5F3A;&#x5F15;&#x7528;&#x5FC5;&#x987B;&#x88AB;&#x51B3;&#x8BAE;&#x51FA;&#x6765;&#x3002;</li><li>&#x5F31;&#x5F15;&#x7528;(weak reference)&#xFF1A;&#x5F31;&#x5F15;&#x7528;&#x4E0D;&#x7528;&#x5FC5;&#x987B;&#x88AB;&#x51B3;&#x8BAE;&#x51FA;&#x6765;&#x3002;</li></ul><h3 id="&#x51FD;&#x6570;&#x7B7E;&#x540D;-Function-Signature-&#x4E0E;&#x7B26;&#x53F7;&#x4FEE;&#x9970;-Symbol-Decoration"><a href="#&#x51FD;&#x6570;&#x7B7E;&#x540D;-Function-Signature-&#x4E0E;&#x7B26;&#x53F7;&#x4FEE;&#x9970;-Symbol-Decoration" class="headerlink" title="&#x51FD;&#x6570;&#x7B7E;&#x540D;(Function-Signature)&#x4E0E;&#x7B26;&#x53F7;&#x4FEE;&#x9970;(Symbol-Decoration)"></a>&#x51FD;&#x6570;&#x7B7E;&#x540D;(Function-Signature)&#x4E0E;&#x7B26;&#x53F7;&#x4FEE;&#x9970;(Symbol-Decoration)</h3><p>&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x540D;&#x5B57;&#x3001;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x6240;&#x5728;&#x7C7B;&#x540D;&#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x3001;&#x4E0D;&#x540C;&#x7F16;&#x8BD1;&#x5668;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x751F;&#x6210;&#x7684;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6BD4;&#x5982;OC&#x4E2D;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x8FD8;&#x8981;&#x52A0;&#x4E0A;&#x8FD4;&#x56DE;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#xFF0C;C++&#x4E2D;&#x8FD8;&#x8981;&#x52A0;&#x4E0A;NameSpace&#x3002;</p><p>&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x7B26;&#x53F7;&#x4E0D;&#x5149;&#x662F;&#x51FD;&#x6570;&#x540D;&#xFF0C;&#x662F;&#x5BF9;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x5904;&#x7406;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x7B26;&#x53F7;&#x4E5F;&#x662F;&#x7ECF;&#x8FC7;&#x7C7B;&#x4F3C;&#x7528;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x5904;&#x7406;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x4E00;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x7B26;&#x53F7;&#x4FEE;&#x9970;&#x3002;</p><h2 id="&#x76EE;&#x6807;&#x6587;&#x4EF6;"><a href="#&#x76EE;&#x6807;&#x6587;&#x4EF6;" class="headerlink" title="&#x76EE;&#x6807;&#x6587;&#x4EF6;"></a>&#x76EE;&#x6807;&#x6587;&#x4EF6;</h2><p>&#x4E86;&#x89E3;&#x4E86;&#x94FE;&#x63A5;&#x3001;&#x91CD;&#x5B9A;&#x4F4D;&#x539F;&#x7406;&#x548C;&#x601D;&#x8DEF;&#x540E;&#xFF0C;&#x8FD1;&#x8DDD;&#x79BB;&#x89C2;&#x5BDF;&#x4E00;&#x4E0B;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4EE5;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#x3002;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x5728;&#xFF0C;Windows&#x5E73;&#x53F0;&#x4E0B;&#x4E3A;PE(Portable Executable)&#xFF0C;Linux&#x5E73;&#x53F0;&#x4E0B;&#x4E3A;ELF(Executable Linkable Format)&#xFF0C;Mac&#x5E73;&#x53F0;&#x4E0B;&#x4E3A;Mach-O&#x3002;&#x867D;&#x7136;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4EEC;&#x5B9E;&#x9645;&#x4E0A;&#x90FD;&#x5927;&#x540C;&#x5C0F;&#x5F02;&#x3002;&#x5148;&#x6765;&#x4EE5;ELF&#x4E3A;&#x4F8B;&#x5B50;&#xFF0C;&#x8BE6;&#x89C1;<a href="https://paper.seebug.org/papers/Archive/refs/elf/Understanding_ELF.pdf" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a>&#x3002;</p><h3 id="ELF"><a href="#ELF" class="headerlink" title="ELF"></a>ELF</h3><p>&#x9996;&#x5148;&#xFF0C;&#x6587;&#x4EF6;&#x5206;segment(&#x6BB5;)&#xFF0C;&#x800C;&#x4E0D;&#x540C;segment&#x4E3B;&#x8981;&#x533A;&#x5206;&#x6620;&#x5C04;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x3002;&#x6BCF;&#x4E2A;segment&#x53C8;&#x5305;&#x542B;&#x591A;&#x4E2A;section&#xFF0C;section&#x662F;&#x5305;&#x542B;&#x5177;&#x4F53;&#x6570;&#x636E;&#x7684;&#x90E8;&#x5206;&#x3002;&#x6587;&#x4EF6;&#x8FD8;&#x5305;&#x542B;&#x4E00;&#x4E2A;header&#x653E;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x4E2A;program header table(&#x7A0B;&#x5E8F;&#x5934;)&#x653E;&#x7F6E;segment&#x63A7;&#x5236;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x4E2A;section header table&#x653E;&#x7F6E;section&#x63A7;&#x5236;&#x4FE1;&#x606F;&#x3002;program header table&#x548C;section header table&#x90FD;&#x662F;&#x6570;&#x7EC4;&#xFF0C;program header table&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x9879;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;segment&#xFF0C;section header table&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x9879;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;section&#x3002;ELF&#x7684;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x662F;&#x4ECE;&#x6620;&#x5C04;&#x7A7A;&#x95F4;-&gt;&#x5B9E;&#x4F53;&#x7684;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#x7EA7;&#x7ED3;&#x6784;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x662F;&#x4E00;&#x4E2A;ELF&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF1A;</p><pre><code class="lang-c">                                       |.text         |                                       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;                                       |.rodata       |  &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;                 |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |header              |                |.hash         | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|        ------&gt; |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |program header table|       |        |.dynsym       | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|       |        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |section header table|       |        |.strtab       | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|       |        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |__TEXT              |  ------        |.plt          |                    |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |__DATA              |  ------        |.data         | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|          |        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |other segment...    |        ------&gt; |.got          | &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;                |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;                                       |.bss          |</code></pre><p>&#x6CE8;&#x610F;&#x4E00;&#x70B9;&#xFF0C;&#x8FD9;&#x4E2A;&#x987A;&#x5E8F;&#x662F;&#x903B;&#x8F91;&#x4E0A;&#x7684;&#xFF0C;&#x771F;&#x6B63;&#x7269;&#x7406;&#x5B58;&#x50A8;&#x4E0A;&#x7684;&#x987A;&#x5E8F;&#x4E0D;&#x4E00;&#x5B9A;&#x7684;&#x3002;</p><p>.text&#x653E;&#x7F6E;&#x4EE3;&#x7801;&#xFF0C;.data&#x653E;&#x7F6E;&#x5DF2;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF0C;.bss&#x653E;&#x7F6E;&#x672A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x548C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002;</p><p>header&#x6709;&#x5F88;&#x591A;&#x6587;&#x4EF6;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x4E0D;&#x4E00;&#x4E00;&#x8868;&#x8FF0;&#x4E86;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x5C31;&#x662F;&#x8BB0;&#x5F55;&#x4E86;section header table&#x7684;&#x8D77;&#x59CB;&#x5730;&#x5740;&#x3002;&#x800C;section header table&#x8BB0;&#x5F55;&#x4E86;&#x6240;&#x6709;section&#x7684;&#x540D;&#x5B57;&#x3001;&#x7C7B;&#x578B;&#x3001;&#x957F;&#x5EA6;&#x3001;&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x504F;&#x79FB;&#x91CF;(offset)&#x7B49;&#x3002;&#x5982;&#x679C;&#x60F3;&#x8981;&#x5BFB;&#x5740;&#x5230;&#x4EFB;&#x610F;section&#x90FD;&#x8981;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;header table&#x3002;section header table&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x7531;struct&#x6784;&#x6210;&#x7684;&#x6570;&#x7EC4;&#x3002;</p><p>.strtab&#x653E;&#x7F6E;section&#x540D;&#x3001;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x5305;&#x62EC;&#x7B26;&#x53F7;&#x540D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x7531;&#x4E8E;&#x5728;&#x6574;&#x4E2A;&#x7ED3;&#x6784;&#x4E2D;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x662F;&#x4E0D;&#x5B9A;&#x7684;&#xFF0C;&#x4E00;&#x822C;&#x5C06;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x7EDF;&#x4E00;&#x653E;&#x7F6E;&#x5728;&#x4E00;&#x4E2A;table&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5B58;&#x50A8;table&#x4E2D;&#x7684;offset&#xFF0C;&#x6700;&#x540E;&#x5BFB;&#x5740;&#x5230;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5728;&#x4E0B;&#x8868;&#x4E2D;&#xFF0C;&#x6211;&#x60F3;&#x627E;&#x5230;girlfriend&#x4E00;&#x8BCD;&#xFF0C;&#x6211;&#x53EA;&#x8981;&#x62FF;&#x5230;.strtab&#x7684;base&#x5730;&#x5740;&#xFF0C;&#x52A0;&#x4E0A;girlfriend&#x7684;offset 9&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002;</p><pre><code class="lang-c">0  1  2  3  4  5  6  7  8 i \0  w  a  n  t \0  a \0g  i  r  l  f  r  i  e  nd</code></pre><p>.symtab&#x5C31;&#x662F;&#x7B26;&#x53F7;&#x8868;&#x3002;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7B26;&#x53F7;&#x8868;&#xFF0C;&#x7B26;&#x53F7;&#x8868;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x7531;struct&#x6784;&#x6210;&#x7684;&#x6570;&#x7EC4;&#x3002;ELF&#x7684;32&#x4F4D;&#x7B26;&#x53F7;sturct&#xFF1A;</p><pre><code class="lang-c">typedef struct {  int32_t st_name;  uint32_t st_value;  int32_t st_size;  unsigned char st_info;  unsigned char st_other;  uint16_t st_shndx;} ELF32_Sym;</code></pre><p>st_name&#x5B57;&#x6BB5;&#x6307;&#x660E;&#x7B26;&#x53F7;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x8868;&#x793A;&#x4E3A;&#x5728;.strtab&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;offset&#x3002;</p><p>st_value&#x5B57;&#x6BB5;&#x6307;&#x660E;&#x7B26;&#x53F7;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;offset&#x3002;</p><p>st_info&#x5B57;&#x6BB5;&#x6307;&#x660E;&#x7B26;&#x53F7;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x662F;&#x4E2A;&#x6DF7;&#x5408;&#x5B57;&#x6BB5;&#xFF0C;&#x6307;&#x660E;&#x6BD4;&#x5982;&#xFF0C;&#x5C40;&#x90E8;&#x7B26;&#x53F7;(STB_LOCAL)&#x3001;&#x5168;&#x5C40;&#x7B26;&#x53F7;(STB_GLOBAL)&#x3001;&#x5F31;&#x7B26;&#x53F7;(STB_WEAK)&#x3002;</p><p>st_shndx&#x5B57;&#x6BB5;&#x6307;&#x660E;&#x7B26;&#x53F7;&#x7684;&#x6240;&#x5C5E;&#x7684;section&#x3002;</p><h3 id="Mach-O"><a href="#Mach-O" class="headerlink" title="Mach-O"></a>Mach-O</h3><p>Mach-O&#x4E0E;ELF&#x7C7B;&#x4F3C;&#xFF0C;&#x6709;&#x4E00;&#x70B9;&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#x7684;&#x662F;&#xFF0C;Mach-O&#x6700;&#x5916;&#x5C42;&#x7ED3;&#x6784;&#x662F;load commands&#xFF0C;&#x5373;&#x88C5;&#x8F7D;&#x64CD;&#x4F5C;&#x3002;load commands&#x5176;&#x5305;&#x542B;&#x7684;cmd&#x4EE3;&#x8868;load command type&#xFF0C;&#x6307;&#x793A;&#x4E86;&#x88C5;&#x8F7D;&#x64CD;&#x4F5C;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x800C;&#x5728;&#x6BCF;&#x4E2A;&#x88C5;&#x8F7D;&#x64CD;&#x4F5C;&#x4E0B;&#x518D;&#x533A;&#x5206;segment&#x548C;section&#x3002;Mach-O&#x7684;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x662F;&#x4ECE;&#x88C5;&#x8F7D;&#x64CD;&#x4F5C;-&gt;&#x6620;&#x5C04;&#x7A7A;&#x95F4;-&gt;&#x5B9E;&#x4F53;&#x7684;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#x7EA7;&#x7ED3;&#x6784;&#x3002;</p><p>&#x4E0B;&#x9762;&#x662F;32&#x4F4D;&#x4E0B;.symtab&#x7684;struct&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x548C;ELF&#x51E0;&#x4E4E;&#x4E00;&#x81F4;&#xFF1A;</p><pre><code class="lang-c">struct nlist {    union {        char *n_name;    /* for use when in-core */        uint32_t n_strx;    /* index into the string table */    } n_un;    uint8_t n_type;        /* type flag, see below */    uint8_t n_sect;        /* section number or NO_SECT */    int16_t n_desc;        /* see &lt;mach-o/stab.h&gt; */    uint32_t n_value;    /* value of this symbol (or stab offset) */};</code></pre><p>Mach-O&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">  &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |header              |              |.text                  | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|       -----&gt; |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |load commands       |      |       |.const                 | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|      |       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|       |.data         | |__TEXT              |  ----                                        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|                                              |.bss          | |__DATA              |  ------------------------------------------&gt; |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|                                              |.nl_symbol_ptr| |__LINKEDIT          |  ----                                        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;  &#x2014;&#x2014;| |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |       |.strtab                |       |.la_symbol_ptr| |other segments...   |      |       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|         |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;| &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;       -----&gt; |.symtab                |       |.got          |                                     |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|                                            |.indirect_symbol_table |</code></pre><p>&#x5176;&#x4E2D;&#xFF0C;&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#x7684;&#x662F;non lazy symbol pointer&#x548C;lazy symbol pointer&#x3002;__DATA&#x4E2D;&#x5F15;&#x7528;&#x7B26;&#x53F7;&#xFF0C;&#x4EE5;&#x76F4;&#x63A5;&#x6307;&#x5411;&#x7B26;&#x53F7;&#x5B9E;&#x9645;&#x5730;&#x5740;(&#x800C;&#x4E0D;&#x662F;&#x7B26;&#x53F7;&#x8868;&#x5730;&#x5740;)&#x7684;&#x6307;&#x9488;&#x5F62;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x6709;non lazy symbol pointer&#x548C;lazy symbol pointer&#x4E24;&#x79CD;&#xFF0C;&#x533A;&#x522B;&#x5C31;&#x662F;&#x662F;&#x5426;&#x662F;&#x4F7F;&#x7528;&#x4E86;plt(&#x5EF6;&#x8FDF;&#x7ED1;&#x5B9A;)&#x6280;&#x672F;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x7B26;&#x53F7;&#x5982;&#x679C;&#x60F3;&#x8981;&#x83B7;&#x5F97;&#x66F4;&#x591A;&#x7B26;&#x53F7;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x8981;&#x901A;&#x8FC7;&#x95F4;&#x63A5;&#x8DF3;&#x8F6C;&#x8868;&#xFF0C;&#x6240;&#x4EE5;&#x5F97;&#x540D;indirection symbol pointer&#x3002;nl_symbol_ptr&#x4E3A;non lazy symbol pointer&#xFF0C;la_symbol_ptr&#x4E3A;lazy symbol pointer&#x3002;</p><p>&#x66F4;&#x52A0;&#x8BE6;&#x7EC6;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x63A8;&#x8350;&#x8FD9;&#x7BC7;<a href="http://turingh.github.io/2016/03/07/mach-o%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#x3002;</p><h2 id="&#x94FE;&#x63A5;&#x5668;&#x81EA;&#x4E3E;"><a href="#&#x94FE;&#x63A5;&#x5668;&#x81EA;&#x4E3E;" class="headerlink" title="&#x94FE;&#x63A5;&#x5668;&#x81EA;&#x4E3E;"></a>&#x94FE;&#x63A5;&#x5668;&#x81EA;&#x4E3E;</h2><p>&#x94FE;&#x63A5;&#x5668;&#x4F5C;&#x4E3A;&#x94FE;&#x63A5;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x81EA;&#x7136;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;&#x94FE;&#x63A5;&#x7A0B;&#x5E8F;&#x6709;&#x8FD9;&#x51E0;&#x6761;&#x82DB;&#x523B;&#x7684;&#x9650;&#x5236;&#xFF1A;</p><ul><li>&#x4E0D;&#x4F9D;&#x8D56;&#x5176;&#x4ED6;&#x5E93;&#x3002;</li><li>&#x5728;&#x6CA1;&#x6709;&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;&#x524D;&#xFF0C;&#x4E0D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3001;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF0C;&#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x6D89;&#x53CA;&#x5230;&#x5730;&#x5740;&#x5F15;&#x7528;&#x7684;&#x53D8;&#x91CF;&#x3001;&#x51FD;&#x6570;&#x3002;</li></ul><p>&#x5728;&#x94FE;&#x63A5;&#x5668;&#x53D1;&#x6325;&#x4F5C;&#x7528;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x201D;&#x81EA;&#x6211;&#x94FE;&#x63A5;&#x201C;&#xFF0C;&#x6838;&#x5FC3;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x5730;&#x5740;&#x91CD;&#x5B9A;&#x4F4D;&#xFF0C;&#x8FD9;&#x6BB5;&#x201D;&#x81EA;&#x6211;&#x94FE;&#x63A5;&#x201C;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x88AB;&#x53EB;&#x505A;&#x81EA;&#x4E3E;&#x3002;</p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x81EA;&#x6211;&#x4FEE;&#x517B;&#x2014;&#x94FE;&#x63A5;&#x3001;&#x88C5;&#x8F7D;&#x4E0E;&#x5E93;</p>]]></content>
      
      <categories>
          
          <category> 链接与装载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链接与装载 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机体系-垃圾收集器</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x7AE0;&#x7684;&#x4E3B;&#x89D2;&#x662F;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;&#xFF0C;&#x6587;&#x7AE0;&#x7B80;&#x6D01;&#x3001;&#x660E;&#x786E;&#x7684;&#x6307;&#x51FA;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x548C;&#x8DDF;&#x8E2A;&#x5F0F;&#x7684;&#x5F02;&#x540C;&#xFF0C;&#x5E76;&#x4EE5;&#x548C;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;&#x8D70;&#x7EA2;&#x7684;jvm&#x9610;&#x8FF0;&#x3002;</p><a id="more"></a><p>&#x5728;&#x4E0A;&#x7BC7;&#x4E2D;&#x5DF2;&#x7ECF;&#x804A;&#x8FC7;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x4E86;&#xFF0C;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x5DF2;&#x7ECF;&#x5F88;&#x597D;&#x7684;&#x7BA1;&#x7406;&#x8D77;&#x4E86;&#x5806;&#x4E0A;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x662F;&#x8981;&#x5BF9;&#x5806;&#x4E0A;&#x5185;&#x5BB9;&#x4EBA;&#x4E3A;&#x7684;&#x8FDB;&#x884C;&#x63A7;&#x5236;&#x3002;&#x8FD9;&#x6837;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x5373;&#x4E0D;&#x9AD8;&#x6548;&#x3001;&#x53C8;&#x5BB9;&#x6613;&#x51FA;&#x9519;&#xFF0C;&#x4F18;&#x5316;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x800C;&#x8FD9;&#x79CD;&#x4F18;&#x5316;&#x5C31;&#x53EB;&#x505A;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;(Garbage Collector)&#xFF0C;&#x4E3B;&#x65E8;&#x5C31;&#x662F;&#x5C06;&#x7A0B;&#x5E8F;&#x5458;&#x4ECE;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x52B3;&#x52A8;&#x4E2D;&#x89E3;&#x653E;&#x51FA;&#x6765;&#x3002;</p><p>GC&#x6709;&#x4E24;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#xFF1A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3001;&#x8DDF;&#x8E2A;&#x5F0F;&#x3002;&#x800C;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x6307;&#x7684;&#x662F;&#x5982;&#x4F55;&#x8BC6;&#x522B;&#x662F;&#x5426;&#x5BF9;&#x8C61;&#x8BE5;&#x88AB;&#x56DE;&#x6536;&#x3002;&#x800C;&#x8DDF;&#x8E2A;&#x5F0F;&#x53C8;&#x6709;&#x591A;&#x79CD;&#x7B97;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x4E0B;&#x6587;&#x5C31;&#x9010;&#x4E2A;&#x804A;&#x804A;&#x8FD9;&#x4E9B;&#x5185;&#x5BB9;&#x3002;</p><h2 id="&#x5F15;&#x7528;&#x8BA1;&#x6570;-Reference-Counting-Collector"><a href="#&#x5F15;&#x7528;&#x8BA1;&#x6570;-Reference-Counting-Collector" class="headerlink" title="&#x5F15;&#x7528;&#x8BA1;&#x6570;(Reference-Counting-Collector)"></a>&#x5F15;&#x7528;&#x8BA1;&#x6570;(Reference-Counting-Collector)</h2><p>&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x8981;&#x7BA1;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x8BA1;&#x6570;&#xFF0C;&#x5F53;&#x88AB;&#x5F15;&#x7528;&#xFF0C;&#x8BA1;&#x6570;&#x5C31;&#x52A0;&#x4E00;&#xFF0C;&#x5F53;&#x4E0D;&#x88AB;&#x5F15;&#x7528;&#xFF0C;&#x8BA1;&#x6570;&#x5C31;&#x51CF;&#x4E00;&#x3002;&#x5982;&#x679C;&#x8BA1;&#x6570;&#x4E3A;&#x96F6;&#xFF0C;&#x5219;&#x53EF;&#x56DE;&#x6536;&#x3002;&#x8BB0;&#x5F55;&#x6240;&#x6709;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x8BA1;&#x6570;&#x81EA;&#x7136;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5E38;&#x6570;&#x7EA7;&#x5BFB;&#x5740;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x54C8;&#x5E0C;&#x8868;&#xFF0C;&#x4EE5;&#x88AB;&#x7BA1;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x5730;&#x5740;&#x4E3A;&#x952E;&#xFF0C;&#x5176;&#x8BA1;&#x6570;&#x4E3A;&#x503C;&#x3002;</p><p>&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x6709;&#x5F88;&#x591A;&#x79CD;&#x4F18;&#x5316;&#x65B9;&#x5F0F;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x9632;&#x6B62;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9891;&#x7E41;&#x88AB;&#x66F4;&#x6539;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x88AB;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x5982;&#x679C;&#x5728;&#x88AB;&#x5F15;&#x7528;&#x540E;&#xFF0C;&#x9A6C;&#x4E0A;&#x4E0D;&#x88AB;&#x5F15;&#x7528;&#xFF0C;&#x8FD9;&#x4E00;&#x5BF9;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x589E;&#x51CF;&#x64CD;&#x4F5C;&#x5C31;&#x53EF;&#x4EE5;&#x6210;&#x5BF9;&#x7701;&#x53BB;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x4E86;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x4E00;&#x5927;&#x7F3A;&#x70B9;&#xFF0C;&#x9700;&#x8981;&#x9891;&#x7E41;&#x66F4;&#x65B0;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3002;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x8FD8;&#x6709;&#x4E00;&#x5927;&#x7F3A;&#x70B9;&#xFF0C;&#x5C31;&#x662F;&#x5F15;&#x7528;&#x5F62;&#x6210;&#x73AF;&#x8DEF;&#x9020;&#x6210;&#x7684;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#xFF0C;&#x4E00;&#x822C;&#x901A;&#x8FC7;&#x4ECB;&#x5165;&#x5F31;&#x5F15;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x6B64;&#x95EE;&#x9898;&#x3002;</p><p>&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x624B;&#x52A8;&#x63A7;&#x5236;(MRC)&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x7BA1;&#x7406;(ARC)&#x3002;</p><p>&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x7BA1;&#x7406;&#x5185;&#x5B58;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x6587;&#x4EF6;&#x8D44;&#x6E90;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x65B9;&#x5F0F;&#x7BA1;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;(fd)&#x3002;</p><h2 id="&#x8DDF;&#x8E2A;&#x5F0F;-Trace-Collector"><a href="#&#x8DDF;&#x8E2A;&#x5F0F;-Trace-Collector" class="headerlink" title="&#x8DDF;&#x8E2A;&#x5F0F;(Trace-Collector)"></a>&#x8DDF;&#x8E2A;&#x5F0F;(Trace-Collector)</h2><p>&#x8DDF;&#x8E2A;&#x5F0F;&#x5C31;&#x662F;&#x5C06;&#x6240;&#x6709;&#x88AB;&#x7BA1;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#x4EE5;&#x5F15;&#x7528;&#x5173;&#x7CFB;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x5F20;&#x6709;&#x5411;&#x56FE;&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x5FC5;&#x5B9A;&#x4E0D;&#x9700;&#x56DE;&#x6536;&#x7684;&#x8282;&#x70B9;&#x4F5C;&#x4E3A;&#x6839;&#x8282;&#x70B9;(root)&#x51FA;&#x53D1;&#xFF0C;trace&#x5176;&#x5F15;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x904D;&#x5386;&#x6240;&#x6709;&#x53EF;&#x8FBE;&#x8282;&#x70B9;&#x3002;&#x53EA;&#x8981;&#x8282;&#x70B9;&#x53EF;&#x8FBE;&#x5C31;&#x4E0D;&#x9700;&#x56DE;&#x6536;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x53EF;&#x8FBE;&#x5C31;&#x8981;&#x56DE;&#x6536;&#x3002;</p><p>&#x8DDF;&#x8E2A;&#x5F0F;&#x4E3A;&#x81EA;&#x52A8;&#x7BA1;&#x7406;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x7B97;&#x6CD5;&#xFF1A;</p><ul><li>&#x6807;&#x8BB0;-&#x6E05;&#x9664;(Mark&amp;Sweep)</li></ul><p>&#x8FD9;&#x662F;&#x6700;&#x7ECF;&#x5178;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5C06;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x9636;&#x6BB5;(phase)&#xFF1A;&#x6807;&#x8BB0;&#x548C;&#x6E05;&#x9664;&#xFF0C;&#x9996;&#x5148;&#x5148;trace&#x51FA;&#x6240;&#x6709;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x6807;&#x8BB0;&#x5B83;&#x4EEC;&#x3002;&#x63A5;&#x7740;&#x5728;&#x6E05;&#x9664;&#x9636;&#x6BB5;&#xFF0C;&#x56DE;&#x6536;&#x6240;&#x6709;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x6709;&#x4E2A;&#x4E25;&#x91CD;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5916;&#x90E8;&#x788E;&#x7247;&#x3002;&#x800C;&#x8FD9;&#x5C31;&#x5F71;&#x54CD;&#x4E86;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x4E00;&#x5927;&#x6307;&#x6807;&#x4F7F;&#x7528;&#x7387;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x4E0B;&#x6587;&#x7684;&#x7B97;&#x6CD5;&#x5728;&#x5176;&#x57FA;&#x7840;&#x4E0A;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#x3002;</p><ul><li>&#x6807;&#x8BB0;-&#x538B;&#x7F29;(Mark&amp;Compact)</li></ul><p>&#x7C7B;&#x4F3C;&#x6807;&#x8BB0;-&#x6E05;&#x9664;&#x7B97;&#x6CD5;&#xFF0C;&#x6807;&#x8BB0;-&#x538B;&#x7F29;&#x540C;&#x6837;&#x9700;&#x8981;&#x6807;&#x8BB0;&#x51FA;&#x6240;&#x6709;&#x88AB;&#x5F15;&#x7528;&#x8282;&#x70B9;&#x3002;&#x4F46;&#x662F;&#x4E0B;&#x4E00;&#x6B65;&#x5E76;&#x4E0D;&#x662F;&#x5149;&#x7B80;&#x5355;&#x7684;&#x6E05;&#x9664;&#x672A;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x5C06;&#x88AB;&#x5F15;&#x7528;&#x7684;&#x8282;&#x70B9;&#x538B;&#x7F29;&#x5230;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x4E00;&#x7247;&#x8FDE;&#x7EED;&#x533A;&#x57DF;&#xFF0C;&#x6765;&#x4F18;&#x5316;&#x5916;&#x90E8;&#x788E;&#x7247;&#x95EE;&#x9898;&#x3002;</p><ul><li>&#x590D;&#x5236;(Copying)</li></ul><p>&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x5C06;&#x5185;&#x5B58;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7A7A;&#x95F4;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7A7A;&#x95F4;&#x3002;&#x5F53;&#x89E6;&#x53D1;&#x56DE;&#x6536;&#xFF0C;&#x5C06;&#x4F7F;&#x7528;&#x7A7A;&#x95F4;&#x4E2D;&#x6240;&#x6709;&#x4E0D;&#x9700;&#x56DE;&#x6536;&#x7684;&#x5BF9;&#x8C61;&#x590D;&#x5236;&#x5230;&#x53E6;&#x4E00;&#x672A;&#x4F7F;&#x7528;&#x7A7A;&#x95F4;&#xFF0C;&#x6E05;&#x9664;&#x524D;&#x4E00;&#x4F7F;&#x7528;&#x7A7A;&#x95F4;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x4EA4;&#x6362;&#x4E24;&#x7A7A;&#x95F4;&#x89D2;&#x8272;&#xFF0C;&#x4F7F;&#x7528;&#x540E;&#x4E00;&#x7A7A;&#x95F4;&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x5728;&#x4E0D;&#x9700;&#x56DE;&#x6536;&#x5BF9;&#x8C61;&#x8F83;&#x5C11;&#x65F6;&#x66F4;&#x9AD8;&#x6548;&#xFF0C;&#x5E76;&#x4E14;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x9AD8;&#x6548;&#x7684;&#x590D;&#x5236;&#x3002;&#x5E76;&#x4E14;&#x7531;&#x4E8E;&#x590D;&#x5236;&#x5230;&#x53E6;&#x4E00;&#x7A7A;&#x95F4;&#xFF0C;&#x53EF;&#x4EE5;&#x4F18;&#x5316;&#x6389;&#x5916;&#x90E8;&#x788E;&#x7247;&#x95EE;&#x9898;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x6C38;&#x8FDC;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x4E5F;&#x9020;&#x6210;&#x4E86;&#x4E25;&#x91CD;&#x7684;&#x8D44;&#x6E90;&#x4F7F;&#x7528;&#x9650;&#x5236;&#x3002;</p><ul><li>&#x589E;&#x91CF;(Incremental Collecting)</li></ul><p>&#x7531;&#x4E8E;&#x8DDF;&#x8E2A;&#x5F0F;&#x662F;&#x96C6;&#x4E2D;&#x5F0F;&#x7684;&#x89E6;&#x53D1;&#xFF0C;&#x8FD9;&#x79CD;&#x72EC;&#x5360;&#x5F0F;&#x5904;&#x7406;&#x8FEB;&#x4F7F;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x505C;&#x987F;&#xFF0C;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5176;&#x4ED6;&#x91CD;&#x8981;&#x4EFB;&#x52A1;&#x7684;&#x5B9E;&#x65F6;&#x6027;&#xFF0C;&#x8FD9;&#x79CD;&#x72EC;&#x5360;&#x5F0F;&#x89E6;&#x53D1;&#x5BFC;&#x81F4;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x505C;&#x987F;&#x53EB;&#x505A;stop the world&#x3002;&#x800C;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x5C06;&#x5185;&#x5B58;&#x5206;&#x4E3A;&#x82E5;&#x5E72;&#x4E2A;&#x7A7A;&#x95F4;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x591A;&#x7EBF;&#x7A0B;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x56DE;&#x6536;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x7A7A;&#x95F4;&#xFF0C;&#x56DE;&#x6536;&#x5B8C;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#x53BB;&#x5904;&#x7406;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#xFF0C;&#x4E0B;&#x6B21;&#x56DE;&#x6536;&#x5728;&#x672C;&#x6B21;&#x56DE;&#x6536;&#x57FA;&#x7840;&#x4E0A;&#x7EE7;&#x7EED;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4F7F;&#x8DDF;&#x8E2A;&#x5F0F;&#x6210;&#x4E3A;&#x5E76;&#x53D1;&#x5F0F;&#xFF0C;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x8DDF;&#x8E2A;&#x5F0F;&#x7684;&#x56DE;&#x6536;&#x548C;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x3002;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x7F3A;&#x70B9;&#x4E5F;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x7531;&#x4E8E;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#x7B49;&#x5F00;&#x9500;&#xFF0C;&#x4F1A;&#x52A0;&#x5927;&#x8DDF;&#x8E2A;&#x5F0F;&#x7684;&#x6574;&#x4F53;&#x5F00;&#x9500;&#x3002;</p><ul><li>&#x5206;&#x4EE3;(Generational Collecting)</li></ul><p>&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x6309;&#x88AB;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x957F;&#x77ED;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x7B97;&#x6CD5;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#x3002;&#x5982;&#x679C;&#x51E0;&#x6B21;GC&#x89E6;&#x53D1;&#x56DE;&#x6536;&#x4ECD;&#x90FD;&#x4E0D;&#x9700;&#x56DE;&#x6536;&#x7684;&#x5BF9;&#x8C61;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x5E38;&#x9A7B;&#x5185;&#x5B58;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x88AB;&#x79F0;&#x4F5C;&#x8001;&#x751F;&#x4EE3;&#x5BF9;&#x8C61;(old generation)&#xFF0C;&#x4F1A;&#x88AB;&#x653E;&#x5165;&#x8001;&#x751F;&#x4EE3;&#x533A;&#x57DF;&#xFF0C;&#x4F7F;&#x7528;mark&amp;compact&#x7B97;&#x6CD5;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#x3002;&#x800C;&#x521A;&#x88AB;&#x5206;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x88AB;&#x79F0;&#x4F5C;&#x5E74;&#x8F7B;&#x4EE3;&#x5BF9;&#x8C61;(young generation)&#xFF0C;&#x4F1A;&#x88AB;&#x653E;&#x5165;&#x5E74;&#x8F7B;&#x4EE3;&#x533A;&#x57DF;&#xFF0C;&#x4F7F;&#x7528;copy&#x7B97;&#x6CD5;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#x3002;</p><h2 id="JVM&#x4E2D;&#x7684;GC"><a href="#JVM&#x4E2D;&#x7684;GC" class="headerlink" title="JVM&#x4E2D;&#x7684;GC"></a>JVM&#x4E2D;&#x7684;GC</h2><p>&#x63D0;&#x8D77;GC&#xFF0C;&#x6211;&#x60F3;&#x7B2C;&#x4E8C;&#x4E2A;&#x5728;&#x8111;&#x4E2D;&#x7684;&#x8BCD;&#x6C47;&#x4E0D;&#x662F;java&#x5C31;&#x662F;jvm&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x804A;&#x804A;GC&#x5728;java&#x4E2D;&#x7684;&#x5386;&#x53F2;&#x548C;&#x8FD0;&#x7528;&#xFF0C;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x56DB;&#x79CD;GC&#x3002;&#x8FD9;&#x4E9B;&#x5B9E;&#x9645;&#x8FD0;&#x7528;&#x7684;GC&#x4F1A;&#x81EA;&#x7531;&#x642D;&#x914D;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684;&#x51E0;&#x79CD;&#x7B97;&#x6CD5;&#x3002;&#x9996;&#x5148;&#x662F;&#x5386;&#x53F2;&#x6700;&#x60A0;&#x4E45;&#x7684;Serial GC&#x3001;Parallel GC&#xFF0C;&#x968F;&#x540E;&#x662F;CMS&#xFF0C;&#x6700;&#x540E;&#x662F;&#x6700;&#x5E74;&#x8F7B;&#x7684;G1&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;generation&#x7B97;&#x6CD5;&#x63D0;&#x51FA;&#x7684;&#x6BD4;&#x8F83;&#x65E9;&#xFF0C;&#x6D89;&#x53CA;&#x63D0;&#x5230;&#x7684;&#x56DB;&#x79CD;GC&#x90FD;&#x662F;&#x5728;generation&#x7B97;&#x6CD5;&#x57FA;&#x7840;&#x4E0A;&#x8BBE;&#x8BA1;&#x7684;&#x3002;</p><h3 id="Serial-amp-Parallel"><a href="#Serial-amp-Parallel" class="headerlink" title="Serial &amp; Parallel"></a>Serial &amp; Parallel</h3><p>serial&#x548C;parallel&#x5BF9;old generation&#x56DE;&#x6536;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x5982;&#x4E0A;&#x6587;&#x6240;&#x8BF4;&#x7684;mark&amp;compact&#xFF0C;&#x8FD9;&#x5E76;&#x4E0D;&#x662F;serial&#x6216;parallel&#x7684;&#x91CD;&#x70B9;&#xFF0C;&#x5176;&#x771F;&#x6B63;&#x6709;&#x610F;&#x601D;&#x7684;&#x662F;young generation&#x4F7F;&#x7528;&#x7684;copy&#x7B97;&#x6CD5;&#xFF0C;&#x5176;copy&#x7B97;&#x6CD5;&#x5E76;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x5C06;&#x7A7A;&#x95F4;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x533A;&#x57DF;&#x3002;&#x800C;&#x662F;&#x5206;&#x4E3A;eden&#x3001;survivor&#x7A7A;&#x95F4;&#xFF0C;&#x800C;survivor&#x53C8;&#x5206;&#x4E3A;from&#x3001;to&#x4E24;&#x4E2A;&#x5B50;&#x7A7A;&#x95F4;&#x3002;&#x65B0;&#x5206;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#x4F1A;&#x88AB;&#x52A0;&#x5165;eden&#x7A7A;&#x95F4;&#xFF0C;eden&#x7A7A;&#x95F4;&#x6EE1;&#x540E;&#x89E6;&#x53D1;GC&#xFF0C;&#x4F1A;&#x5C06;eden&#x7A7A;&#x95F4;&#x4E2D;&#x5B58;&#x6D3B;&#x4E0B;&#x6765;&#x7684;&#x5BF9;&#x8C61;copy&#x5230;survivor&#x4E2D;&#x7684;from&#x6216;to&#x5B50;&#x7A7A;&#x95F4;&#x4E2D;&#x3002;&#x800C;from&#x6216;to&#x5B50;&#x7A7A;&#x95F4;&#x6EE1;&#x540E;&#x89E6;&#x53D1;GC&#xFF0C;&#x4F1A;&#x88AB;copy&#x5230;&#x53E6;&#x4E00;&#x5B50;&#x7A7A;&#x95F4;&#x4E2D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;from&#x548C;to&#x5B50;&#x7A7A;&#x95F4;&#x4F1A;&#x7B26;&#x5408;copy&#x7B97;&#x6CD5;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x7A7A;&#x95F4;&#x4E3A;&#x7A7A;&#x3002;&#x5F53;&#x5BF9;&#x8C61;&#x591A;&#x6B21;&#x89E6;&#x53D1;GC&#x90FD;&#x5B58;&#x6D3B;&#x4E0B;&#x6765;&#x5C31;&#x4F1A;&#x88AB;&#x653E;&#x5230;old generation&#x53BB;&#x3002;young generation&#x89E6;&#x53D1;&#x7684;GC&#x53EB;&#x505A;minor GC&#x3002;</p><p>&#x800C;serial&#x548C;parallel&#x5206;&#x522B;&#x5C31;&#x662F;&#x5355;&#x7EBF;&#x7A0B;&#x4E32;&#x884C;&#x548C;&#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x884C;&#x3002;&#x6574;&#x4F53;&#x7684;&#x7A7A;&#x95F4;&#x5E03;&#x5C40;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/hotspot_heap_structure.png" alt="hotspot_heap_structure"></p><p>&#x5176;&#x4E2D;&#x9664;&#x4E86;&#x63D0;&#x5230;&#x7684;young generation&#x4E2D;&#x7684;eden&#x3001;survivor&#xFF0C;&#x8FD8;&#x6709;old generation&#x548C;permanent generation&#x3002;permanent generation&#x5305;&#x542B;&#x7C7B;&#x548C;&#x5BF9;&#x8C61;&#x7684;&#x5143;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x4F1A;&#x88AB;&#x56DE;&#x6536;&#xFF0C;&#x89E6;&#x53D1;&#x7684;GC&#x53EB;&#x505A;major GC&#x3002;</p><h3 id="CMS-Concurrent-Mark-Sweep"><a href="#CMS-Concurrent-Mark-Sweep" class="headerlink" title="CMS(Concurrent-Mark-Sweep)"></a>CMS(Concurrent-Mark-Sweep)</h3><p>CMS&#x4F7F;&#x7528;&#x7684;young generation&#x7B97;&#x6CD5;&#x7C7B;&#x4F3C;parallel GC&#xFF0C;&#x5176;&#x6709;&#x610F;&#x601D;&#x7684;&#x5730;&#x65B9;&#x662F;&#x5BF9;old generation&#x7684;&#x56DE;&#x6536;&#x3002;&#x5BF9;young generation&#x7684;&#x56DE;&#x6536;&#x5FC5;&#x987B;&#x662F;stop the world&#xFF0C;&#x800C;&#x5BF9;old generation&#x7684;&#x56DE;&#x6536;CMS&#x5C3D;&#x529B;&#x505A;&#x5230;&#x80FD;&#x591A;concurrent&#x5C31;&#x591A;concurrent&#x3002;CMS&#x5BF9;old generation&#x7684;&#x56DE;&#x6536;&#x5206;&#x4E3A;&#x4E0B;&#x9762;&#x51E0;&#x4E2A;&#x9636;&#x6BB5;&#xFF1A;</p><ul><li>initial mark&#xFF1A;&#x5BF9;root&#x8282;&#x70B9;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x9636;&#x6BB5;&#x4F1A;stop the world&#x3002;</li><li>concurrent mark&#xFF1A;&#x5BF9;&#x6240;&#x6709;&#x5B58;&#x6D3B;&#x8282;&#x70B9;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x9636;&#x6BB5;&#x4E0D;&#x4F1A;stop  the world&#x3002;</li><li>remark&#xFF1A;&#x4F1A;&#x68C0;&#x67E5;&#x65B0;&#x589E;&#x52A0;&#x3001;&#x65B0;&#x5220;&#x9664;&#x7684;&#x5BF9;&#x8C61;&#x5E76;&#x5BF9;&#x5B83;&#x4EEC;&#x91CD;&#x65B0;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;stop the world&#x3002;</li><li>concurrent sweep&#xFF1A;&#x56DE;&#x6536;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4E0D;&#x4F1A;stop the world&#x3002;</li></ul><p>&#x6CE8;&#x610F;&#xFF0C;&#x6574;&#x4E2A;&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x4E0D;&#x4E00;&#x5B9A;&#x4F1A;&#x8FDB;&#x884C;compact&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x5916;&#x90E8;&#x788E;&#x7247;&#x8F83;&#x591A;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5728;concurrent sweep&#x540E;&#x8FDB;&#x884C;compact&#x3002;</p><h3 id="G1-Garbage-First"><a href="#G1-Garbage-First" class="headerlink" title="G1(Garbage-First)"></a>G1(Garbage-First)</h3><p>G1&#x662F;&#x4E2A;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;GC&#xFF0C;&#x8FD9;&#x91CC;&#x6765;&#x804A;&#x4E00;&#x4E0B;&#x6574;&#x4F53;&#x601D;&#x60F3;&#xFF0C;&#x5BF9;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x8FD8;&#x8BF7;&#x79FB;&#x6B65;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;</p><p>G1&#x7ED3;&#x5408;&#x4E86;&#x4E0A;&#x9762;&#x540E;&#x4E09;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;&#x9996;&#x5148;&#xFF0C;G1&#x4F7F;&#x7528;&#x4E86;incremental&#x7B97;&#x6CD5;&#xFF0C;&#x5C06;&#x7A7A;&#x95F4;&#x5212;&#x5206;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x5927;&#x5C0F;&#x76F8;&#x7B49;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;G1&#x7BA1;&#x8FD9;&#x4E9B;&#x7A7A;&#x95F4;&#x53EB;region&#x3002;&#x800C;&#x6BCF;&#x6B21;&#x56DE;&#x6536;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x5168;&#x91CF;&#x56DE;&#x6536;&#x6240;&#x6709;region&#xFF0C;&#x53EF;&#x4EE5;&#x53EA;&#x56DE;&#x6536;&#x90E8;&#x5206;region&#x3002;&#x6839;&#x636E;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x7684;stop the world&#x65F6;&#x95F4;&#x548C;&#x5DF2;&#x77E5;&#x7684;region&#x7A7A;&#x95F4;&#x5927;&#x5C0F;&#xFF0C;G1&#x53EF;&#x4EE5;&#x9884;&#x4F30;&#x51FA;&#x56DE;&#x6536;&#x591A;&#x5C11;region&#xFF0C;&#x6BCF;&#x6B21;stop the world G1&#x53EA;&#x56DE;&#x6536;&#x8FD9;&#x4E2A;&#x6570;&#x91CF;&#x7684;region&#xFF0C;&#x7136;&#x540E;&#x5207;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x3002;&#x8FD9;&#x6837;&#xFF0C;G1&#x6574;&#x4F53;&#x5C31;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x5E76;&#x53D1;&#x5F0F;&#x7684;GC&#x4E86;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x7528;&#x6237;&#x8BBE;&#x7F6E;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x7EDD;&#x5BF9;&#x65F6;&#x95F4;&#xFF0C;&#x53EA;&#x662F;&#x53C2;&#x8003;&#x65F6;&#x95F4;&#x3002;incremental&#x7B97;&#x6CD5;&#x7ED9;&#x4E86;G1&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x63A7;&#x5236;stop the world&#x65F6;&#x95F4;&#x7684;&#x80FD;&#x529B;&#x3002;</p><p>&#x800C;&#x7531;&#x4E8E;incremental&#x7B97;&#x6CD5;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x6BCF;&#x6B21;&#x89E6;&#x53D1;&#x4E0D;&#x4E00;&#x5B9A;&#x80FD;&#x5C06;&#x6240;&#x6709;&#x9700;&#x8981;&#x56DE;&#x6536;&#x7684;region&#x5168;&#x90E8;&#x56DE;&#x6536;&#x5B8C;&#xFF0C;&#x6240;&#x4EE5;&#x9020;&#x5C31;&#x4E86;collection context&#x8FD9;&#x4E00;&#x6982;&#x5FF5;&#xFF0C;&#x89E6;&#x53D1;collection&#x8981;&#x7EE7;&#x7EED;&#x4E0A;&#x6B21;&#x7684;collection context&#x7EE7;&#x7EED;&#x56DE;&#x6536;region&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x6B21;&#x6807;&#x8BB0;&#x5B8C;&#x7684;&#x8BB0;&#x53F7;&#x4E0D;&#x9700;&#x8981;&#x4E0B;&#x6B21;&#x518D;&#x5B8C;&#x5168;&#x91CD;&#x6807;&#x4E00;&#x904D;&#xFF0C;&#x8FD9;&#x4E5F;&#x5305;&#x542B;&#x5728;collection context&#x4E4B;&#x4E2D;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E00;&#x6982;&#x5FF5;&#x662F;&#x672C;&#x4EBA;&#x7F16;&#x9020;&#x51FA;&#x6765;&#x5E2E;&#x52A9;&#x7406;&#x89E3;&#x7684;&#xFF0C;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x6CA1;&#x6709;&#x8BF4;&#x592A;&#x6E05;&#x695A;&#xFF0C;&#x4F46;&#x662F;context&#x8FD9;&#x4E00;&#x6982;&#x5FF5;&#x80AF;&#x5B9A;&#x4F1A;&#x4EE5;&#x67D0;&#x79CD;&#x7B97;&#x6CD5;&#x3001;&#x5F62;&#x5F0F;&#x5B9E;&#x73B0;&#x3001;&#x5B58;&#x5728;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#xFF0C;incremental&#x547D;&#x540D;&#x7684;&#x771F;&#x6B63;&#x6765;&#x6E90;&#xFF0C;&#x6BCF;&#x6B21;&#x63A5;&#x7740;&#x4E0A;&#x6B21;&#x56DE;&#x6536;&#x7684;base&#x7EE7;&#x7EED;&#x56DE;&#x6536;&#x3002;</p><p>&#x5982;&#x679C;G1&#x6BCF;&#x6B21;&#x56DE;&#x6536;&#x53EA;&#x56DE;&#x6536;&#x6709;&#x9650;&#x4E2A;region&#xFF0C;&#x53EF;&#x4E0D;&#x53EF;&#x4EE5;&#x6311;&#x51FA;&#x5783;&#x573E;&#x6700;&#x591A;&#x7684;region&#x6765;&#x56DE;&#x6536;&#xFF1F;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x9700;&#x8981;&#x7EDF;&#x8BA1;&#x6240;&#x6709;region&#x9700;&#x8981;&#x6E05;&#x7406;&#x7684;&#x5783;&#x573E;&#xFF0C;&#x8FD9;&#x592A;&#x8D39;&#x65F6;&#x95F4;&#x4E86;&#x3002;&#x4E0D;&#x5982;&#xFF0C;&#x5C06;incremental&#x7B97;&#x6CD5;&#x548C;generation&#x7B97;&#x6CD5;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x5448;&#x73B0;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x79CD;&#x6548;&#x679C;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;G1&#x6240;&#x505A;&#x7684;&#x3002;&#x5C06;incremental&#x7B97;&#x6CD5;&#x548C;generation&#x7B97;&#x6CD5;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x4EE5;&#x540E;&#xFF0C;region&#x53EF;&#x4EE5;&#x4E3A;eden region&#x3001;survivor region&#x3001;old region&#x3001;humongous region(&#x5927;&#x5BF9;&#x8C61;)&#x3001;available region(&#x53EF;&#x7528;)(humongous region&#x548C;available region&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x591A;&#x804A;&#x4E86;)&#x3002;region&#x88AB;&#x5206;generation&#x540E;&#xFF0C;&#x6700;&#x5E38;&#x88AB;&#x56DE;&#x6536;&#x7684;region&#x81EA;&#x7136;&#x662F;young region&#xFF0C;&#x7136;&#x540E;&#x662F;old region&#xFF0C;&#x867D;&#x7136;old region&#x7684;&#x5783;&#x573E;&#x4E00;&#x822C;&#x4F1A;&#x6BD4;young region&#x5C11;&#xFF0C;&#x4F46;&#x662F;G1&#x4E5F;&#x4F1A;&#x6311;&#x9009;old region&#x4E2D;&#x5783;&#x573E;&#x6700;&#x591A;&#x7684;region&#x56DE;&#x6536;&#x3002;&#x6574;&#x4F53;&#x4E0A;&#x6765;&#x770B;&#xFF0C;G1&#x5C31;&#x5F62;&#x6210;&#x4E86;&#x4F1A;&#x6311;&#x9009;&#x5783;&#x573E;&#x6700;&#x591A;&#x7684;region&#x6765;&#x56DE;&#x6536;&#x3002;&#x76F8;&#x6BD4;&#x4E0E;&#x4EE5;&#x4E0A;&#x51E0;&#x79CD;GC&#x56DE;&#x6536;&#x6574;&#x4E2A;&#x7A7A;&#x95F4;&#x7684;&#x5783;&#x573E;&#xFF0C;G1&#x505A;&#x5230;&#x4E86;&#x5728;&#x6709;&#x9650;&#x7684;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x56DE;&#x6536;&#x6709;&#x9650;&#x7A7A;&#x95F4;&#x5185;&#x6700;&#x591A;&#x7684;&#x5783;&#x573E;&#x3002;G1&#x62E5;&#x6709;&#x6700;&#x9AD8;&#x7684;&#x6027;&#x4EF7;&#x6BD4;&#xFF0C;&#x4EE5;&#x9AD8;&#x56DE;&#x6536;&#x5783;&#x573E;&#x6548;&#x7387;&#x4E3A;&#x76EE;&#x6807;&#xFF0C;&#x6240;&#x4EE5;&#x88AB;&#x547D;&#x540D;&#x4E3A;Garbage First&#xFF01;</p><p>&#x6574;&#x4F53;&#x7684;&#x7A7A;&#x95F4;&#x5E03;&#x5C40;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/g1_space.png" alt="g1_space"></p><p>G1&#x4F1A;&#x89E6;&#x53D1;&#x4E24;&#x79CD;collection&#xFF0C;&#x4E00;&#x79CD;&#x662F;young collection&#xFF0C;&#x4E00;&#x79CD;&#x662F;mixed collection&#x3002;&#x671B;&#x6587;&#x751F;&#x4E49;&#xFF0C;young collection&#x662F;&#x9488;&#x5BF9;young generation&#x53D1;&#x8D77;&#x7684;&#x56DE;&#x6536;&#xFF0C;&#x800C;mixed collection&#x662F;&#x9488;&#x5BF9;young&#x548C;old generation&#x53D1;&#x8D77;&#x7684;&#x56DE;&#x6536;&#x3002;</p><ul><li>Young-Collection</li></ul><p>&#x5F53;JVM&#x4ECE;young generation&#x4E2D;&#x7684;eden region&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x5206;&#x914D;&#x5931;&#x8D25;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;eden region&#x5DF2;&#x6EE1;&#x5C31;&#x4F1A;&#x89E6;&#x53D1;young collection&#x3002;&#x4E3A;&#x4E86;&#x7EE7;&#x7EED;&#x4E0A;&#x6B21;young collection&#x8FDB;&#x884C;&#x56DE;&#x6536;&#xFF0C;&#x8981;&#x4ECE;young collection context&#x4E2D;&#x6311;&#x9009;&#x51FA;&#x9700;&#x8981;&#x56DE;&#x6536;&#x7684;eden region&#x548C;survivor region&#x3002;&#x5176;&#x4E2D;&#xFF0C;eden region&#x4F1A;&#x88AB;copy&#x5230;survivor region&#xFF0C;&#x800C;survivor region&#x6839;&#x636E;&#x5176;&#x751F;&#x547D;&#x5468;&#x671F;&#x957F;&#x77ED;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;copy&#x5230;old region(promoted)&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x4F1A;&#x7559;&#x5728;&#x4E0B;&#x6B21;young collection&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x653E;&#x5230;mixed collection&#x4E2D;&#x53BB;&#x56DE;&#x6536;&#x3002;</p><ul><li>Marking-Cycle</li></ul><p>&#x5F53;&#x5DF2;&#x4F7F;&#x7528;&#x7A7A;&#x95F4;&#x8FBE;&#x5230;threshold&#xFF0C;&#x4F1A;&#x542F;&#x52A8;marking cycle&#xFF0C;&#x7ED3;&#x675F;&#x540E;&#x4F1A;&#x89E6;&#x53D1;mixed collection&#xFF0C;&#x800C;marking cycle&#x5C31;&#x662F;&#x5E2E;mixed collection&#x5BF9;old generation&#x8FDB;&#x884C;&#x6807;&#x8BB0;&#x3002;</p><p>marking cycle&#x7C7B;&#x4F3C;CMS&#xFF0C;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x9636;&#x6BB5;&#xFF1A;initial mark&#x3001;root region scanning&#x3001;concurrent marking&#x3001;remark&#x3001;cleanup&#x3002;initial mark&#x4F1A;&#x5BF9;root&#x8282;&#x70B9;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;stop the world&#xFF0C;&#x6B64;&#x9636;&#x6BB5;&#x8FD8;&#x4F1A;&#x634E;&#x5E26;(piggybacked&#xFF0C;&#x5410;&#x69FD;&#x4E00;&#x4E0B;&#xFF0C;Oracle&#x539F;&#x6587;&#x6863;&#x8FD9;&#x4E2A;&#x8BCD;&#x7528;&#x51FA;&#x4E86;&#x5883;&#x754C;)&#x4E0A;&#x4E00;&#x6B21;young collection&#x3002;root region scanning&#x4F1A;&#x5BF9;root&#x8282;&#x70B9;&#x5F15;&#x7528;&#x7684;old generation&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4E0D;&#x4F1A;stop the world&#x3002;concurrent marking&#x4F1A;&#x6807;&#x8BB0;&#x51FA;heap&#x4E0A;&#x6240;&#x6709;&#x5B58;&#x6D3B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4E0D;&#x4F1A;stop the world&#x3002;remark&#x4F1A;&#x68C0;&#x67E5;&#x65B0;&#x589E;&#x52A0;&#x3001;&#x65B0;&#x5220;&#x9664;&#x7684;&#x5BF9;&#x8C61;&#x5E76;&#x5BF9;&#x5B83;&#x4EEC;&#x91CD;&#x65B0;&#x6807;&#x8BB0;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;stop the world&#x3002;cleanup&#x4F1A;&#x5C06;&#x6311;&#x9009;&#x51FA;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x88AB;&#x56DE;&#x6536;&#x7684;old region&#x4F5C;&#x4E3A;&#x5019;&#x9009;&#x4EA4;&#x7ED9;&#x63A5;&#x4E0B;&#x6765;&#x7684;mixed collection&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4F1A;stop the world&#x3002;&#x7C7B;&#x4F3C;CMS&#xFF0C;marking cycle&#x4F1A;&#x5C3D;&#x91CF;concurrent&#x8D77;&#x6765;&#x3002;</p><ul><li>Mixed-Collection</li></ul><p>mixed collection&#x4F1A;&#x4ECE;marking cycle&#x83B7;&#x5F97;&#x7684;&#x5019;&#x9009;&#xFF0C;&#x6839;&#x636E;&#x88AB;&#x8BBE;&#x7F6E;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6311;&#x51FA;&#x4E00;&#x4E9B;&#x5408;&#x7406;&#x7684;&#x3001;&#x5783;&#x573E;&#x6700;&#x591A;(lowest &#x201C;liveness&#x201D;)&#x7684;old region&#xFF0C;&#x548C;&#x4E00;&#x4E9B;young region&#x4E00;&#x8D77;&#x8FDB;&#x884C;&#x56DE;&#x6536;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x91CC;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x867D;&#x7136;&#x4E0A;&#x6587;&#x8BF4;&#x8FC7;&#xFF0C;young generation&#x9002;&#x5408;&#x7528;copy&#x7B97;&#x6CD5;&#x3001;old generation&#x9002;&#x5408;&#x7528;mark&amp;compact&#x7B97;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;G1&#x5728;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x8981;&#x56DE;&#x6536;&#x7684;old generation&#x5DF2;&#x7ECF;&#x662F;&#x88AB;&#x7CBE;&#x6311;&#x7EC6;&#x9009;&#x51FA;&#x7684;&#x6709;&#x5927;&#x91CF;&#x5783;&#x573E;region&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;copy&#x7B97;&#x6CD5;&#x5C31;&#x597D;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;G1&#x5BF9;old generation&#x662F;&#x76F8;&#x5F53;&#x4E8E;&#x8FDB;&#x884C;&#x4E86;mark&amp;compact&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x4E2A;mark&amp;compact&#x662F;&#x901A;&#x8FC7;mark&#x548C;copy hybrid&#x51FA;&#x6765;&#x7684;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4E0D;&#x5149;&#x662F;old generation&#xFF0C;&#x6240;&#x6709;region&#x88AB;copy&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x76F8;&#x5F53;&#x4E8E;&#x662F;copy&#x7B97;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;G1&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x5904;&#x7406;&#x5916;&#x90E8;&#x788E;&#x7247;&#x95EE;&#x9898;&#x3002;</p><h2 id="&#x6BD4;&#x8F83;-comparison"><a href="#&#x6BD4;&#x8F83;-comparison" class="headerlink" title="&#x6BD4;&#x8F83;(comparison)"></a>&#x6BD4;&#x8F83;(comparison)</h2><p>&#x76F8;&#x6BD4;&#x4E8E;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x548C;&#x8DDF;&#x8E2A;&#x5F0F;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E0D;&#x4FDD;&#x5B58;&#x5F15;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x8DDF;&#x8E2A;&#x5F0F;&#x4F1A;&#x4FDD;&#x5B58;&#x660E;&#x786E;&#x7684;&#x5F15;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x81EA;&#x7136;&#x5C31;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#x3002;&#x8DDF;&#x8E2A;&#x5F0F;&#x662F;&#x96C6;&#x4E2D;&#x5F0F;&#x7684;&#x89E6;&#x53D1;&#xFF0C;&#x4F1A;&#x5F15;&#x8D77;stop the world&#xFF0C;&#x867D;&#x7136;&#x8DDF;&#x8E2A;&#x5F0F;&#x5C3D;&#x529B;&#x505A;&#x5230;concurrent&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x907F;&#x514D;stop the world&#xFF0C;&#x800C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x662F;&#x5355;&#x70B9;&#x5F0F;&#x7684;&#x89E6;&#x53D1;&#x3002;&#x76F8;&#x6BD4;&#x8F83;&#x800C;&#x8A00;&#xFF0C;&#x96C6;&#x4E2D;&#x5F0F;&#x7684;stop the world&#x5BB9;&#x6613;&#x9020;&#x6210;&#x660E;&#x663E;&#x7684;&#x5361;&#x987F;&#xFF0C;&#x76F8;&#x4FE1;&#x5927;&#x5BB6;&#x7684;&#x770B;&#x8FC7;&#x5FAE;&#x535A;&#x4E0A;&#x4E00;&#x5F20;&#x5404;&#x4E2A;&#x8BED;&#x8A00;&#x53C2;&#x52A0;&#x8FD0;&#x52A8;&#x4F1A;&#x7684;&#x56FE;&#x7247;&#xFF0C;java&#x672C;&#x6765;&#x9065;&#x9065;&#x9886;&#x5148;&#xFF0C;&#x89E6;&#x53D1;full GC&#x4EE5;&#x540E;&#xFF0C;&#x540D;&#x843D;&#x5B59;&#x5C71;&#x3002;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x548C;&#x8DDF;&#x8E2A;&#x5F0F;&#x90FD;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x7BA1;&#x7406;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x4E0A;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x534A;&#x65A4;&#x516B;&#x4E24;&#x3002;&#x5982;&#x679C;&#x6574;&#x4F53;&#x6BD4;&#x8F83;&#x6027;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x5F88;&#x96BE;&#x5F97;&#x51FA;&#x5B70;&#x80DC;&#x5B70;&#x52A3;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9762;&#x5BF9;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#x5404;&#x6709;&#x5229;&#x5F0A;&#x3002;&#x5BF9;&#x4E8E;&#x5B9E;&#x65F6;&#x4EA4;&#x4E92;&#x7CFB;&#x7EDF;&#x6765;&#x8BF4;&#xFF0C;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5355;&#x70B9;&#x5F0F;&#x89E6;&#x53D1;&#x66F4;&#x80DC;&#x4E00;&#x7B79;&#x3002;&#x5BF9;&#x4E8E;&#x5185;&#x5B58;&#x5145;&#x88D5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8DDF;&#x8E2A;&#x5F0F;&#x66F4;&#x80DC;&#x4E00;&#x7B79;&#x3002;&#x5BF9;&#x4E8E;&#x5185;&#x5B58;&#x7D27;&#x5F20;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x66F4;&#x80DC;&#x4E00;&#x7B79;&#x3002;</p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>GC&#x6982;&#x8FF0;&#xFF1A;<a href="https://www.ibm.com/developerworks/cn/java/j-lo-JVMGarbageCollection/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/j-lo-JVMGarbageCollection/</a></p><p>Serial &amp; Parallel &amp; CMS&#xFF1A; <a href="http://www.alexleo.click/java-%E5%96%9D%E6%9D%AF%E5%92%96%E5%95%A1%EF%BC%8C%E8%81%8A%E9%BB%9E-gc%EF%BC%88%E4%B8%80%EF%BC%89-%E5%9F%BA%E7%A4%8E%E6%A6%82%E5%BF%B5/" target="_blank" rel="noopener">http://www.alexleo.click/java-%E5%96%9D%E6%9D%AF%E5%92%96%E5%95%A1%EF%BC%8C%E8%81%8A%E9%BB%9E-gc%EF%BC%88%E4%B8%80%EF%BC%89-%E5%9F%BA%E7%A4%8E%E6%A6%82%E5%BF%B5/</a></p><p>G1&#x5B98;&#x65B9;&#x6587;&#x6863;-1&#xFF1A;<a href="http://www.oracle.com/technetwork/tutorials/tutorials-1876574.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/tutorials/tutorials-1876574.html</a></p><p>G1&#x5B98;&#x65B9;&#x6587;&#x6863;-2&#xFF1A;<a href="http://www.oracle.com/technetwork/articles/java/g1gc-1984535.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/articles/java/g1gc-1984535.html</a></p><p>G1&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#xFF1A;<a href="http://blog.jobbole.com/109170/" target="_blank" rel="noopener">http://blog.jobbole.com/109170/</a></p>]]></content>
      
      <categories>
          
          <category> 计算机体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机体系-栈与堆</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E6%A0%88%E4%B8%8E%E5%A0%86/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E6%A0%88%E4%B8%8E%E5%A0%86/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x7AE0;&#x7684;&#x4E3B;&#x89D2;&#x662F;&#x6808;&#x4E0E;&#x5806;&#xFF0C;&#x800C;&#x6587;&#x7AE0;&#x8FD8;&#x4F1A;&#x5C06;&#x6808;&#x548C;&#x5806;&#x76F8;&#x5173;&#x8054;&#x7684;calling convention&#x3001;&#x5806;&#x7EA7;&#x522B;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x3001;ABI&#x7B49;&#x6838;&#x5FC3;&#x8981;&#x70B9;&#xFF0C;&#x4EE5;&#x53CA;&#x6280;&#x5DE7;&#x9610;&#x8FF0;&#x6E05;&#x695A;&#x3002;</p><a id="more"></a><h2 id="&#x6808;"><a href="#&#x6808;" class="headerlink" title="&#x6808;"></a>&#x6808;</h2><p>&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x6709;&#x653F;&#x6CBB;&#x89C9;&#x609F;&#x7684;&#x3001;&#x575A;&#x6301;&#x653F;&#x6CBB;&#x601D;&#x60F3;&#x6B63;&#x786E;&#x7684;&#x3001;&#x80F8;&#x53E3;&#x98D8;&#x626C;&#x9C9C;&#x7EA2;&#x7684;&#x5DE5;&#x5361;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x8C28;&#x8BB0;&#x8FD9;&#x53E5;&#x8BDD;&#xFF1A;</p><blockquote><p>&#x6CA1;&#x6709;&#x515A;&#x5C31;&#x6CA1;&#x6709;&#x65B0;&#x4E2D;&#x56FD;&#xFF0C;&#x6CA1;&#x6709;&#x6808;&#x5C31;&#x6CA1;&#x6709;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x3002;</p></blockquote><p>&#x662F;&#x7684;&#xFF0C;&#x6808;&#x5C31;&#x662F;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x57FA;&#x7840;&#x3002;&#x4E3A;&#x4FDD;&#x8BC1;&#x987A;&#x5229;&#x7684;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#xFF0C;&#x6808;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x4EE5;&#x4E0B;&#x56DB;&#x70B9;&#xFF1A;</p><ul><li>&#x4FDD;&#x5B58;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x3002;</li><li>&#x4FDD;&#x5B58;&#x8FD4;&#x56DE;&#x5730;&#x5740;&#x3002;</li><li>&#x4FDD;&#x5B58;&#x5BC4;&#x5B58;&#x5668;&#x3002;</li><li>&#x8C03;&#x6574;&#x5E27;&#x6307;&#x9488;(ebp)&#x548C;&#x6808;&#x6307;&#x9488;(esp)&#x3002;</li></ul><p>&#x4FDD;&#x5B58;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x8FD9;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x4E0D;&#x591A;&#x8BF4;&#x4E86;&#xFF0C;&#x5F53;&#x7136;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x5BC4;&#x5B58;&#x5668;&#x4FDD;&#x5B58;&#xFF0C;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#x4E0B;&#x9762;&#x4F1A;&#x804A;&#x5230;&#x3002;&#x4FDD;&#x5B58;&#x8FD4;&#x56DE;&#x5730;&#x5740;&#xFF0C;&#x4FDD;&#x5B58;call&#x6307;&#x4EE4;&#x7684;&#x4E0B;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x5740;&#xFF0C;ret&#x6307;&#x4EE4;&#x4F1A;&#x8FD4;&#x56DE;&#x8FD9;&#x4E00;&#x5730;&#x5740;&#x3002;&#x4FDD;&#x5B58;&#x5BC4;&#x5B58;&#x5668;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x8986;&#x76D6;&#x8C03;&#x7528;&#x8005;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x800C;&#x5E27;&#x6307;&#x9488;&#x548C;&#x6808;&#x6307;&#x9488;&#x4E4B;&#x95F4;&#x7684;&#x7A7A;&#x95F4;&#x5C31;&#x662F;&#x672C;&#x6B21;&#x6808;&#x5E27;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x8C03;&#x6574;&#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x4EE5;&#x8BBF;&#x95EE;&#x7A7A;&#x95F4;&#x3002;</p><p>&#x5E38;&#x89C1;&#x7684;&#x6808;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">        &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;   ------        high       |.....                |       |       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |       |           |&#x53C2;&#x6570;n                |       |       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |       |                |.....                |       |------&gt;&#x8C03;&#x7528;&#x8005;&#x6808;        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |       |       |&#x53C2;&#x6570;1                |       |        |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |       |       |&#x8FD4;&#x56DE;&#x5730;&#x5740;              |      | ebp---&gt;|&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |-------       |&#x88AB;&#x4FDD;&#x5B58;&#x7684;ebp           |      |       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |      |       |&#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x548C;       |      |        |&#x5C40;&#x90E8;&#x53D8;&#x91CF;              |      |-------&gt;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x6808;&#x5E27;       |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |      |       |&#x5176;&#x4ED6;&#x6570;&#x636E;              |      |esp---&gt;|&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |-------       low</code></pre><p>&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x6808;&#x5E27;&#x3001;&#x4E3B;&#x4F53;&#x3001;&#x9500;&#x6BC1;&#x6808;&#x5E27;&#x3002;&#x521D;&#x59CB;&#x5316;&#x6808;&#x5E27;&#x548C;&#x9500;&#x6BC1;&#x6808;&#x5E27;&#x90E8;&#x5206;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x5C31;&#x662F;&#x6808;&#x4E3B;&#x8981;&#x505A;&#x7684;&#x56DB;&#x70B9;&#x3002;&#x4E3B;&#x4F53;&#x90E8;&#x5206;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x6808;&#x5E27;&#x7684;&#x90E8;&#x5206;&#x3002;</p><p>&#x5E38;&#x89C1;&#x7684;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x6C47;&#x7F16;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-assembly">call xxx               &#x4FDD;&#x5B58;&#x8FD4;&#x56DE;&#x5730;&#x5740;&#xFF0C;&#x5E76;&#x8DF3;&#x8F6C;&#x5230;&#x8FC7;&#x7A0B;&#x8D77;&#x59CB;&#x5730;&#x5740;push ebp               &#x4FDD;&#x5B58;&#x5E27;&#x6307;&#x9488;mov ebp esp            &#x8C03;&#x6574;&#x5E27;&#x6307;&#x9488;push &#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;     &#x4FDD;&#x5B58;&#x5BC4;&#x5B58;&#x5668;sub esp xxx            &#x8C03;&#x6574;&#x6808;&#x6307;&#x9488;&#xFF0C;&#x5206;&#x914D;&#x5E27;&#x6808;&#x3002;......                 &#x4E3B;&#x4F53;mov eax xxx            &#x8FD4;&#x56DE;&#x503C;&#x653E;&#x5165;eaxpop &#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;      &#x53D6;&#x51FA;&#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;mov esp ebp            &#x8C03;&#x6574;&#x6808;&#x6307;&#x9488;pop ebp                &#x53D6;&#x51FA;&#x5E27;&#x6307;&#x9488;ret                    &#x8DF3;&#x56DE;&#x5230;&#x8FD4;&#x56DE;&#x5730;&#x5740;</code></pre><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x521D;&#x59CB;&#x5316;&#x548C;&#x9500;&#x6BC1;&#x90E8;&#x5206;&#x662F;&#x5B8C;&#x5168;&#x76F8;&#x53CD;&#x7684;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x6808;&#x5728;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x524D;&#x540E;&#x73B0;&#x573A;&#x5FC5;&#x987B;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;</p><h3 id="Calling-Convention-&#x8C03;&#x7528;&#x60EF;&#x4F8B;"><a href="#Calling-Convention-&#x8C03;&#x7528;&#x60EF;&#x4F8B;" class="headerlink" title="Calling-Convention(&#x8C03;&#x7528;&#x60EF;&#x4F8B;)"></a>Calling-Convention(&#x8C03;&#x7528;&#x60EF;&#x4F8B;)</h3><p>&#x5C31;&#x50CF;&#x5E73;&#x65F6;&#x5199;&#x4EE3;&#x7801;&#x65F6;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x534F;&#x8BAE;&#x6A21;&#x5F0F;&#xFF0C;&#x53CC;&#x65B9;&#x4E4B;&#x95F4;&#x9700;&#x8981;&#x89C4;&#x5B9A;&#x4E00;&#x4E9B;&#x89C4;&#x5219;&#x624D;&#x80FD;&#x5408;&#x529B;&#x5C06;&#x4E00;&#x4EF6;&#x4E8B;&#x505A;&#x597D;&#x3002;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x4E5F;&#x4E00;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8005;&#x548C;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x9075;&#x5B88;&#x4E00;&#x7EC4;&#x201C;&#x534F;&#x8BAE;&#x201D;&#xFF0C;&#x4EE5;&#x987A;&#x5229;&#x5730;&#x5171;&#x540C;&#x5B8C;&#x6210;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x3002;Calling Convention&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x7EC4;&#x534F;&#x8BAE;&#x3002;Calling Convention&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x65B9;&#x9762;&#xFF1A;</p><ul><li>&#x51FD;&#x6570;&#x53C2;&#x6570;&#x7684;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#x548C;&#x987A;&#x5E8F;&#x3002;</li><li>&#x6808;&#x6062;&#x590D;&#x73B0;&#x573A;&#x7684;&#x65B9;&#x5F0F;&#x3002;</li><li>&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#x3002;</li></ul><p>&#x5148;&#x804A;&#x7B2C;&#x4E00;&#x70B9;&#xFF0C;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x7684;&#x4F20;&#x9012;&#x987A;&#x5E8F;&#x548C;&#x65B9;&#x5F0F;&#x3002;&#x65B9;&#x5F0F;&#x6307;&#x7684;&#x662F;&#x53C2;&#x6570;&#x662F;&#x653E;&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x4E0A;&#x8FD8;&#x662F;&#x6808;&#x4E0A;&#x8FD8;&#x662F;&#x6DF7;&#x5408;&#xFF1F;ia32&#x89C4;&#x5B9A;&#x53C2;&#x6570;&#x5168;&#x90E8;&#x653E;&#x5728;&#x6808;&#x4E0A;&#xFF0C;&#x800C;x86-64&#x5219;&#x89C4;&#x5B9A;&#x5148;&#x653E;&#x5BC4;&#x5B58;&#x5668;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x8FC7;6&#x4E2A;&#x518D;&#x653E;&#x5230;&#x6808;&#x4E0A;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;ia32&#x6709;8&#x4E2A;&#x901A;&#x7528;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x800C;x86-64&#x6709;16&#x4E2A;&#x901A;&#x7528;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x51FD;&#x6570;&#x7684;&#x4F20;&#x9012;&#x987A;&#x5E8F;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x4ECE;&#x5DE6;&#x81F3;&#x53F3;&#x5B58;&#x50A8;&#x8FD8;&#x662F;&#x4ECE;&#x53F3;&#x81F3;&#x5DE6;&#x5B58;&#x50A8;&#x3002;&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#x7684;Calling-Convention&#x6BD4;&#x5982;C&#x8BED;&#x8A00;&#x9ED8;&#x8BA4;&#x7684;cdecl&#x89C4;&#x5B9A;&#x5C31;&#x662F;&#x4ECE;&#x53F3;&#x81F3;&#x5DE6;&#x5B58;&#x50A8;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x70B9;&#xFF0C;&#x6808;&#x6062;&#x590D;&#x73B0;&#x573A;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x8981;&#x505A;&#x5230;&#x6808;&#x5728;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x524D;&#x540E;&#x73B0;&#x573A;&#x4E00;&#x81F4;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x5C31;&#x8981;&#x5C06;&#x53C2;&#x6570;&#x90FD;&#x4ECE;&#x6808;&#x4E0A;pop&#x6389;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x53EA;&#x8981;&#x8C03;&#x6574;esp&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x8FD9;&#x4EF6;&#x4E8B;&#x53EF;&#x4EE5;&#x7531;&#x8C03;&#x7528;&#x8005;&#x505A;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7531;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x505A;&#xFF0C;&#x5927;&#x90E8;&#x5206;Calling Convention&#x89C4;&#x5B9A;&#x7531;&#x8C03;&#x7528;&#x8005;&#x505A;&#x3002;Calling Convention&#x5C31;&#x8981;&#x89C4;&#x5B9A;&#x8FD9;&#x4E00;&#x70B9;&#x3002;&#x9664;&#x4E86;&#x53C2;&#x6570;&#xFF0C;&#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x4E5F;&#x6709;&#x81EA;&#x5DF1;&#x7684;Calling Convention&#xFF0C;&#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x53EF;&#x4EE5;&#x88AB;&#x5206;&#x4E3A;&#x8C03;&#x7528;&#x8005;&#x4FDD;&#x5B58;&#x6216;&#x8005;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x4FDD;&#x5B58;&#xFF0C;&#x6808;&#x6062;&#x590D;&#x73B0;&#x573A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x88AB;&#x4FDD;&#x5B58;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x4E5F;&#x8981;&#x6309;Calling Convention&#x4ECE;&#x6808;&#x4E0A;pop&#x6389;&#x3002;&#x8FD9;&#x7B2C;&#x4E8C;&#x70B9;&#x662F;&#x5FC5;&#x987B;&#x8981;&#x505A;&#x7684;&#xFF0C;Calling Convention&#x5C31;&#x662F;&#x89C4;&#x5B9A;&#x7531;&#x8C03;&#x7528;&#x8005;&#x505A;&#x8FD8;&#x662F;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x505A;&#x3002;</p><p>&#x7B2C;&#x4E09;&#x70B9;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#x3002;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;Calling Convention&#x90FD;&#x89C4;&#x5B9A;&#x5C0F;&#x4E8E;4&#x5B57;&#x8282;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x653E;&#x5230;eax&#x4E2D;&#x3002;&#x5C0F;&#x4E8E;8&#x5B57;&#x8282;&#x3001;&#x5927;&#x4E8E;4&#x5B57;&#x8282;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x653E;&#x5230;eax&#x548C;edx&#x4E2D;&#x3002;&#x82E5;&#x662F;&#x66F4;&#x5927;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x603B;&#x4E0D;&#x80FD;&#x90FD;&#x653E;&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x5427;&#x3002;&#x90A3;&#x5C31;&#x4E0D;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x503C;&#xFF0C;&#x4F20;&#x9012;&#x5730;&#x5740;&#x3002;&#x8C03;&#x7528;&#x8005;&#x5148;&#x5728;&#x6808;&#x4E0A;&#x5206;&#x914D;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x7A7A;&#x95F4;&#x7684;&#x5730;&#x5740;&#x4EE5;&#x9690;&#x5F0F;&#x53C2;&#x6570;(implicit argument )&#x7684;&#x65B9;&#x5F0F;&#x4F20;&#x9012;&#x7ED9;&#x88AB;&#x8C03;&#x7528;&#x8005;&#xFF0C;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x5C06;&#x8FD4;&#x56DE;&#x503C;&#x5148;&#x590D;&#x5236;&#x5230;&#x4F5C;&#x4E3A;&#x9690;&#x5F0F;&#x53C2;&#x6570;&#x7684;&#x5730;&#x5740;&#x4E2D;&#xFF0C;&#x518D;&#x5C06;&#x5730;&#x5740;&#x653E;&#x5230;eax&#x4E2D;&#x3002;&#x8C03;&#x7528;&#x8005;&#x5C06;eax&#x4E2D;&#x5730;&#x5740;&#x7684;&#x5185;&#x5BB9;&#x518D;&#x590D;&#x5236;&#x5230;&#x8FD4;&#x56DE;&#x503C;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x4E2D;&#x4ECB;&#x7A7A;&#x95F4;&#x548C;&#x5176;&#x5730;&#x5740;&#x5C31;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x66F4;&#x5927;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x3002;</p><p>&#x5173;&#x4E8E;&#x9690;&#x5F0F;&#x53C2;&#x6570;&#x518D;&#x804A;&#x4E00;&#x70B9;&#x3002;&#x652F;&#x6301;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x8BED;&#x8A00;&#x5F53;&#x4E2D;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;C++&#x4E2D;&#x7684;this&#xFF0C;Objective-C&#x4E2D;&#x7684;Self&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x8C61;&#x81EA;&#x5DF1;&#x7684;&#x53D8;&#x91CF;&#x90FD;&#x4F1A;&#x4F5C;&#x4E3A;&#x65B9;&#x6CD5;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x9690;&#x5F0F;&#x53C2;&#x6570;&#x3002;</p><h2 id="&#x5B57;&#x8282;&#x5BF9;&#x9F50;-alignment-&#x3001;&#x5B57;&#x8282;&#x966A;&#x886C;-padding"><a href="#&#x5B57;&#x8282;&#x5BF9;&#x9F50;-alignment-&#x3001;&#x5B57;&#x8282;&#x966A;&#x886C;-padding" class="headerlink" title="&#x5B57;&#x8282;&#x5BF9;&#x9F50;(alignment)&#x3001;&#x5B57;&#x8282;&#x966A;&#x886C;(padding)"></a>&#x5B57;&#x8282;&#x5BF9;&#x9F50;(alignment)&#x3001;&#x5B57;&#x8282;&#x966A;&#x886C;(padding)</h2><p>&#x5728;&#x804A;&#x5806;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x94FA;&#x57AB;&#x4E00;&#x4E9B;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x548C;&#x5B57;&#x8282;&#x966A;&#x886C;&#x5185;&#x5BB9;&#xFF0C;&#x5728;&#x540E;&#x9762;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3001;&#x5B57;&#x8282;&#x966A;&#x886C;&#x90FD;&#x6E90;&#x4E8E;CPU&#x8BFB;&#x53D6;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x770B;&#x4E0A;&#x53BB;&#x662F;&#x201C;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x201D;&#x7684;&#xFF0C;&#x5B9E;&#x5219;&#x662F;&#x6309;&#x5355;&#x4F4D;(chunk)&#x8BBF;&#x95EE;&#x7684;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x662F;&#x4EE5;4&#x5B57;&#x8282;&#x4F5C;&#x4E3A;&#x5355;&#x4F4D;&#x8BBF;&#x95EE;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;CPU&#x53EA;&#x80FD;&#x8BBF;&#x95EE;4&#x7684;n&#x500D;&#x5230;4&#x7684;(n+1)&#x500D;&#x5730;&#x5740;&#x7684;&#x6570;&#x636E;&#x3002;&#x90A3;&#x4F60;&#x5E94;&#x8BE5;&#x5C31;&#x80FD;&#x770B;&#x51FA;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x6570;&#x636E;&#x8D77;&#x59CB;&#x5730;&#x5740;&#x4E0D;&#x662F;4&#x7684;n&#x500D;&#x6570;&#xFF0C;CPU&#x5C31;&#x9700;&#x8981;&#x66F4;&#x591A;&#x6B21;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x8BBF;&#x95EE;&#x3002;</p><p>&#x6570;&#x636E;&#x7684;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x6307;&#x7684;&#x662F;&#xFF1A;&#x6570;&#x636E;&#x7684;&#x8D77;&#x59CB;&#x5730;&#x5740;&#xFF0C;&#x5E94;&#x8BE5;&#x6B63;&#x597D;&#x843D;&#x5728;CPU&#x8BBF;&#x95EE;&#x5B58;&#x50A8;&#x5668;&#x5730;&#x5740;&#x7684;&#x8FB9;&#x754C;&#x4E0A;(the address fall evenly on the processor&#x2019;s memory access boundary)&#x3002;&#x66F4;&#x52A0;&#x8BE6;&#x7EC6;&#x7684;&#x8D44;&#x6599;&#x770B;<a href="https://www.ibm.com/developerworks/library/pa-dalign/" target="_blank" rel="noopener">IBM&#x6587;&#x6863;</a>&#x3001;<a href="https://en.wikipedia.org/wiki/Data_structure_alignment" target="_blank" rel="noopener">WikiPedia</a>&#x3001;<a href="https://msdn.microsoft.com/zh-cn/library/dn956973.aspx" target="_blank" rel="noopener">MicroSoft&#x6587;&#x6863;</a>&#x3002;&#x800C;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x8BF4;&#x6570;&#x636E;&#x5BF9;n&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x5C31;&#x662F;&#x6570;&#x636E;&#x7684;&#x8D77;&#x59CB;&#x5730;&#x5740;&#x6B63;&#x597D;&#x843D;&#x5728;n&#x7684;&#x6574;&#x6570;&#x500D;&#x4E0A;&#x3002;</p><p>&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x4E0D;&#x5BF9;&#x9F50;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6700;&#x597D;&#x7684;&#x5BF9;&#x9F50;&#x65B9;&#x5F0F;&#x5C31;&#x4E3A;&#x8D77;&#x59CB;&#x5730;&#x5740;&#x7684;&#x524D;&#x4E00;&#x6570;&#x636E;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5B57;&#x8282;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x5C06;&#x4E0D;&#x5BF9;&#x9F50;&#x6570;&#x636E;&#x8FC1;&#x79FB;(shift)&#x5230;&#x8FB9;&#x754C;&#x4E0A;&#xFF0C;&#x5B8C;&#x6210;&#x5BF9;&#x9F50;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x5B57;&#x8282;&#x966A;&#x886C;&#xFF0C;&#x4E3A;&#x6570;&#x636E;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x966A;&#x886C;&#x5B57;&#x8282;(insert some meaningless bytes)&#xFF0C;&#x4EE5;&#x5BF9;&#x9F50;&#x540E;&#x9762;&#x7684;&#x6570;&#x636E;&#x3002;</p><p>&#x8FD9;&#x65F6;&#xFF0C;&#x8981;&#x660E;&#x786E;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x7531;&#x8C01;&#x6765;&#x505A;&#xFF1F;&#x81EA;&#x7136;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5E2E;&#x4F60;&#x8FDB;&#x884C;&#x81EA;&#x7136;&#x5BF9;&#x9F50;&#xFF0C;&#x81EA;&#x7136;&#x5BF9;&#x9F50;&#x4F1A;&#x6309;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x5927;&#x5C0F;&#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x7684;n&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x6709;&#x5F3A;&#x5236;&#x5BF9;&#x9F50;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;attribute((aligned()))&#x6307;&#x660E;&#x5BF9;&#x9F50;&#x7684;n&#xFF0C;C++&#x4E2D;&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;alignas&#x5173;&#x952E;&#x5B57;&#x3002;</p><p>&#x90A3;&#x4E48;&#xFF0C;&#x5BF9;&#x4E8E;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x8003;&#x8651;&#x81EA;&#x8EAB;&#x5BF9;&#x9F50;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5982;&#x679C;&#x662F;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x5462;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;Array&#x3001;Struct&#xFF1F;&#x5BF9;&#x4E8E;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x6709;&#x4E24;&#x6761;&#x89C4;&#x5219;&#x8981;&#x9075;&#x5B88;&#xFF1A;</p><ul><li>&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3002;</li><li>&#x4FDD;&#x8BC1;&#x81EA;&#x8EAB;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3002;</li></ul><p>&#x5BF9;&#x4E8E;Array&#x6765;&#x8BF4;&#xFF0C;&#x5C06;Array&#x8D77;&#x59CB;&#x5730;&#x5740;&#x6839;&#x636E;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5BF9;&#x9F50;&#x5C31;&#x662F;&#x4FDD;&#x8BC1;&#x81EA;&#x8EAB;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3002;&#x5982;&#x679C;Array&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x662F;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x8981;Array&#x81EA;&#x8EAB;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x5C31;&#x5DF2;&#x7ECF;&#x6EE1;&#x8DB3;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5BF9;&#x9F50;&#x4E86;&#x3002;&#x800C;&#x5982;&#x679C;&#x662F;&#x590D;&#x5408;&#x7C7B;&#x578B;&#xFF0C;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x81EA;&#x8EAB;&#x8981;&#x8D1F;&#x8D23;&#x5728;Array&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5BF9;&#x9F50;&#xFF0C;&#x8981;&#x4FDD;&#x8BC1;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x5927;&#x5C0F;&#x80FD;&#x591F;&#x6574;&#x9664;Array&#x81EA;&#x8EAB;&#x5BF9;&#x9F50;&#x7684;n&#x3002;</p><p>&#x5BF9;&#x4E8E;Struct&#x6765;&#x8BF4;&#xFF0C;&#x8981;&#x9075;&#x5B88;&#x4EE5;&#x4E0B;&#x4E09;&#x70B9;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E09;&#x70B9;&#x90FD;&#x662F;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3001;&#x4FDD;&#x8BC1;&#x81EA;&#x8EAB;&#x5BF9;&#x9F50;&#x8FD9;&#x4E24;&#x6761;&#x89C4;&#x5219;&#x7684;&#x5370;&#x8BC1;&#xFF1A;</p><ul><li>&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#xFF0C;&#x5143;&#x7D20;&#x8981;&#x6309;&#x7167;&#x81EA;&#x5DF1;&#x7684;offset&#x81EA;&#x7136;&#x5BF9;&#x9F50;&#x3002;</li><li>&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x81EA;&#x8EAB;&#x5BF9;&#x9F50;&#xFF0C;Struct&#x5C06;&#x5305;&#x542B;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5927;&#x5C0F;&#x7684;&#x6700;&#x5927;&#x503C;&#x4F5C;&#x4E3A;n&#x8FDB;&#x884C;&#x5BF9;&#x9F50;&#x3002;</li><li>&#x5F53;Struct&#x5728;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x4E2D;&#xFF0C;Struct&#x4F5C;&#x4E3A;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x590D;&#x5408;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5BF9;&#x9F50;&#xFF0C;Struct&#x7684;&#x5927;&#x5C0F;&#x8981;&#x6574;&#x9664;Struct&#x5305;&#x542B;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5927;&#x5C0F;&#x7684;&#x6700;&#x5927;&#x503C;n&#x3002;</li></ul><p>&#x6BD4;&#x5982;&#xFF0C;&#x5982;&#x4E0B;Struct&#xFF1A;</p><pre><code class="lang-c">struct S1 {  int i;  char c;  long l;}</code></pre><p>&#x6309;&#x7167;&#x7B2C;&#x4E00;&#x6761;&#xFF0C;long&#x7C7B;&#x578B;&#x7684;&#x5143;&#x7D20;l&#xFF0C;&#x8D77;&#x59CB;offset&#x662F;8&#x800C;&#x4E0D;&#x662F;5&#x3002;&#x6309;&#x7167;&#x7B2C;&#x4E8C;&#x6761;&#xFF0C;S1&#x8981;&#x5BF9;8&#x8FDB;&#x884C;&#x5BF9;&#x9F50;&#x3002;</p><p>&#x800C;&#x5982;&#x4E0B;Struct:</p><pre><code class="lang-c">struct S2 {  int i;  int j;  char c;}</code></pre><p>&#x6309;&#x7167;&#x7B2C;&#x4E09;&#x6761;&#xFF0C;S2&#x7684;&#x5927;&#x5C0F;&#x662F;12&#x800C;&#x4E0D;&#x662F;9&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Struct&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x58F0;&#x660E;&#x5143;&#x7D20;&#x7684;&#x987A;&#x5E8F;&#x4F1A;&#x5F71;&#x54CD;Struct&#x7684;&#x771F;&#x5B9E;&#x5927;&#x5C0F;&#x3002;&#x5728;&#x4F7F;&#x7528;Struct&#x7684;&#x65F6;&#x5019;&#x8981;&#x6CE8;&#x610F;&#x8FD9;&#x4E00;&#x70B9;&#x3002;</p><h2 id="&#x5806;"><a href="#&#x5806;" class="headerlink" title="&#x5806;"></a>&#x5806;</h2><p>&#x6570;&#x636E;&#x9664;&#x4E86;&#x6808;&#x8FD9;&#x79CD;&#x968F;&#x7740;&#x8FC7;&#x7A0B;&#x8C03;&#x7528;&#x5206;&#x914D;&#x3001;&#x91CA;&#x653E;&#x7684;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x8981;&#x4E00;&#x79CD;&#x4E3B;&#x52A8;&#x63A7;&#x5236;&#x5206;&#x914D;&#x3001;&#x91CA;&#x653E;&#x65F6;&#x673A;&#x7684;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x3002;&#x8FD9;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5806;&#xFF0C;&#x66F4;&#x52A0;&#x660E;&#x786E;&#x7684;&#x6765;&#x8BF4;&#x662F;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x3002;</p><p>&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x8981;&#x660E;&#x786E;&#x975E;&#x5E38;&#x5173;&#x952E;&#x7684;&#x4E00;&#x70B9;&#x3002;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x7BA1;&#x7406;&#x7684;&#x662F;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x5E76;&#x4E14;&#x4EC5;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x672A;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x5230;&#x5DF2;&#x5206;&#x914D;&#xFF0C;&#x7B49;&#x5230;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x518D;&#x53D1;&#x751F;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#xFF0C;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x5DF2;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x5230;&#x5DF2;&#x7F13;&#x5B58;&#x3002;&#x8FD9;&#x91CC;&#x5982;&#x679C;&#x6709;&#x7591;&#x60D1;&#x53EF;&#x4EE5;&#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x4E0A;&#x7BC7;&#x6587;&#x7AE0;&#x518D;&#x770B;&#x88C5;&#x8F7D;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x8FD9;&#x6BB5;&#x8BDD;&#xFF1A;</p><blockquote><p>&#x4ECE;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x6765;&#x770B;&#xFF0C;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x540E;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E5F;&#x88AB;&#x521B;&#x5EFA;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x662F;&#x672A;&#x5206;&#x914D;&#x7684;&#xFF0C;&#x88C5;&#x8F7D;&#x5C06;&#x6620;&#x5C04;&#x8BB0;&#x5F55;&#x5728;&#x8FDB;&#x7A0B;&#x7684;vma&#x4E2D;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x672A;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x4E3A;&#x5DF2;&#x5206;&#x914D;&#x3002;&#x7B49;&#x5230;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#xFF0C;&#x518D;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x5DF2;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x5230;&#x5DF2;&#x7F13;&#x5B58;&#x3002;</p></blockquote><p>&#x660E;&#x786E;&#x8FD9;&#x4E00;&#x70B9;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x601D;&#x8003;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5806;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x548C;mmap&#x6709;&#x4EC0;&#x4E48;&#x672C;&#x8D28;&#x7684;&#x4E0D;&#x540C;&#xFF1F;&#x5B9E;&#x5219;&#x6CA1;&#x6709;&#xFF0C;&#x90FD;&#x662F;&#x5411;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7533;&#x8BF7;&#x4E00;&#x6BB5;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x518D;&#x63D0;&#x9AD8;&#x4E00;&#x4E0B;&#x9886;&#x609F;&#x5C42;&#x6B21;&#x3001;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x88C5;&#x8F7D;&#x3001;mmap&#x3001;&#x5806;&#x90FD;&#x662F;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x201C;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;(best practice)&#x201D;&#x3002;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x5B9E;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x8D44;&#x6E90;&#xFF0C;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x6709;&#x4E24;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x3002;&#x6709;&#x8DA3;&#x7684;&#x662F;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x5C31;&#x662F;&#x7531;mmap&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x5C06;&#x6620;&#x5C04;&#x7C7B;&#x578B;&#x4F20;&#x5165;&#x533F;&#x540D;&#x7A7A;&#x95F4;(MAP_ANONYMOUS)&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C31;&#x4F1A;&#x6311;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x5206;&#x914D;&#x3002;&#x8FD9;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x804C;&#x8D23;&#x8F83;&#x591A;&#x3001;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x788E;&#x7247;&#x5316;&#x3002;&#x788E;&#x7247;&#x5316;&#x6307;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x5355;&#x6B21;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x5185;&#x4E0D;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x591A;&#x6B21;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x4E4B;&#x95F4;&#x4E0D;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#x3002;</p><p>&#x800C;&#x53E6;&#x4E00;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x804C;&#x8D23;&#x8F83;&#x5C11;&#x3001;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x8FDE;&#x7EED;&#x5316;&#xFF0C;&#x8FDE;&#x7EED;&#x5316;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x8981;&#x5148;&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x201C;&#x6279;&#x53D1;&#x201D;&#x9002;&#x5F53;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x53EA;&#x8981;&#x201C;&#x6279;&#x53D1;&#x201D;&#x4E0B;&#x6765;&#x7684;&#x8D44;&#x6E90;&#x591F;&#x4F7F;&#x5C31;&#x4ECE;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#x4E2D;&#x201D;&#x96F6;&#x552E;&#x201D;&#xFF0C;&#x4E0D;&#x591F;&#x4F7F;&#x518D;&#x53E6;&#x201C;&#x6279;&#x53D1;&#x201D;&#x8D44;&#x6E90;&#xFF0C;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x5C31;&#x6210;&#x4E86;&#x4EE5;&#x8BA1;&#x7B97;&#x673A;&#x8D44;&#x6E90;&#x4F5C;&#x4E3A;&#x5546;&#x54C1;&#x7EBF;&#x4E0A;&#x7684;&#x201C;&#x8FDE;&#x9501;&#x8D85;&#x5E02;&#x201D;&#x3002;&#x8FDE;&#x7EED;&#x5316;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x9632;&#x6B62;&#x6BCF;&#x6B21;&#x201D;&#x96F6;&#x552E;&#x201D;&#x90FD;&#x8981;&#x8FDB;&#x884C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x53EA;&#x6709;&#x201C;&#x6279;&#x53D1;&#x201D;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002;&#x8FDE;&#x7EED;&#x5316;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x4ECE;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x6BB5;&#x7ED3;&#x5C3E;&#x5904;&#x5F00;&#x59CB;&#xFF0C;&#x5E76;&#x5411;&#x9AD8;&#x5730;&#x5740;&#x589E;&#x957F;&#x3002;&#x5DF2;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x4E0E;&#x672A;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x4E4B;&#x95F4;&#x7531;brk&#x6307;&#x9488;&#x533A;&#x5206;&#x3002;</p><h3 id="brk&#x6307;&#x9488;"><a href="#brk&#x6307;&#x9488;" class="headerlink" title="brk&#x6307;&#x9488;"></a>brk&#x6307;&#x9488;</h3><p>&#x201C;&#x6279;&#x53D1;&#x201D;&#x88AB;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5F62;&#x5F0F;&#x5316;&#x6210;&#x589E;&#x52A0;(increment)brk&#x6307;&#x9488;&#x3002;&#x76F4;&#x63A5;&#x8C03;&#x7528;Linux&#x63D0;&#x4F9B;&#x7684;brk&#x548C;sbrk&#x63A5;&#x53E3;&#xFF0C;&#x8FDB;&#x884C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x589E;&#x52A0;brk&#x6307;&#x9488;&#xFF0C;&#x7B49;&#x540C;&#x4E8E;&#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x8D44;&#x6E90;&#x3002;brk&#x6307;&#x9488;&#x8FD8;&#x6709;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x5C31;&#x662F;&#x5728;Linux&#x4E2D;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x5206;&#x8FA8;&#x5730;&#x5740;&#x662F;&#x5728;&#x6808;&#x4E0A;&#x8FD8;&#x662F;&#x5728;&#x5806;&#x4E0A;&#xFF0C;<a href="https://www.zhihu.com/question/29538036" target="_blank" rel="noopener">&#x8BE6;&#x7EC6;&#x70B9;&#x6211;</a>&#x3002;</p><p>glibc&#x5728;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x5C0F;&#x4E8E;128kb&#x65F6;&#x4F1A;&#x4F7F;&#x7528;&#x8FDE;&#x7EED;&#x5316;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x5927;&#x4E8E;&#x65F6;&#x4F7F;&#x7528;&#x788E;&#x7247;&#x5316;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x3002;&#x4E0B;&#x9762;&#x4E3B;&#x8981;&#x804A;&#x804A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x804C;&#x8D23;&#x8F83;&#x5C11;&#x7684;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x804C;&#x8D23;&#x8F83;&#x591A;&#x7684;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x6CA1;&#x6709;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x8C03;&#x7528;mmap&#x5C31;&#x597D;&#x3002;</p><h2 id="&#x5806;&#x7BA1;&#x7406;&#x5668;&#x8BBE;&#x8BA1;"><a href="#&#x5806;&#x7BA1;&#x7406;&#x5668;&#x8BBE;&#x8BA1;" class="headerlink" title="&#x5806;&#x7BA1;&#x7406;&#x5668;&#x8BBE;&#x8BA1;"></a>&#x5806;&#x7BA1;&#x7406;&#x5668;&#x8BBE;&#x8BA1;</h2><p>CRT(C Runtime Library)&#x5DF2;&#x7ECF;&#x4E3A;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x4E86;&#x5806;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x5176;&#x76F8;&#x5173;API&#x5C31;&#x662F;malloc&#x3001;calloc&#x3001;free&#x3001;realloc&#xFF0C;CRT&#x5B9E;&#x73B0;&#x7684;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x81EA;&#x7136;&#x662F;&#x9AD8;&#x6548;&#x7684;&#x3001;&#x53EF;&#x9760;&#x7684;&#xFF0C;&#x65E0;&#x9700;&#x6211;&#x4EEC;&#x518D;&#x91CD;&#x590D;&#x9020;&#x8F6E;&#x5B50;&#x3002;&#x4F46;&#x5B66;&#x4E60;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x6700;&#x597D;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x81EA;&#x884C;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;mini&#x5806;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x804A;&#x804A;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x5806;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x804A;&#x4E00;&#x804A;&#x5176;&#x80CC;&#x540E;&#x7684;&#x601D;&#x60F3;&#x3002;</p><p>&#x5728;&#x8BBE;&#x8BA1;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x660E;&#x786E;&#x8861;&#x91CF;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x662F;&#x5426;&#x9AD8;&#x6548;&#x7684;&#x6807;&#x51C6;&#x3002;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x6709;&#x4E24;&#x4E2A;&#x6807;&#x51C6;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x54CD;&#x5E94;&#x901F;&#x5EA6;(&#x541E;&#x5410;&#x7387;)&#x3001;&#x4E00;&#x4E2A;&#x662F;&#x5B58;&#x50A8;&#x5668;&#x5B58;&#x50A8;&#x771F;&#x6B63;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x7684;&#x6BD4;&#x7387;(&#x4F7F;&#x7528;&#x7387;)&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x8BBE;&#x8BA1;&#x5806;&#x7BA1;&#x7406;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x80FD;&#x4E3A;&#x4E86;&#x8282;&#x7701;&#x7A7A;&#x95F4;&#x4F7F;&#x7528;&#x8FC7;&#x4E8E;&#x590D;&#x6742;&#x7684;&#x7B97;&#x6CD5;&#x62D6;&#x6162;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#xFF0C;&#x4E0D;&#x80FD;&#x7528;&#x8FC7;&#x4E8E;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4ECE;&#x800C;&#x6062;&#x590D;&#x6027;&#x8D28;&#x5BFC;&#x81F4;&#x62D6;&#x6162;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x8FC7;&#x4E8E;&#x6D6A;&#x8D39;&#x5B58;&#x50A8;&#x5668;&#x7A7A;&#x95F4;&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8981;&#x5728;&#x8FD9;&#x4E24;&#x70B9;&#x4E4B;&#x95F4;&#x505A;trade-off&#x3002;</p><h3 id="&#x7ED3;&#x6784;&#x7EC4;&#x7EC7;"><a href="#&#x7ED3;&#x6784;&#x7EC4;&#x7EC7;" class="headerlink" title="&#x7ED3;&#x6784;&#x7EC4;&#x7EC7;"></a>&#x7ED3;&#x6784;&#x7EC4;&#x7EC7;</h3><p>&#x9996;&#x5148;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x8981;&#x610F;&#x8BC6;&#x5230;&#x7684;&#x5C31;&#x662F;&#x9664;&#x4E86;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x81F3;&#x5C11;&#x8981;&#x8BB0;&#x5F55;&#x4E0B;&#x7A7A;&#x95F4;&#x7684;&#x5927;&#x5C0F;&#x3001;&#x5360;&#x7528;&#x60C5;&#x51B5;&#x4EE5;&#x7BA1;&#x7406;&#x7A7A;&#x95F4;&#x3002;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x548C;&#x7A7A;&#x95F4;&#x7684;&#x4FE1;&#x606F;&#xFF1F;&#x5C06;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x7EC4;&#x7EC7;&#x6210;metadata&#x548C;payload&#x7684;chunk&#x5F62;&#x5F0F;&#x3002;</p><p>Unix&#x4E2D;&#x4E3A;&#x4E86;&#x8BA9;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#xFF0C;&#x5BF9;&#x5206;&#x914D;&#x7684;&#x7A7A;&#x95F4;&#x4EE5;8&#x8FDB;&#x884C;&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x8BBE;&#x8BA1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4EC5;&#x4F7F;&#x6574;&#x4F53;chunk&#x4EE5;8&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#xFF0C;&#x4E0D;&#x9700;&#x5F3A;&#x5236;metadata&#x548C;payload&#x5404;&#x81EA;&#x5BF9;&#x9F50;&#xFF0C;&#x6216;&#x8005;&#x5BF9;metadata&#x548C;payload&#x90FD;&#x5F3A;&#x5236;8&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F7F;&#x6574;&#x4F53;chunk&#x4EE5;8&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5982;&#x4F55;&#x505A;&#x5230;&#x5462;&#xFF1F;&#x901A;&#x8FC7;&#x4E0A;&#x6587;&#x7684;&#x5B57;&#x8282;&#x966A;&#x886C;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;chunk&#x63D2;&#x5165;padding&#xFF0C;&#x4F7F;chunk size&#x4E3A;8&#x7684;&#x6574;&#x6570;&#x500D;&#x3002;</p><p>&#x5F3A;&#x5236;&#x5BF9;&#x9F50;chunk&#x4EE5;&#x540E;&#xFF0C;&#x8868;&#x793A;chunk&#x5927;&#x5C0F;&#x7684;&#x5B57;&#x6BB5;&#x6700;&#x4F4E;3&#x4F4D;&#x5FC5;&#x5B9A;&#x662F;000&#xFF0C;&#x8FD9;3&#x4F4D;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x8BB0;&#x5F55;chunk&#x662F;&#x5426;&#x7A7A;&#x95F2;&#x3002;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x7EC4;&#x7EC7;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">31    .....    3 2 1 0 --------------------|  chunk size  |free ||--------------------||       payload      ||--------------------||       padding      | --------------------</code></pre><p>&#x901A;&#x8FC7;&#x6BCF;&#x4E2A;chunk&#x7684;size&#x5C31;&#x53EF;&#x4EE5;&#x6309;&#x987A;&#x8BBF;&#x95EE;chunk&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x5C31;&#x5C06;chunk&#x7EC4;&#x7EC7;&#x6210;&#x65E0;&#x9700;next&#x6307;&#x9488;&#x57DF;&#x7684;&#x94FE;&#x8868;&#x3002;</p><h3 id="&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;"><a href="#&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;" class="headerlink" title="&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;"></a>&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;</h3><p>&#x5206;&#x914D;&#xFF1A;&#x5148;&#x8981;&#x786E;&#x5B9A;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x5408;&#x7406;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5BF9;&#x9F50;&#x8BF7;&#x6C42;&#x7684;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;&#xFF0C;&#x67E5;&#x627E;&#x94FE;&#x8868;&#x4E2D;&#x662F;&#x5426;&#x6709;size&#x5408;&#x9002;&#x800C;&#x4E14;free&#x7684;chunk&#xFF0C;&#x5982;&#x679C;&#x6709;&#x76F4;&#x63A5;&#x5C06;free&#x7F6E;&#x4E3A;1&#xFF0C;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;payload&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x8981;&#x901A;&#x8FC7;sbrk&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x7A7A;&#x95F4;&#x6216;&#x7528;&#x65E9;&#x5DF2;&#x7533;&#x8BF7;&#x597D;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x6784;&#x5EFA;&#x65B0;&#x7684;chunk&#x3002;</p><p>&#x91CA;&#x653E;&#xFF1A;&#x540C;&#x6837;&#xFF0C;&#x5148;&#x786E;&#x5B9A;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x5408;&#x7406;&#x3002;&#x7136;&#x540E;&#x627E;&#x5230;chunk&#xFF0C;&#x5C06;free&#x7F6E;&#x4E3A;0&#x3002;</p><h3 id="&#x67E5;&#x627E;"><a href="#&#x67E5;&#x627E;" class="headerlink" title="&#x67E5;&#x627E;"></a>&#x67E5;&#x627E;</h3><p>&#x67E5;&#x627E;&#x6709;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x7B97;&#x6CD5;&#xFF1A;</p><ul><li>&#x9996;&#x6B21;&#x9002;&#x914D;(first fit)&#xFF1A;&#x6309;&#x987A;&#x5E8F;&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;free chunk&#x3002;</li><li>&#x4E0B;&#x4E00;&#x6B21;&#x9002;&#x914D;(next fit)&#xFF1A;&#x4ECE;&#x4E0A;&#x6B21;&#x67E5;&#x627E;&#x7ED3;&#x6784;&#x5F00;&#x59CB;&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;free chunk&#x3002;</li><li>&#x6700;&#x4F73;&#x9002;&#x914D;(best fit)&#xFF1A;&#x904D;&#x5386;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x627E;&#x5230;&#x5408;&#x9002;&#x7684;free chunk&#x3002;</li></ul><p>&#x8FD9;&#x91CC;&#x7B80;&#x5355;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x8FD9;&#x4E09;&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x9996;&#x6B21;&#x9002;&#x914D;&#x4F1A;&#x5BFC;&#x81F4;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#x7684;chunk size&#x5206;&#x5E03;&#x4E0D;&#x5747;&#x5300;&#xFF0C;&#x5C0F;size chunk&#x90FD;&#x96C6;&#x4E2D;&#x5728;&#x5934;&#x90E8;&#xFF0C;&#x5927;size chunk&#x90FD;&#x96C6;&#x4E2D;&#x5728;&#x5C3E;&#x90E8;&#xFF0C;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x4F7F;&#x7528;&#x7387;&#x8FD8;&#x4E0D;&#x9519;&#xFF0C;&#x541E;&#x5410;&#x7387;&#x7531;&#x4E8E;&#x67E5;&#x627E;&#x5927;size chunk&#x4E0D;&#x4F1A;&#x592A;&#x7406;&#x60F3;&#x3002;&#x4E0B;&#x4E00;&#x6B21;&#x9002;&#x914D;&#x4F1A;&#x4F7F;&#x6574;&#x4E2A;&#x94FE;&#x8868;&#x7684;chunk size&#x8F83;&#x4E3A;&#x5E73;&#x5747;&#xFF0C;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x4F7F;&#x7528;&#x7387;&#x4E0D;&#x5982;&#x9996;&#x6B21;&#x9002;&#x914D;&#xFF0C;&#x4F46;&#x662F;&#x541E;&#x5410;&#x7387;&#x4F1A;&#x9AD8;&#x4E8E;&#x9996;&#x6B21;&#x9002;&#x914D;&#x3002;&#x800C;&#x6700;&#x4F73;&#x9002;&#x914D;&#x6709;&#x6700;&#x597D;&#x7684;&#x4F7F;&#x7528;&#x7387;&#xFF0C;&#x6700;&#x5DEE;&#x7684;&#x541E;&#x5410;&#x7387;&#x3002;&#x7EFC;&#x5408;&#x6765;&#x770B;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x9996;&#x6B21;&#x9002;&#x914D;&#xFF0C;&#x7B80;&#x5355;&#x800C;&#x9AD8;&#x6548;&#x3002;</p><h3 id="&#x788E;&#x7247;"><a href="#&#x788E;&#x7247;" class="headerlink" title="&#x788E;&#x7247;"></a>&#x788E;&#x7247;</h3><p>&#x7136;&#x800C;&#xFF0C;&#x5149;&#x662F;&#x8FD9;&#x6837;&#x5206;&#x914D;&#x548C;&#x91CA;&#x653E;&#x4F1A;&#x9020;&#x6210;&#x5F88;&#x591A;&#x788E;&#x7247;&#x3002;&#x6BD4;&#x5982;&#x5C06;&#x4E00;&#x4E2A;&#x5927;size&#x7684;chunk&#x5206;&#x914D;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x7A7A;&#x95F4;&#x7684;&#x7533;&#x8BF7;&#x9020;&#x6210;&#x5269;&#x4F59;size&#x6D6A;&#x8D39;&#x7684;&#x5185;&#x90E8;&#x788E;&#x7247;&#xFF0C;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x5C0F;size&#x7684;chunk&#x65E0;&#x6CD5;&#x54CD;&#x5E94;&#x4E00;&#x4E2A;&#x5927;&#x7A7A;&#x95F4;&#x7684;&#x7533;&#x8BF7;&#x800C;&#x9020;&#x6210;&#x7684;&#x5916;&#x90E8;&#x788E;&#x7247;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5F15;&#x5165;&#x5BF9;chunk&#x8FDB;&#x884C;split(&#x5206;&#x5272;)&#x548C;coalesce(&#x5408;&#x5E76;)&#x3002;</p><p>split&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5F53;first fit&#x627E;&#x5230;&#x4E2A;&#x5408;&#x9002;&#x7684;chunk&#x540E;&#xFF0C;&#x53EA;&#x8981;chunk&#x8FD8;&#x6709;&#x6BD4;&#x6700;&#x5C0F;chunk&#x8FD8;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x5C31;&#x5728;&#x6B64;&#x7A7A;&#x95F4;&#x4E0A;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;free chunk&#x3002;</p><p>coalesce&#x76F8;&#x5BF9;&#x590D;&#x6742;&#x4E00;&#x70B9;&#xFF0C;coalesce&#x9700;&#x8981;&#x68C0;&#x67E5;&#x524D;&#x4E00;&#x8282;&#x70B9;&#x548C;&#x540E;&#x4E00;&#x8282;&#x70B9;&#x662F;&#x5426;free&#xFF0C;&#x5982;&#x679C;free&#x5C31;&#x5408;&#x5E76;&#x3002;&#x800C;&#x5408;&#x5E76;&#x5C31;&#x662F;&#x7D2F;&#x52A0;&#x6240;&#x9700;coalesce&#x7684;chunk size&#x7ED9;coalesce&#x4E2D;&#x9996;&#x4E2A;chunk&#x5C31;&#x884C;&#x3002;&#x590D;&#x6742;&#x7684;&#x5730;&#x65B9;&#x5728;&#xFF0C;&#x68C0;&#x67E5;&#x524D;&#x4E00;&#x8282;&#x70B9;&#x8981;&#x6C42;chunk&#x6709;&#x5FEB;&#x901F;&#x8BBF;&#x95EE;&#x524D;&#x4E00;&#x8282;&#x70B9;&#x7684;&#x80FD;&#x529B;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x4E3A;chunk metadata&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;prev&#x524D;&#x5411;&#x6307;&#x9488;&#x57DF;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x5C31;&#x662F;&#x8F6C;&#x5316;&#x4E3A;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x8FB9;&#x754C;&#x6807;&#x8BB0;&#x6CD5;(boundary tag)&#xFF0C;&#x4E3A;chunk&#x6DFB;&#x52A0;footer&#xFF0C;footer&#x5C31;&#x662F;metadata&#x7684;copy&#x3002;&#x8FD9;&#x6837;&#x6BCF;&#x6B21;chunk&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x524D;&#x4E00;&#x8282;&#x70B9;&#xFF0C;&#x53EA;&#x8981;&#x8BBF;&#x95EE;metadata&#x7684;&#x524D;4&#x5B57;&#x8282;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x5E76;&#x4E14;&#x53EA;&#x6709;free&#x7684;chunk&#x62E5;&#x6709;footer&#x5C31;&#x884C;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6240;&#x6709;chunk&#x90FD;&#x62E5;&#x6709;footer&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;&#x6DFB;&#x52A0;prev&#x589E;&#x5927;&#x4E86;&#x4F7F;&#x7528;&#x7387;&#xFF0C;&#x5219;chunk&#x7EC4;&#x7EC7;&#x66F4;&#x6539;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">31    .....    3 2 1 0 --------------------|  chunk size  |free ||--------------------||       payload      ||--------------------||       padding      ||--------------------||       footer       | --------------------</code></pre><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;metadata&#x548C;footer&#x4E3A;8&#x5B57;&#x8282;&#xFF0C;payload&#x52A0;&#x4E0A;padding&#x5927;&#x5C0F;&#x5FC5;&#x5B9A;&#x662F;8&#x7684;&#x6574;&#x6570;&#x500D;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x4E0D;&#x4F7F;&#x7528;&#x6DFB;&#x52A0;prev&#x524D;&#x5411;&#x6307;&#x9488;&#x57DF;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;&#x5728;&#x67E5;&#x627E;&#x5408;&#x9002;chunk&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x67E5;&#x627E;&#x6240;&#x6709;chunk&#xFF0C;&#x5B8C;&#x5168;&#x4E0D;&#x9700;&#x8981;&#x8FD9;&#x6837;&#x505A;&#x3002;&#x53EF;&#x4EE5;&#x4E3A;&#x6240;&#x6709;free&#x7684;chunk&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x524D;&#x4E00;&#x4E2A;free chunk&#x7684;prev&#x57DF;&#xFF0C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x540E;&#x4E00;&#x4E2A;free chunk&#x7684;next&#x57DF;&#xFF0C;&#x6765;&#x964D;&#x4F4E;&#x541E;&#x5410;&#x7387;&#xFF0C;&#x6700;&#x540E;chunk&#x7EC4;&#x7EC7;&#x66F4;&#x6539;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">31    .....    3 2 1 0 --------------------|  chunk size  |free ||--------------------||       prev         ||--------------------||       next         ||--------------------||       payload      ||--------------------||       padding      ||--------------------||       footer       | --------------------</code></pre><h3 id="&#x66F4;&#x591A;"><a href="#&#x66F4;&#x591A;" class="headerlink" title="&#x66F4;&#x591A;"></a>&#x66F4;&#x591A;</h3><p>&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x591A;&#x804A;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;CSAPP&#x548C;&#x8FD9;&#x7BC7;<a href="http://blog.codinglabs.org/articles/a-malloc-tutorial.html" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#xFF0C;&#x770B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x7167;&#x7740;<a href="http://www.inf.udec.cl/~leo/Malloc_tutorial.pdf" target="_blank" rel="noopener">&#x82F1;&#x6587;&#x539F;&#x7248;</a>&#x53BB;&#x770B;&#xFF0C;&#x6587;&#x7AE0;&#x4E2D;free&#x51FD;&#x6570;&#x4E2D;&#x7684;b-&gt;prev-&gt;prev&#x6572;&#x9519;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;b-&gt;prev-&gt;next&#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x5806;&#x7BA1;&#x7406;&#x5668;&#x8BBE;&#x8BA1;&#x65B9;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x7528;&#x4F4D;&#x56FE;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x6709;&#x8DA3;&#x7684;&#x5206;&#x79BB;&#x5B58;&#x50A8;(segregated storage)&#xFF0C;&#x8FD9;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x7EF4;&#x62A4;&#x591A;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;&#x6BCF;&#x4E2A;&#x94FE;&#x8868;&#x7684;chunk size&#x8FD1;&#x4F3C;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5C31;&#x50CF;&#x662F;&#xFF0C;&#x6309;&#x8BF7;&#x6C42;&#x7A7A;&#x95F4;&#x7684;&#x5927;&#x5C0F;&#x4F5C;&#x4E3A;&#x8BF7;&#x6C42;&#x6A21;&#x5F0F;&#x53BB;&#x5206;&#x79BB;&#x8BF7;&#x6C42;&#xFF0C;&#x6BCF;&#x4E2A;&#x94FE;&#x8868;&#x53EA;&#x5E94;&#x5BF9;&#x4E00;&#x79CD;&#x8BF7;&#x6C42;&#x6A21;&#x5F0F;&#x3002;</p><h2 id="ABI-&#x5E94;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x63A5;&#x53E3;"><a href="#ABI-&#x5E94;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x63A5;&#x53E3;" class="headerlink" title="ABI(&#x5E94;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x63A5;&#x53E3;)"></a>ABI(&#x5E94;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x63A5;&#x53E3;)</h2><p>ABI&#x5168;&#x540D;&#x662F;application binary interface&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5B83;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x201C;&#x534F;&#x8BAE;&#x201D;&#xFF0C;&#x201C;&#x534F;&#x8BAE;&#x201D;&#x7684;&#x4E3B;&#x4F53;&#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x3001;&#x4E00;&#x79CD;&#x662F;&#x627F;&#x8F7D;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x4E0E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x9075;&#x5B88;&#x540C;&#x6837;&#x7684;&#x201C;&#x534F;&#x8BAE;&#x201D;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x4E0E;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x4E4B;&#x95F4;&#x4E5F;&#x53EF;&#x4EE5;&#x9075;&#x5B88;&#x540C;&#x6837;&#x7684;&#x201C;&#x534F;&#x8BAE;&#x201D;&#x3002;&#x53EA;&#x8981;&#x751F;&#x6210;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x9075;&#x5B88;&#x8FD9;&#x4E2A;&#x201C;&#x534F;&#x8BAE;&#x201D;&#xFF0C;&#x4EFB;&#x4F55;&#x540C;&#x6837;&#x9075;&#x5B88;&#x8FD9;&#x4E2A;&#x201C;&#x534F;&#x8BAE;&#x201D;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x90FD;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#xFF0C;&#x9075;&#x5B88;&#x540C;&#x6837;&#x201C;&#x534F;&#x8BAE;&#x201D;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x4E00;&#x8D77;&#x8FD0;&#x884C;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x9700;&#x8981;&#x9075;&#x5B88;&#x540C;&#x6837;&#x7684;&#x201C;&#x534F;&#x8BAE;&#x201D;&#x624D;&#x53EF;&#x4EE5;&#x4E00;&#x8D77;&#x8FD0;&#x884C;&#x3002;ABI&#x5305;&#x62EC;&#xFF1A;</p><ul><li>&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5927;&#x5C0F;&#x3001;&#x5E03;&#x5C40;&#x4EE5;&#x53CA;&#x4E0A;&#x6587;&#x6240;&#x63D0;&#x5230;&#x7684;&#x5BF9;&#x9F50;&#x3002;&#x8FD8;&#x5305;&#x62EC;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x8BED;&#x8A00;&#x4E2D;&#x6BD4;&#x5982;C++&#x4E2D;&#x5BF9;&#x8C61;&#x7684;&#x591A;&#x91CD;&#x7EE7;&#x627F;&#x5E03;&#x5C40;&#x3002;</li><li>&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684;Calling Convention&#x3002;</li><li>&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002;</li><li>&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x683C;&#x5F0F;&#x3001;&#x7CFB;&#x7EDF;&#x5E93;&#x683C;&#x5F0F;&#x3002;</li></ul><p>&#x800C;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x8981;&#x9075;&#x5B88;ABI&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x5DE5;&#x4F5C;&#x5728;&#x6C47;&#x7F16;&#x3001;&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x7528;&#x540C;&#x6837;&#x7684;&#x6307;&#x4EE4;&#x96C6;&#x3001;&#x4F7F;&#x7528;&#x540C;&#x6837;&#x7684;&#x7B26;&#x53F7;&#x4FEE;&#x9970;&#xFF0C;&#x66F4;&#x591A;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;<a href="http://www.oracle.com/technetwork/cn/articles/servers-storage-dev/stablecplusplusabi-333927-zhs.html#c_abi" target="_blank" rel="noopener">&#x53C2;&#x89C1;</a>&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5C31;&#x5F53;&#x662F;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x5F69;&#x86CB;&#x5427;O(&#x2229;_&#x2229;)O</p><h2 id="&#x5B57;&#x8282;&#x5E8F;"><a href="#&#x5B57;&#x8282;&#x5E8F;" class="headerlink" title="&#x5B57;&#x8282;&#x5E8F;"></a>&#x5B57;&#x8282;&#x5E8F;</h2><p>&#x5B57;&#x8282;&#x5E8F;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;&#x591A;&#x5B57;&#x8282;&#x6570;&#x636E;(&#x6BD4;&#x5982;&#x8BF4;int)&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x6307;&#x7684;&#x662F;&#x5B57;&#x8282;&#x4E0E;&#x5B57;&#x8282;&#x4E4B;&#x95F4;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5355;&#x4E2A;&#x5B57;&#x8282;&#x5185;&#x7684;&#x987A;&#x5E8F;&#x3002;&#x5B57;&#x8282;&#x5E8F;&#x5206;&#x4E3A;&#x5927;&#x7AEF;&#x6CD5;(big endian)&#x548C;&#x5C0F;&#x7AEF;&#x6CD5;(little endian)&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5927;&#x7AEF;&#x6CD5;&#x9AD8;&#x4F4D;&#x5728;&#x524D;&#xFF0C;&#x5C0F;&#x7AEF;&#x6CD5;&#x4F4E;&#x4F4D;&#x5728;&#x524D;&#x3002;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;int&#x7C7B;&#x578B;16&#x8FDB;&#x5236;&#x6570;&#x636E;&#x4E3A;0x1234567&#xFF0C;&#x5927;&#x7AEF;&#x6CD5;&#x548C;&#x5C0F;&#x7AEF;&#x6CD5;&#x5206;&#x522B;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">01 23 45 67 -- big endian67 45 23 01 -- little endian</code></pre><p>&#x5927;&#x7AEF;&#x6CD5;&#x548C;&#x5C0F;&#x7AEF;&#x6CD5;&#x6CA1;&#x6709;&#x660E;&#x663E;&#x7684;&#x4F18;&#x52A3;&#xFF0C;&#x53EA;&#x8981;&#x7EDF;&#x4E00;&#x4F7F;&#x7528;&#x4E00;&#x79CD;&#x5C31;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x540C;&#x5B57;&#x8282;&#x5E8F;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x4F20;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x7F51;&#x7EDC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5C31;&#x8981;&#x505A;&#x597D;&#x8F6C;&#x6362;&#xFF0C;&#x5C06;&#x56DB;&#x5B57;&#x8282;&#x5927;&#x7AEF;&#x6CD5;&#x8F6C;&#x6362;&#x4E3A;&#x5C0F;&#x7AEF;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">static unsigned int swap_bigendian_to_littleendian_Four_Byte(unsigned int value) {    return (unsigned int)((value &amp; 0x000000FF) &lt;&lt; 24)       | (unsigned int)((value &amp; 0x0000FF00) &lt;&lt; 16)      | (unsigned int)((value &amp; 0x00FF0000) &lt;&lt; 8)       | (unsigned int)((value &amp; 0xFF000000) &gt;&gt; 24);}</code></pre><p>&#x66F4;&#x591A;&#x5B57;&#x8282;&#x5E8F;&#x95EE;&#x9898;&#x63A8;&#x8350;&#x8FD9;&#x7BC7;<a href="http://www.ruanyifeng.com/blog/2016/11/byte-order.html" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#x3002;</p><h2 id="&#x63A8;&#x8350;&#x6587;&#x7AE0;"><a href="#&#x63A8;&#x8350;&#x6587;&#x7AE0;" class="headerlink" title="&#x63A8;&#x8350;&#x6587;&#x7AE0;"></a>&#x63A8;&#x8350;&#x6587;&#x7AE0;</h2><p>&#x5B9E;&#x7528;Calling Convention <a href="http://blog.cnbang.net/tech/3219/" target="_blank" rel="noopener">http://blog.cnbang.net/tech/3219/</a></p><p>&#x5B57;&#x8282;&#x5BF9;&#x9F50;(&#x4E00;) <a href="http://sysfork.com/post/about-cpp-alignment/" target="_blank" rel="noopener">http://sysfork.com/post/about-cpp-alignment/</a></p><p>&#x5B57;&#x8282;&#x5BF9;&#x9F50;(&#x4E8C;) <a href="http://opass.logdown.com/posts/743054-about-memory-alignment" target="_blank" rel="noopener">http://opass.logdown.com/posts/743054-about-memory-alignment</a></p>]]></content>
      
      <categories>
          
          <category> 计算机体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机体系-进程与虚拟存储器</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x7AE0;&#x7684;&#x4E3B;&#x89D2;&#x662F;&#x8FDB;&#x7A0B;&#x4E0E;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#xFF0C;&#x5176;&#x4ED6;&#x8054;&#x5408;&#x4E3B;&#x6F14;&#x6709;&#x88C5;&#x8F7D;&#x3001;&#x865A;&#x62DF;&#x5730;&#x5740;&#x3001;&#x7269;&#x7406;&#x5730;&#x5740;&#x3001;&#x9875;&#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x8BA1;&#x7B97;&#x673A;&#x5143;&#x7D20;&#x4E92;&#x76F8;&#x534F;&#x4F5C;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x4F53;&#x7CFB;&#x3002;</p><a id="more"></a><h2 id="&#x88C5;&#x8F7D;"><a href="#&#x88C5;&#x8F7D;" class="headerlink" title="&#x88C5;&#x8F7D;"></a>&#x88C5;&#x8F7D;</h2><p>&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5176;&#x6570;&#x636E;&#x548C;&#x6307;&#x4EE4;&#x90FD;&#x8981;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x88C5;&#x8F7D;&#x5C06;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x8F7D;&#x5165;&#x5185;&#x5B58;&#xFF0C;&#x800C;&#x8FD9;&#x5E55;&#x540E;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8981;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x4E0E;&#x7A0B;&#x5E8F;&#x5BF9;&#x5E94;&#x7684;&#x8FDB;&#x7A0B;(&#x4EC5;&#x521B;&#x7ACB;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x4F46;&#x8FD8;&#x672A;&#x5206;&#x914D;&#xFF0C;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x66F4;&#x6CA1;&#x6709;&#x5206;&#x914D;&#x4E86;)&#x3002;</p><h2 id="&#x8FDB;&#x7A0B;-Process"><a href="#&#x8FDB;&#x7A0B;-Process" class="headerlink" title="&#x8FDB;&#x7A0B;(Process)"></a>&#x8FDB;&#x7A0B;(Process)</h2><p>&#x4E3B;&#x65E8;&#x5728;&#x4E3A;&#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;<strong><em>&#x5355;&#x4E00;&#x7684;&#x73AF;&#x5883;</em></strong>&#xFF0C;&#x8FD9;&#x4E2A;<strong><em>&#x5355;&#x4E00;&#x7684;&#x73AF;&#x5883;</em></strong>&#x8BA9;&#x7A0B;&#x5E8F;&#x597D;&#x597D;&#x6267;&#x884C;&#x5C31;&#x597D;&#xFF0C;&#x4E0D;&#x8981;&#x7BA1;&#x73AF;&#x5883;&#x5916;&#x7684;&#x4E8B;&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x73AF;&#x5883;&#x5305;&#x62EC;CPU&#x548C;&#x5185;&#x5B58;&#x3002;CPU&#x6307;&#x7684;&#x5C31;&#x662F;&#x8FDB;&#x7A0B;&#x5728;&#x5360;&#x7528;CPU&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9020;&#x6210;&#x4E86;&#x6CA1;&#x6709;&#x522B;&#x7684;&#x8FDB;&#x7A0B;&#x5B58;&#x5728;&#x7684;&#x5047;&#x8C61;&#xFF0C;&#x5373;&#x8FDB;&#x7A0B;&#x662F;&#x72EC;&#x5360;CPU&#x7684;&#x3002;&#x5185;&#x5B58;&#x6307;&#x7684;&#x662F;&#x8FDB;&#x7A0B;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x76F8;&#x4E92;&#x9694;&#x79BB;&#xFF0C;&#x8FDB;&#x7A0B;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x5230;&#x5176;&#x4ED6;&#x8FDB;&#x7A0B;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x602A;&#x4E0D;&#x5F97;&#x8BF4;&#xFF0C;&#x8981;&#x7406;&#x89E3;&#x8FDB;&#x7A0B;&#xFF0C;&#x80FD;&#x7406;&#x89E3;&#x5230;<strong><em>&#x8FDB;&#x7A0B;&#x662F;CPU&#x7684;&#x62BD;&#x8C61;</em></strong>&#x5C31;&#x5230;&#x70B9;&#x4E0A;&#x4E86;&#x3002;</p><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8FDB;&#x7A0B;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x8FDB;&#x7A0B;&#x201C;&#x5B9E;&#x9645;&#x201D;&#x7684;&#x6837;&#x5B50;&#x3002;</p><h3 id="Linux&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;"><a href="#Linux&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;" class="headerlink" title="Linux&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;"></a>Linux&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;</h3><p>Linux&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><pre><code class="lang-c">  &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;       high |kernel space         |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |       |stack                |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |           |.....                |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |dynamic libraries    |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |.....                |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |heap                 | |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |.....                |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |R/W .data .bss       |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |R .text .rodata .init|   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; | |reserved             |   |&#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |    low</code></pre><p>&#x6700;&#x9AD8;&#x5730;&#x5740;&#x5148;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x3002;&#x7136;&#x540E;&#x662F;&#x6808;&#xFF0C;&#x6808;&#x5E95;&#x90E8;&#x653E;&#x7F6E;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x548C;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#xFF0C;&#x6BD4;&#x5982;main&#x51FD;&#x6570;&#x4E2D;&#x7684;argc&#x548C;argv&#xFF0C;&#x5206;&#x522B;&#x4EE3;&#x8868;&#x547D;&#x4EE4;&#x884C;&#x7B26;&#x53F7;&#x548C;&#x6570;&#x91CF;&#xFF0C;&#x5C31;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#x3002;&#x7136;&#x540E;&#x662F;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x7A7A;&#x95F4;&#x3002;&#x7136;&#x540E;&#x662F;&#x5806;&#x3002;&#x7136;&#x540E;&#x662F;&#x53EF;&#x8BFB;&#x5199;&#x7684;.data&#x548C;.bss&#xFF0C;&#x5DF2;&#x521D;&#x59CB;&#x5316;&#x548C;&#x672A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x6570;&#x636E;&#x6BB5;&#x3002;&#x7136;&#x540E;&#x662F;&#x53EA;&#x53EF;&#x8BFB;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x3001;&#x53EF;&#x8BFB;&#x6570;&#x636E;&#x6BB5;&#x3001;&#x521D;&#x59CB;&#x5316;&#x6BB5;&#x3002;&#x6700;&#x540E;&#x662F;&#x4FDD;&#x7559;&#x6BB5;&#xFF0C;&#x4FDD;&#x7559;&#x6BB5;&#x7A7A;&#x95F4;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x7981;&#x6B62;&#x8BBF;&#x95EE;&#x7684;&#x65E0;&#x6548;&#x7A7A;&#x95F4;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x7A7A;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;0x00&#xFF0C;&#x5C31;&#x5C5E;&#x4E8E;&#x4FDD;&#x7559;&#x6BB5;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6808;&#x662F;&#x5411;&#x4F4E;&#x5730;&#x5740;&#x65B9;&#x5411;&#x589E;&#x957F;&#xFF0C;&#x5806;&#x662F;&#x5411;&#x9AD8;&#x5730;&#x5740;&#x65B9;&#x5411;&#x589E;&#x957F;&#x3002;&#x8D8A;&#x5F80;&#x9AD8;&#x5730;&#x5740;&#xFF0C;&#x8D8A;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7A7A;&#x95F4;&#xFF0C;&#x9664;&#x4E86;&#x4FDD;&#x7559;&#x7A7A;&#x95F4;&#xFF0C;&#x8D8A;&#x5F80;&#x4F4E;&#x5730;&#x5740;&#x8D8A;&#x662F;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x3002;</p><h2 id="&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;-Virtual-Memory"><a href="#&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;-Virtual-Memory" class="headerlink" title="&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;(Virtual-Memory)"></a>&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;(Virtual-Memory)</h2><p>&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x53C8;&#x88AB;&#x8BD1;&#x4F5C;&#x865A;&#x62DF;&#x5185;&#x5B58;&#xFF0C;CSAPP&#x4E2D;&#x88AB;&#x8BD1;&#x4F5C;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;(&#x6211;&#x66F4;&#x52A0;&#x504F;&#x5411;&#x540E;&#x8005;)&#x3002;&#x5B83;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x8BBF;&#x95EE;&#x5B58;&#x50A8;&#x5668;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x4E2D;&#x626E;&#x6F14;&#x4E86;&#x4E3E;&#x91CD;&#x82E5;&#x8F7B;&#x7684;&#x89D2;&#x8272;&#x3002;&#x5B83;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;</p><ul><li>&#x5C06;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x62BD;&#x8C61;&#x6210;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x91CC;&#x6307;&#x7684;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E13;&#x6307;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x7A7A;&#x95F4;&#x3002;</li><li>&#x7BA1;&#x7406;&#x5B58;&#x50A8;&#x5668;&#x4F53;&#x7CFB;&#xFF0C;&#x5305;&#x62EC;&#x5185;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x3002;</li></ul><p>&#x867D;&#x7136;&#x8FD9;&#x4E24;&#x4EF6;&#x4E8B;&#x4E92;&#x76F8;&#x4E4B;&#x95F4;&#x85D5;&#x65AD;&#x4E1D;&#x8FDE;&#xFF0C;&#x4F46;&#x54B1;&#x4EEC;&#x8FD8;&#x662F;&#x5C3D;&#x91CF;&#x4E00;&#x4EF6;&#x4E8B;&#x4E00;&#x4EF6;&#x4E8B;&#x6765;&#x804A;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x70B9;&#xFF0C;&#x5C06;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x62BD;&#x8C61;&#x6210;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x3002;&#x6211;&#x4EEC;&#x5E73;&#x65F6;&#x5199;&#x7A0B;&#x5E8F;&#x5305;&#x62EC;&#x8FDB;&#x7A0B;&#x8BBF;&#x95EE;&#x7684;&#x90FD;&#x662F;&#x865A;&#x62DF;&#x5730;&#x5740;&#xFF0C;&#x800C;CPU&#x8BBF;&#x95EE;&#x7684;&#x624D;&#x662F;&#x7269;&#x7406;&#x5730;&#x5740;&#x3002;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5411;&#x7528;&#x6237;&#x5C06;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x62BD;&#x8C61;&#x6210;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x5462;&#xFF1F;</p><ul><li><strong><em>&#x89E3;&#x653E;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x7684;&#x5B58;&#x50A8;&#x7BA1;&#x7406;&#x3002;</em></strong>&#x8FD9;&#x6837;&#x4E00;&#x6765;&#xFF0C;&#x5185;&#x5B58;&#x5206;&#x914D;&#x7684;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x548C;&#x5176;&#x5206;&#x914D;&#x7684;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x6BEB;&#x65E0;&#x5173;&#x8054;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6570;&#x636E;&#x88AB;&#x5206;&#x914D;&#x7684;&#x5730;&#x5740;&#x4E0E;&#x903B;&#x8F91;&#x4E0A;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x6BEB;&#x65E0;&#x5173;&#x7CFB;&#x3002;</li><li><strong><em>&#x63D0;&#x4F9B;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x9694;&#x79BB;&#x3002;</em></strong>&#x5982;&#x679C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7269;&#x7406;&#x5730;&#x5740;&#xFF0C;&#x662F;&#x4E0D;&#x53EF;&#x80FD;&#x7528;&#x786C;&#x4EF6;&#x624B;&#x6BB5;&#x963B;&#x6B62;&#x8FDB;&#x7A0B;&#x8BBF;&#x95EE;&#x67D0;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x3002;&#x800C;&#x4F7F;&#x7528;&#x865A;&#x62DF;&#x5730;&#x5740;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x4FA6;&#x6D4B;&#x51FA;&#x8FDB;&#x7A0B;&#x8BBF;&#x95EE;&#x5730;&#x5740;&#x662F;&#x5426;&#x5408;&#x6CD5;&#xFF0C;&#x662F;&#x5426;&#x8D8A;&#x754C;&#x3002;</li><li><strong><em>&#x591A;&#x4E2A;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x5730;&#x5740;&#x53EF;&#x4EE5;&#x6620;&#x5C04;&#x540C;&#x4E00;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x5730;&#x5740;&#x3002;</em></strong>&#x8FD9;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x4F7F;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#x5E93;&#x5171;&#x4EAB;&#x7684;&#x672C;&#x8D28;&#x3002;</li><li><strong><em>&#x7B80;&#x5316;&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#x5206;&#x914D;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002;</em></strong>&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7269;&#x7406;&#x5730;&#x5740;&#xFF0C;&#x94FE;&#x63A5;&#x9636;&#x6BB5;&#x4EE3;&#x7801;&#x90FD;&#x8FD8;&#x672A;&#x8F7D;&#x5165;&#x5185;&#x5B58;&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x5206;&#x914D;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002;&#x800C;&#x4F7F;&#x7528;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x5C06;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x9694;&#x79BB;&#x540E;&#xFF0C;&#x76F4;&#x63A5;&#x5206;&#x914D;&#x56FA;&#x5B9A;&#x5730;&#x5740;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#xFF0C;.text&#x6BB5;&#x88AB;&#x5206;&#x914D;&#x5230;0x08048000(&#x5BF9;&#x4E8E;32&#x4F4D;)&#x6216;0x400000(&#x5BF9;&#x4E8E;64&#x4F4D;)&#x3002;</li></ul><p><strong><em>&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x94FE;&#x63A5;&#x3001;&#x88C5;&#x8F7D;&#x3001;&#x8FDB;&#x7A0B;&#x3001;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x4E4B;&#x95F4;&#x73AF;&#x73AF;&#x76F8;&#x6263;&#xFF0C;&#x4E00;&#x540C;&#x652F;&#x6491;&#x8D77;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x3002;</em></strong></p><p>&#x7B2C;&#x4E8C;&#x70B9;&#xFF0C;&#x7BA1;&#x7406;&#x5B58;&#x50A8;&#x5668;&#x4F53;&#x7CFB;&#x3002;</p><p>&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7BA1;&#x7406;&#x5B58;&#x50A8;&#x5668;&#x4F53;&#x7CFB;&#x53EA;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x601D;&#x60F3;&#xFF0C;&#x5185;&#x5B58;&#x662F;&#x78C1;&#x76D8;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x4F53;&#x7CFB;&#x4E2D;&#xFF0C;&#x9AD8;&#x4E00;&#x7EA7;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x5FC5;&#x5B9A;&#x662F;&#x4F4E;&#x4E00;&#x7EA7;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x800C;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x5212;&#x5206;&#x9875;&#x6765;&#x7BA1;&#x7406;&#x5185;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x6784;&#x6210;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x4F53;&#x7CFB;&#x3002;</p><h3 id="&#x9875;&#xFF08;Page&#xFF09;"><a href="#&#x9875;&#xFF08;Page&#xFF09;" class="headerlink" title="&#x9875;&#xFF08;Page&#xFF09;"></a>&#x9875;&#xFF08;Page&#xFF09;</h3><p>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5206;&#x9875;&#x3002;&#x5047;&#x8BBE;&#xFF0C;&#x73B0;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x8981;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x800C;&#x5185;&#x5B58;&#x4E2D;&#x5DF2;&#x7ECF;&#x88AB;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x5360;&#x636E;&#xFF0C;&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#x4E86;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x53EA;&#x80FD;&#x5C06;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x7F6E;&#x6362;&#x5230;&#x78C1;&#x76D8;&#x4E0A;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8981;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x4ECE;&#x78C1;&#x76D8;&#x7F6E;&#x6362;&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x6765;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002;&#x82E5;&#x662F;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x5360;&#x7684;&#x7A7A;&#x95F4;&#x5F88;&#x5927;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;1/2&#x5185;&#x5B58;&#x5927;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x73B0;&#x5728;CPU&#x53C8;&#x8981;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#x6267;&#x884C;&#x3002;&#x5185;&#x5B58;&#x5C31;&#x8981;&#x4E00;&#x76F4;&#x7F6E;&#x6362;1/2&#x5927;&#x5C0F;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x53EF;&#x60F3;&#x800C;&#x77E5;&#x7A0B;&#x5E8F;&#x5C31;&#x4E0D;&#x8981;&#x6267;&#x884C;&#x4E86;&#xFF0C;&#x4E00;&#x76F4;&#x7F6E;&#x6362;&#x73A9;&#x5427;&#xFF0C;&#x8FD9;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5C31;&#x662F;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x6548;&#x7387;&#x4F4E;&#x4E0B;&#x3002;</p><p>&#x8FD9;&#x65F6;&#x6211;&#x4EEC;&#x518D;&#x91CD;&#x65B0;&#x601D;&#x8003;&#x4E00;&#x4E0B;&#xFF0C;&#x6839;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x90FD;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x6267;&#x884C;&#x7684;&#x90A3;&#x90E8;&#x5206;&#x5728;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5F88;&#x81EA;&#x7136;&#x7684;&#x5C06;&#x7A0B;&#x5E8F;&#x51CF;&#x5C0F;&#x7C92;&#x5EA6;&#xFF0C;&#x5212;&#x5206;&#x56FA;&#x5B9A;&#x5730;&#x5927;&#x5C0F;&#x6765;&#x7F6E;&#x6362;&#x7A7A;&#x95F4;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x63D0;&#x5347;&#x4E86;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x6548;&#x7387;&#x3002;&#x66F4;&#x522B;&#x8BF4;&#xFF0C;&#x57FA;&#x4E8E;<strong><em>&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;</em></strong>&#x8FD9;&#x4E2A;&#x9875;&#x7684;&#x5212;&#x5206;&#x65B9;&#x5F0F;&#x8FD8;&#x5F88;&#x9AD8;&#x6548;&#x5462;&#x3002;</p><h3 id="&#x9875;&#x7684;&#x5C5E;&#x6027;&#x3001;&#x9875;&#x8868;-Page-Table"><a href="#&#x9875;&#x7684;&#x5C5E;&#x6027;&#x3001;&#x9875;&#x8868;-Page-Table" class="headerlink" title="&#x9875;&#x7684;&#x5C5E;&#x6027;&#x3001;&#x9875;&#x8868;(Page-Table)"></a>&#x9875;&#x7684;&#x5C5E;&#x6027;&#x3001;&#x9875;&#x8868;(Page-Table)</h3><p>&#x4ECE;&#x9875;&#x5F00;&#x59CB;&#xFF0C;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x505A;&#x7684;&#x8FD9;&#x4E24;&#x4EF6;&#x4E8B;&#x76F8;&#x8FDE;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x4F1A;&#x6162;&#x6162;&#x5448;&#x73B0;&#x51FA;&#x6765;&#x3002;&#x5728;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E2D;&#x5212;&#x5206;&#x597D;&#x4E86;&#x9875;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E2D;&#x4E5F;&#x8981;&#x5212;&#x5206;&#x597D;&#x9875;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x3002;&#x88AB;&#x5212;&#x5206;&#x597D;&#x7684;&#x9875;&#x53EF;&#x4EE5;<strong><em>&#x672A;&#x88AB;&#x5206;&#x914D;&#x3001;&#x5DF2;&#x5206;&#x914D;&#x3001;&#x5DF2;&#x7F13;&#x5B58;</em></strong>&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x6210;&#x9875;&#x7684;&#x4E00;&#x4E2A;<strong><em>&#x5C5E;&#x6027;</em></strong>&#x3002;&#x9875;&#x9762;&#x672A;&#x88AB;&#x5206;&#x914D;&#xFF0C;&#x5C31;&#x662F;&#x9875;&#x9762;&#x8FD8;&#x672A;&#x5173;&#x8054;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x9875;&#x9762;&#x8FD8;&#x672A;&#x88AB;&#x7528;&#x5230;&#x3002;&#x9875;&#x9762;&#x5DF2;&#x88AB;&#x5206;&#x914D;&#x5C31;&#x662F;&#x5DF2;&#x88AB;&#x5173;&#x8054;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x6570;&#x636E;&#x8FD8;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#xFF0C;&#x672A;&#x88AB;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x865A;&#x62DF;&#x9875;(Virtual Page)&#x7279;&#x6307;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x9875;&#x3002;&#x800C;&#x9875;&#x5DF2;&#x88AB;&#x7F13;&#x5B58;&#xFF0C;&#x5C31;&#x662F;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x88AB;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7269;&#x7406;&#x9875;(Physcial Page)&#x7279;&#x6307;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x9875;&#x3002;</p><p>&#x9875;&#x8868;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x8BB0;&#x5F55;&#x9875;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x9875;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E0E;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x9875;&#x8868;&#x7528;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x4F4D;(valid bit)&#x5C31;&#x8BB0;&#x5F55;&#x4E86;&#x9875;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x6709;&#x6548;&#x4F4D;&#x4E3A;1&#x4EE3;&#x8868;&#x9875;&#x5DF2;&#x88AB;&#x7F13;&#x5B58;&#xFF0C;&#x6709;&#x6548;&#x4F4D;&#x4E3A;0&#x4E14;&#x9875;&#x8868;&#x9879;&#x4E0D;&#x4E3A;&#x7A7A;&#x4EE3;&#x8868;&#x9875;&#x5DF2;&#x88AB;&#x7F13;&#x5B58;&#xFF0C;&#x6709;&#x6548;&#x4F4D;&#x4E3A;0&#x4E14;&#x9875;&#x8868;&#x9879;&#x4E3A;&#x7A7A;&#x4EE3;&#x8868;&#x9875;&#x672A;&#x88AB;&#x5206;&#x914D;&#x3002;&#x5BF9;&#x4E8E;&#x5DF2;&#x88AB;&#x7F13;&#x5B58;&#x7684;&#x9875;&#xFF0C;&#x9875;&#x7684;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x76F4;&#x63A5;&#x6620;&#x5C04;&#x5230;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="&#x7F3A;&#x9875;&#x4E2D;&#x65AD;-Page-Fault"><a href="#&#x7F3A;&#x9875;&#x4E2D;&#x65AD;-Page-Fault" class="headerlink" title="&#x7F3A;&#x9875;&#x4E2D;&#x65AD;(Page-Fault)"></a>&#x7F3A;&#x9875;&#x4E2D;&#x65AD;(Page-Fault)</h3><p>&#x5C31;&#x50CF;&#x4E0A;&#x9762;&#x5185;&#x5B58;&#x4E2D;&#x6EE1;&#x4E86;&#x540E;&#x6267;&#x884C;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x7A0B;&#x5E8F;&#x731C;&#x6D4B;&#x7684;&#x4E00;&#x6837;&#xFF0C;&#x5F53;&#x53BB;&#x9875;&#x8868;&#x4E2D;&#x67E5;&#x627E;&#x5230;&#x6240;&#x9700;&#x9875;&#x9762;&#x672A;&#x88AB;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4F1A;&#x53D1;&#x8D77;&#x786C;&#x4EF6;&#x4E2D;&#x65AD;&#xFF0C;&#x5C06;&#x6240;&#x9700;&#x9875;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;&#x53D1;&#x8D77;&#x9875;&#x8868;&#x67E5;&#x627E;&#x52A8;&#x4F5C;&#xFF0C;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;&#x5982;&#x679C;&#x5185;&#x5B58;&#x4E0D;&#x8DB3;&#xFF0C;&#x8FD9;&#x65F6;&#x8FD8;&#x8981;&#x6DD8;&#x6C70;&#x9875;&#x9762;&#x4EE5;&#x91CA;&#x653E;&#x7A7A;&#x95F4;&#x3002;&#x6DD8;&#x6C70;&#x9875;&#x9762;&#x6709;&#x591A;&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x7EC6;&#x804A;&#x4E86;&#x3002;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x5F88;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x4E00;&#x70B9;&#x662F;&#xFF0C;&#x7BA1;&#x7406;&#x5B58;&#x50A8;&#x5668;&#x7CFB;&#x7EDF;&#x65F6;&#xFF0C;<strong><em>&#x9875;&#x9762;&#x4ECE;&#x4E0D;&#x4F1A;&#x4E3B;&#x52A8;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x4E2D;</em></strong>&#xFF0C;&#x5C31;&#x6709;&#x88AB;&#x7528;&#x5230;&#x65F6;&#xFF0C;&#x624D;&#x4F1A;<strong><em>&#x901A;&#x8FC7;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;</em></strong>&#x3002;</p><p>&#x800C;malloc&#x548C;calloc&#x5C31;&#x662F;&#x4ECE;&#x4FA7;&#x9762;&#x8BC1;&#x660E;&#x4E86;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;malloc&#x548C;calloc&#x53EA;&#x662F;&#x63D0;&#x4F9B;&#x4E00;&#x5757;&#x7EBF;&#x6027;&#x7684;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x800C;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E0A;&#x6CA1;&#x505A;&#x4EFB;&#x4F55;&#x5206;&#x914D;&#x3002;&#x7B49;&#x5230;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4F1A;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#xFF0C;&#x5B9E;&#x9645;&#x5206;&#x914D;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="Copy-On-Write"><a href="#Copy-On-Write" class="headerlink" title="Copy-On-Write"></a>Copy-On-Write</h3><p>&#x9664;&#x4E86;malloc&#x548C;calloc&#xFF0C;&#x8FDB;&#x7A0B;&#x7684;Copy-On-Write&#x4E5F;&#x4E0E;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x606F;&#x606F;&#x76F8;&#x5173;&#x3002;fork&#x4EA7;&#x751F;&#x5B50;&#x8FDB;&#x7A0B;&#x540E;&#xFF0C;&#x5B50;&#x3001;&#x7236;&#x8FDB;&#x7A0B;&#x62E5;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#xFF0C;&#x4F46;&#x662F;&#x6620;&#x5C04;&#x540C;&#x4E00;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x3002;&#x5E76;&#x4E14;&#x5B50;&#x3001;&#x7236;&#x8FDB;&#x7A0B;&#x90FD;&#x5BF9;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x53EA;&#x6709;&#x53EA;&#x8BFB;&#x6743;&#x9650;&#xFF0C;&#x7B49;&#x5230;&#x5B50;&#x8FDB;&#x7A0B;&#x6216;&#x8005;&#x7236;&#x8FDB;&#x7A0B;&#x8981;&#x4FEE;&#x6539;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;&#x65E0;&#x6743;&#x9650;&#x7684;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x624D;&#x5C06;&#x771F;&#x6B63;&#x62F7;&#x8D1D;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#xFF0C;&#x4F7F;&#x5B50;&#x3001;&#x7236;&#x8FDB;&#x7A0B;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x3002; &#x8FD9;&#x5C31;&#x662F;Copy-On-Write&#xFF0C;write lead to copy&#x3002;</p><h3 id="&#x518D;&#x770B;&#x88C5;&#x8F7D;"><a href="#&#x518D;&#x770B;&#x88C5;&#x8F7D;" class="headerlink" title="&#x518D;&#x770B;&#x88C5;&#x8F7D;"></a>&#x518D;&#x770B;&#x88C5;&#x8F7D;</h3><p>&#x6587;&#x7AE0;&#x5F00;&#x5934;&#x804A;&#x88C5;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5FFD;&#x7565;&#x4E86;&#x5982;&#x4F55;&#x771F;&#x6B63;&#x7684;&#x201C;&#x8F7D;&#x5165;&#x201D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;&#x5728;&#x804A;&#x8FC7;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x540E;&#xFF0C;&#x518D;&#x6765;&#x770B;&#x770B;&#x88C5;&#x8F7D;&#x3002;&#x56E0;&#x4E3A;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#xFF0C;&#x6781;&#x5927;&#x7684;&#x7B80;&#x5316;&#x4E86;&#x88C5;&#x8F7D;&#x3002;&#x88C5;&#x8F7D;&#x4E0D;&#x9700;&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x7684;&#x663E;&#x5F0F;&#x6570;&#x636E;IO&#xFF0C;&#x5168;&#x90E8;&#x4EA4;&#x7ED9;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x6765;&#x771F;&#x6B63;&#x7684;&#x201C;&#x8F7D;&#x5165;&#x201D;&#x3002;&#x88C5;&#x8F7D;&#x4E0D;&#x7528;&#x5C06;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7F13;&#x5B58;&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x800C;&#x662F;&#x7B49;&#x5230;&#x6307;&#x4EE4;&#x8DD1;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#x65E0;&#x7F13;&#x5B58;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x89E6;&#x53D1;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;&#x88C5;&#x8F7D;&#x53EA;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x51FA;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E0E;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x7684;&#x6620;&#x5C04;&#x5C31;&#x597D;&#x3002;&#x88C5;&#x8F7D;&#x4F1A;&#x5C06;&#x6620;&#x5C04;&#x8BB0;&#x5F55;&#x5728;&#x8FDB;&#x7A0B;&#x7684;vma(Virtual Memory Area)&#x6570;&#x636E;&#x62BD;&#x8C61;&#x4E2D;&#x3002;</p><p>&#x4ECE;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x6765;&#x770B;&#xFF0C;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x540E;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E5F;&#x88AB;&#x521B;&#x5EFA;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x662F;&#x672A;&#x5206;&#x914D;&#x7684;&#xFF0C;&#x88C5;&#x8F7D;&#x5C06;&#x6620;&#x5C04;&#x8BB0;&#x5F55;&#x5728;&#x8FDB;&#x7A0B;&#x7684;vma&#x4E2D;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x672A;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x4E3A;&#x5DF2;&#x5206;&#x914D;&#x3002;&#x7B49;&#x5230;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#xFF0C;&#x518D;&#x5C06;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4ECE;&#x5DF2;&#x5206;&#x914D;&#x8F6C;&#x6362;&#x5230;&#x5DF2;&#x7F13;&#x5B58;&#x3002;</p><h3 id="&#x865A;&#x62DF;&#x5730;&#x5740;&#x7FFB;&#x8BD1;-Translation-&#x6210;&#x7269;&#x7406;&#x5730;&#x5740;"><a href="#&#x865A;&#x62DF;&#x5730;&#x5740;&#x7FFB;&#x8BD1;-Translation-&#x6210;&#x7269;&#x7406;&#x5730;&#x5740;" class="headerlink" title="&#x865A;&#x62DF;&#x5730;&#x5740;&#x7FFB;&#x8BD1;(Translation)&#x6210;&#x7269;&#x7406;&#x5730;&#x5740;"></a>&#x865A;&#x62DF;&#x5730;&#x5740;&#x7FFB;&#x8BD1;(Translation)&#x6210;&#x7269;&#x7406;&#x5730;&#x5740;</h3><p>&#x5C06;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7FFB;&#x8BD1;&#x6210;&#x7269;&#x7406;&#x5730;&#x5740;&#xFF0C;&#x662F;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x3001;CPU&#x4E2D;&#x7684;&#x786C;&#x4EF6;MMU(memory management unit)&#x3001;&#x9875;&#x8868;&#x4E00;&#x8D77;&#x534F;&#x540C;&#x505A;&#x5230;&#x7684;&#x3002;</p><p>&#x5982;&#x4F55;&#x7FFB;&#x8BD1;&#x5462;&#xFF1F;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x8BB0;&#x5F55;&#x6BCF;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x5730;&#x5740;&#x5230;&#x7269;&#x7406;&#x5730;&#x5740;&#x7684;&#x6620;&#x5C04;&#xFF0C;&#x7F3A;&#x9677;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8981;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x4E0E;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x540C;&#x6837;&#x5927;&#x7684;&#x8868;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3001;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x90FD;&#x4E0D;&#x7406;&#x60F3;&#x3002;</p><p>&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x56DE;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x9875;&#x8868;&#x5DF2;&#x7ECF;&#x4EE5;&#x9875;&#x4E3A;&#x5355;&#x4F4D;&#x6620;&#x5C04;&#x4E86;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x5230;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5730;&#x5740;&#x53EF;&#x5206;&#x4E3A;&#x9875;&#x53F7;+&#x9875;&#x5185;offset&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x53EA;&#x8981;&#x4FDD;&#x6301;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x548C;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x5212;&#x5206;&#x5927;&#x5C0F;&#x4E00;&#x6837;&#x7684;&#x9875;&#xFF0C;&#x5C31;&#x53EF;&#x5982;&#x4E0B;&#x8BA1;&#x7B97;&#xFF1A;</p><pre><code class="lang-c">virtual address = page in virtual space number + page offset(&#x540E;12&#x4F4D;)                        |     &#x2193;             page table map                    ||                        &#x2193;pysical address = page in phsical space number + page offset(&#x540E;12&#x4F4D;)</code></pre><p>&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x57FA;&#x672C;&#x601D;&#x60F3;&#xFF0C;&#x518D;&#x9700;&#x8981;&#x4E00;&#x4E2A;MMU&#x786C;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5730;&#x5740;&#x7FFB;&#x8BD1;&#x4E86;&#x3002;CPU&#x4F1A;&#x5C06;&#x865A;&#x62DF;&#x5730;&#x5740;&#x4EA4;&#x7ED9;MMU&#xFF0C;MMU&#x8D1F;&#x8D23;&#x8FDB;&#x884C;&#x865A;&#x62DF;&#x5730;&#x5740;&#x5230;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E2D;&#x9875;&#x53F7;&#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x8FD8;&#x6709;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E2D;&#x9875;&#x53F7;&#x5230;&#x7269;&#x7406;&#x5730;&#x5740;&#x7684;&#x8BA1;&#x7B97;&#x3002;&#x9875;&#x8868;&#x5B58;&#x653E;&#x5728;&#x5185;&#x5B58;&#xFF0C;MMU&#x7528;&#x865A;&#x62DF;&#x5730;&#x5740;&#x67E5;&#x8BE2;&#x7269;&#x7406;&#x5730;&#x5740;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5185;&#x5B58;&#x8BBF;&#x95EE;&#x3002;MMU&#x6700;&#x540E;&#x8BA1;&#x7B97;&#x51FA;&#x7269;&#x7406;&#x5730;&#x5740;&#xFF0C;&#x5C31;&#x53BB;&#x5185;&#x5B58;&#x4E2D;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#x4E2D;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x7ED9;CPU&#x3002;&#x5982;&#x679C;&#x9875;&#x662F;&#x5DF2;&#x5206;&#x914D;&#xFF0C;MMU&#x5C31;&#x4F1A;&#x53D1;&#x8D77;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;</p><p>&#x4EE5;&#x4E0A;&#x5C31;&#x5B9E;&#x73B0;&#x51FA;&#x4E86;&#x6574;&#x4E2A;&#x5730;&#x5740;&#x7FFB;&#x8BD1;&#x8FC7;&#x7A0B;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x8FD9;&#x8FD8;&#x4E0D;&#x591F;&#x3002;&#x5728;&#x7FFB;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;MMU&#x8BBF;&#x95EE;&#x5185;&#x5B58;&#x5728;&#x786C;&#x4EF6;&#x8BA1;&#x7B97;&#x7EA7;&#x522B;&#x4E0A;&#xFF0C;&#x6162;&#x5F97;&#x4E0D;&#x53EF;&#x5FCD;&#x3002;&#x8FD9;&#x5C31;&#x9700;&#x8981;TLB(Transfer lookinside buffer)&#xFF0C;TLB&#x5C31;&#x662F;&#x5728;MMU&#x4E2D;&#x7684;&#x7F13;&#x5B58;&#x5BC4;&#x5B58;&#x5668;&#x3002;TLB&#x7528;&#x865A;&#x62DF;&#x5730;&#x5740;&#x4F5C;&#x4E3A;&#x7D22;&#x5F15;&#x7F13;&#x5B58;&#x7269;&#x7406;&#x5730;&#x5740;&#x548C;&#x9875;&#x5C5E;&#x6027;&#x3002;&#x5982;&#x679C;TLB&#x7F13;&#x5B58;&#x547D;&#x4E2D;(cache hit)&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x5185;&#x5B58;&#x8BBF;&#x95EE;&#x7684;&#x5F00;&#x9500;&#x3002;</p><h3 id="&#x591A;&#x7EA7;&#x9875;&#x8868;"><a href="#&#x591A;&#x7EA7;&#x9875;&#x8868;" class="headerlink" title="&#x591A;&#x7EA7;&#x9875;&#x8868;"></a>&#x591A;&#x7EA7;&#x9875;&#x8868;</h3><p>&#x5373;&#x4F7F;&#x6309;&#x9875;&#x4F5C;&#x4E3A;&#x7C92;&#x5EA6;&#x5212;&#x5206;&#xFF0C;&#x9875;&#x8868;&#x8FD8;&#x662F;&#x592A;&#x5927;&#x4E86;&#x3002;&#x9875;&#x8868;&#x53EF;&#x4EE5;&#x505A;&#x6210;&#x591A;&#x7EA7;&#x7ED3;&#x6784;&#x3002;&#x6620;&#x5C04;&#x7684;&#x672C;&#x8D28;&#x672C;&#x6765;&#x662F;&#xFF0C;<strong><em>&#x7528;&#x66F4;&#x5C0F;&#x7684;&#x7A7A;&#x95F4;&#x7D22;&#x5F15;&#x66F4;&#x5927;&#x7684;&#x7A7A;&#x95F4;</em></strong>&#xFF0C;<strong><em>&#x7528;&#x7D22;&#x5F15;&#x7684;&#x7A7A;&#x95F4;&#x6362;&#x641C;&#x7D22;&#x7684;&#x65F6;&#x95F4;</em></strong>&#x3002;&#x6709;&#x8DA3;&#x7684;&#x4E00;&#x70B9;&#x662F;&#xFF0C;&#x591A;&#x7EA7;&#x6620;&#x5C04;&#x7ED3;&#x6784;&#x6B63;&#x597D;&#x76F8;&#x53CD;&#xFF0C;<strong><em>&#x7528;&#x591A;&#x7EA7;&#x7ED3;&#x6784;&#x641C;&#x7D22;&#x65F6;&#x95F4;&#x6362;&#x9876;&#x7EA7;&#x7ED3;&#x6784;&#x7684;&#x7A7A;&#x95F4;</em></strong>&#x3002;&#x591A;&#x7EA7;&#x7ED3;&#x6784;&#x53EA;&#x6709;&#x9876;&#x7EA7;&#x9700;&#x8981;&#x5E38;&#x9A7B;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#xFF0C;&#x6B21;&#x7EA7;&#x53EF;&#x4EE5;&#x7F13;&#x5B58;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x641C;&#x7D22;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x7684;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h3><p>&#x7C7B;&#x4F3C;&#x4E8E;&#x88C5;&#x8F7D;&#x4EA4;&#x7ED9;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x505A;&#x771F;&#x6B63;&#x7684;&#x201C;&#x8F7D;&#x5165;&#x201D;&#x3002;&#x5C06;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x80FD;&#x529B;&#x5F00;&#x653E;&#x51FA;&#x6765;&#xFF0C;&#x6587;&#x4EF6;&#x4E5F;&#x53EF;&#x4EE5;&#x4EA4;&#x7ED9;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x505A;&#x7BA1;&#x7406;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x4FEE;&#x6539;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C31;&#x7B49;&#x540C;&#x4E8E;&#x4FEE;&#x6539;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x5C31;&#x662F;mmap&#xFF0C;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x3002;&#x66F4;&#x52A0;&#x8BE6;&#x7EC6;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x63A8;&#x8350;&#x8FD9;&#x7BC7;<a href="http://abcdxyzk.github.io/blog/2015/09/11/kernel-mm-mmap/" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x8FD9;&#x4E2A;&#x7FFB;&#x8BD1;&#x662F;&#x6709;&#x6DF1;&#x610F;&#x7684;&#xFF0C;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#x7684;&#x8FD9;&#x4E9B;&#x90FD;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x7528;&#x6237;(&#x5305;&#x62EC;&#x8FDB;&#x7A0B;)&#x4E0D;care&#x6570;&#x636E;&#x662F;&#x5728;&#x5185;&#x5B58;&#x8FD8;&#x662F;&#x78C1;&#x76D8;&#x4E0A;&#xFF0C;&#x4E5F;&#x4E0D;care&#x662F;&#x7528;&#x865A;&#x62DF;&#x5730;&#x5740;&#x8FD8;&#x662F;&#x7269;&#x7406;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#xFF0C;&#x7528;&#x6237;&#x53EA;&#x8BA4;&#x4E3A;&#x662F;&#x7528;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5B58;&#x50A8;&#x5668;&#x3002;&#x800C;&#x8FD9;&#x4E2A;&#x5B58;&#x50A8;&#x662F;&#x201C;&#x865A;&#x62DF;&#x201D;&#x7684;&#x3001;&#x4E0D;&#x662F;&#x5B9E;&#x9645;&#x5B58;&#x5728;&#x7684;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;<strong><em>&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x9690;&#x85CF;&#x4E86;&#xFF0C;&#x865A;&#x62DF;&#x5730;&#x5740;&#x3001;&#x7269;&#x7406;&#x5730;&#x5740;&#x3001;&#x5185;&#x5B58;&#x3001;&#x78C1;&#x76D8;</em></strong>&#x3002;</p><pre><code class="lang-c">                     &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;      &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;      &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;      &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; |CPU/OS&apos;s view     |        | --&gt;|           | --&gt;|           | --&gt;|           |                    |  MMU   |    | PageTable |    |           |    |           |                            |        | &lt;--|           | &lt;--|  Memory   |    |           |                     &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;      &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;     |           |    |    Disk   |                                                   |           | &lt;--|           |                                                    &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;     |           |                                                                    |           |                                                                     &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;|User/Process&apos;s view        &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;                                                        |                 |                           |&quot;virtual&quot; memory |                           |                 |                            &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014; &#x2014;&#x2014;</code></pre><p>&#x7EC8;&#x4E8E;&#xFF0C;&#x5728;&#x7ED3;&#x5408;&#x94FE;&#x63A5;&#x3001;&#x88C5;&#x8F7D;&#x3001;&#x8FDB;&#x7A0B;&#x3001;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x4E4B;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x4E56;&#x4E56;&#x201C;&#x5F00;&#x59CB;&#x201D;&#x8FD0;&#x884C;&#x4E86;&#xFF0C;&#x5BF9;&#xFF0C;&#x53EA;&#x662F;&#x201C;&#x5F00;&#x59CB;&#x201D;&#x8FD0;&#x884C;&#x800C;&#x5DF2;&#x3002;&#x4F60;&#x770B;&#x770B;&#xFF0C;&#x6211;&#x4EEC;&#x5199;&#x4E0B;&#x4EFB;&#x4F55;&#x4E00;&#x884C;&#x7684;code&#xFF0C;&#x90FD;&#x662F;&#x7AD9;&#x5728;&#x5DE8;&#x4EBA;&#x7684;&#x80A9;&#x8180;&#x4E0A;&#x4EF0;&#x671B;&#x661F;&#x7A7A;&#x3002;</p><p>&#x5728;&#x8FD9;&#x91CC;&#x4F5C;&#x8005;&#x5C31;&#x591A;&#x8D2B;&#x51E0;&#x53E5;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B66;&#x4E60;&#x8FD9;&#x4E9B;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#xFF1F;&#x660E;&#x660E;&#x5728;&#x5E73;&#x5E38;&#x5DE5;&#x4F5C;&#x4E2D;&#x90FD;&#x4E0D;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x6709;&#x6CA1;&#x6709;&#x89C9;&#x5F97;&#xFF0C;&#x5E73;&#x65F6;&#x5728;&#x5199;&#x4E1A;&#x52A1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x662F;&#x8FDB;&#x7A0B;&#x3002;&#x800C;&#x67B6;&#x6784;&#x5E08;&#x63D0;&#x4F9B;&#x7ED9;&#x6211;&#x4EEC;&#x4E00;&#x4E2A;&#x4E0E;&#x8FDB;&#x7A0B;&#x7C7B;&#x4F3C;&#x7684;&#x4E00;&#x4E2A;<strong><em>&#x5355;&#x4E00;&#x7684;&#x73AF;&#x5883;</em></strong>&#xFF0C;&#x5355;&#x7EBF;&#x7A0B;&#x3001;&#x5B8C;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x67B6;&#x6784;&#x5E08;&#x5C31;&#x5145;&#x5F53;&#x4E86;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x804C;&#x80FD;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x60F3;&#x5F53;&#x4E00;&#x4E2A;&#x67B6;&#x6784;&#x5E08;&#x53BB;&#x67B6;&#x6784;&#x8F6F;&#x4EF6;&#xFF0C;&#x4E07;&#x91CC;&#x957F;&#x5F81;&#x7684;&#x7B2C;&#x4E00;&#x6B65;&#x96BE;&#x9053;&#x4E0D;&#x662F;&#x5B66;&#x4E60;&#x5DF2;&#x6709;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x4F53;&#x7CFB;&#x5982;&#x4F55;&#x505A;&#x62BD;&#x8C61;&#xFF1F;</p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;(CSAPP)</p><p>&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x81EA;&#x6211;&#x4FEE;&#x517B;&#x2014;&#x94FE;&#x63A5;&#x3001;&#x88C5;&#x8F7D;&#x4E0E;&#x5E93;</p>]]></content>
      
      <categories>
          
          <category> 计算机体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LSM-Tree与RocksDB</title>
      <link href="/LSM-Tree%E4%B8%8ERocksDB/"/>
      <url>/LSM-Tree%E4%B8%8ERocksDB/</url>
      <content type="html"><![CDATA[<p>&#x51A5;&#x51A5;&#x4E4B;&#x4E2D;&#xFF0C;&#x63A5;&#x89E6;&#x5230;&#x4E86;&#x4E0D;&#x540C;&#x4E8E;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7684;NoSQL Key-Value&#x5B58;&#x50A8;&#x5F15;&#x64CE;RocksDB&#xFF0C;&#x61F5;&#x61F5;&#x61C2;&#x61C2;&#x3001;&#x5145;&#x6EE1;&#x597D;&#x5947;&#xFF0C;google&#x4E00;&#x70B9;&#xFF0C;&#x6EE1;&#x773C;&#x7686;&#x662F;LSM-Tree&#xFF0C;&#x5934;&#x6655;&#x773C;&#x82B1;&#x3001;&#x82E5;&#x5373;&#x82E5;&#x79BB;&#xFF0C;&#x4FBF;&#x6709;&#x4E86;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x4E00;&#x8D77;&#x4E0E;&#x5927;&#x5BB6;&#x5206;&#x4EAB;&#x8FD9;&#x8D9F;&#x63A2;&#x9669;&#x4E4B;&#x65C5;&#x3002;</p><a id="more"></a><h2 id="LSM-Tree-Log-Structured-Merge-Tree"><a href="#LSM-Tree-Log-Structured-Merge-Tree" class="headerlink" title="LSM-Tree(Log-Structured-Merge-Tree)"></a>LSM-Tree(Log-Structured-Merge-Tree)</h2><p>LSM&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x770B;&#xFF0C;&#x5BB9;&#x6613;&#x671B;&#x6587;&#x751F;&#x4E49;&#x6210;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E00;&#x4E2A;tree&#x3002;&#x4F46;LSM&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;tree&#x3002;LSM&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8981;&#x662F;&#x7ED9;LSM&#x7684;&#x547D;&#x540D;&#x65AD;&#x53E5;&#xFF0C;Log&#x548C;Structured&#x8FD9;&#x4E24;&#x4E2A;&#x8BCD;&#x662F;&#x5408;&#x5E76;&#x5728;&#x4E00;&#x8D77;&#x7684;&#xFF0C;LSM-Tree&#x5E94;&#x8BE5;&#x65AD;&#x53E5;&#x6210;Log-Structured&#x3001;Merge&#x3001;Tree&#x4E09;&#x4E2A;&#x8BCD;&#x6C47;&#xFF0C;&#x8FD9;&#x4E09;&#x4E2A;&#x8BCD;&#x6C47;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4EE5;&#x4E0B;&#x4E09;&#x70B9;LSM&#x7684;&#x5173;&#x952E;&#x6027;&#x8D28;&#xFF1A;</p><ul><li>&#x5C06;&#x6570;&#x636E;&#x5F62;&#x6210;Log-Structured&#xFF1A;&#x5728;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;LSM&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x8BB0;&#x5F55;log&#x3002;&#x8FD9;&#x6837;LSM&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x6709;&#x6613;&#x5931;&#x6027;&#x7684;&#x5185;&#x5B58;&#x770B;&#x505A;&#x6C38;&#x4E45;&#x6027;&#x5B58;&#x50A8;&#x5668;&#x3002;&#x5E76;&#x4E14;&#x4FE1;&#x4EFB;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7B49;&#x5230;&#x5185;&#x5B58;&#x5BB9;&#x91CF;&#x8FBE;&#x5230;threshold&#x518D;&#x96C6;&#x4F53;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x3002;&#x5C06;&#x6570;&#x636E;&#x5F62;&#x6210;Log-Structured&#xFF0C;&#x4E5F;&#x662F;&#x5C06;&#x6574;&#x4F53;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x8F6C;&#x6362;&#x6210;&#x4E86;&#x201C;&#x5185;&#x5B58;(in-memory)&#x201D;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x3002;</li><li>&#x5C06;&#x6240;&#x6709;&#x78C1;&#x76D8;&#x4E0A;&#x6570;&#x636E;&#x4E0D;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x7D22;&#x5F15;&#x7ED3;&#x6784;&#xFF0C;&#x800C;&#x7EC4;&#x7EC7;&#x6210;&#x6709;&#x5E8F;&#x7684;&#x6587;&#x4EF6;&#x96C6;&#xFF1A;&#x56E0;&#x4E3A;&#x78C1;&#x76D8;&#x968F;&#x673A;&#x8BFB;&#x5199;&#x6BD4;&#x987A;&#x5E8F;&#x8BFB;&#x5199;&#x6162;3&#x4E2A;&#x6570;&#x91CF;&#x7EA7;&#xFF0C;LSM&#x5C3D;&#x91CF;&#x5C06;&#x78C1;&#x76D8;&#x8BFB;&#x5199;&#x8F6C;&#x6362;&#x6210;&#x987A;&#x5E8F;&#x8BFB;&#x5199;&#x3002;&#x5C06;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#x6210;B&#x6811;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x7D22;&#x5F15;&#x7ED3;&#x6784;&#xFF0C;&#x867D;&#x7136;&#x67E5;&#x627E;&#x5F88;&#x9AD8;&#x6548;&#xFF0C;&#x4F46;&#x662F;&#x9762;&#x5BF9;&#x968F;&#x673A;&#x8BFB;&#x5199;&#xFF0C;&#x7531;&#x4E8E;&#x5927;&#x91CF;&#x5BFB;&#x9053;&#x5BFC;&#x81F4;&#x5176;&#x6027;&#x80FD;&#x4E0D;&#x4F73;&#x3002;&#x800C;LSM&#x7528;&#x4E86;&#x4E00;&#x79CD;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E0D;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x7D22;&#x5F15;&#x7ED3;&#x6784;&#xFF0C;&#x800C;&#x7EC4;&#x7EC7;&#x6210;&#x6709;&#x5E8F;&#x7684;&#x6587;&#x4EF6;&#x96C6;&#x3002;&#x6BCF;&#x6B21;LSM&#x9762;&#x5BF9;&#x78C1;&#x76D8;&#x5199;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;&#x4E00;&#x4E2A;&#x6216;&#x51E0;&#x4E2A;&#x65B0;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x987A;&#x5E8F;&#x5199;&#x5165;&#x4E14;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5C06;&#x968F;&#x673A;&#x8BFB;&#x5199;&#x8F6C;&#x6362;&#x6210;&#x4E86;&#x987A;&#x5E8F;&#x8BFB;&#x5199;&#x3002;LSM&#x5C06;&#x4E00;&#x6B21;&#x6027;&#x96C6;&#x4F53;&#x5199;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;level&#xFF0C;&#x78C1;&#x76D8;&#x4E0A;&#x5212;&#x5206;&#x591A;level&#xFF0C;level&#x4E0E;level&#x4E4B;&#x95F4;&#x4E92;&#x76F8;&#x9694;&#x79BB;&#x3002;&#x8FD9;&#x5C31;&#x5F62;&#x6210;&#x4E86;&#xFF0C;&#x4EE5;&#x5199;&#x5165;&#x6570;&#x636E;&#x65F6;&#x95F4;&#x7EBF;&#x5F62;&#x6210;&#x7684;&#x903B;&#x8F91;&#x4E0A;&#x3001;&#x800C;&#x975E;&#x7269;&#x7406;&#x4E0A;&#x7684;&#x5C42;&#x7EA7;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;LSM&#x88AB;&#x547D;&#x540D;&#x4E3A;&#x201D;tree&#x201C;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x201C;tree&#x201D;&#x3002;</li><li>&#x5C06;&#x6570;&#x636E;&#x6309;key&#x6392;&#x5E8F;&#xFF0C;&#x5728;&#x5408;&#x5E76;&#x4E0D;&#x540C;file&#x3001;level&#x4E0A;&#x7684;&#x6570;&#x636E;&#x65F6;&#x7C7B;&#x4F3C;<a href="http://blog.mrriddler.com/2016/06/11/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89/">merge-join</a>&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x76F4;&#x4FDD;&#x6301;&#x751F;&#x6210;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x4EC5;&#x5199;&#x5165;&#x4F1A;&#x9020;&#x6210;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x4F1A;&#x5927;&#x91CF;&#x964D;&#x4F4E;&#x8BFB;&#x7684;&#x6027;&#x80FD;&#x3002;&#x6240;&#x4EE5;&#x8981;&#x9AD8;&#x6548;&#x7684;&#x3001;&#x5468;&#x671F;&#x6027;&#x5408;&#x5E76;&#x4E0D;&#x540C;file&#x3001;level&#x3002;&#x800C;&#x5982;&#x679C;&#x6570;&#x636E;&#x662F;&#x4E71;&#x5E8F;&#x7684;&#xFF0C;&#x6839;&#x672C;&#x505A;&#x4E0D;&#x5230;&#x9AD8;&#x6548;&#x5408;&#x5E76;&#x3002;&#x6240;&#x4EE5;LSM&#x8981;&#x5C06;&#x6570;&#x636E;&#x6309;key&#x6392;&#x5E8F;&#xFF0C;&#x5728;&#x5408;&#x5E76;&#x4E0D;&#x540C;file&#x3001;level&#x4E0A;&#x7684;&#x6570;&#x636E;&#x65F6;&#x7C7B;&#x4F3C;<a href="http://blog.mrriddler.com/2016/06/11/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89/">merge-join</a>&#x3002;</li></ul><p>&#x5F88;&#x660E;&#x663E;&#xFF0C;LSM&#x727A;&#x7272;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x8BFB;&#x7684;&#x6027;&#x80FD;&#x548C;&#x589E;&#x52A0;&#x4E86;&#x5408;&#x5E76;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x6362;&#x53D6;&#x4E86;&#x9AD8;&#x6548;&#x7684;&#x5199;&#x6027;&#x80FD;&#x3002;&#x90A3;LSM&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#xFF1F;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x5C31;&#x5173;&#x7CFB;&#x5230;&#x5BF9;&#x4E8E;&#x78C1;&#x76D8;&#x5199;&#x5DF2;&#x7ECF;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x4F18;&#x5316;&#x624B;&#x6BB5;&#x4E86;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x78C1;&#x76D8;&#x8BFB;&#xFF0C;&#x4E0D;&#x8BBA;&#x786C;&#x4EF6;&#x8FD8;&#x662F;&#x8F6F;&#x4EF6;&#x4E0A;&#x90FD;&#x6709;&#x4F18;&#x5316;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x901A;&#x8FC7;&#x591A;&#x79CD;&#x4F18;&#x5316;&#x540E;&#xFF0C;&#x8BFB;&#x6027;&#x80FD;&#x867D;&#x7136;&#x4ECD;&#x662F;&#x4E0B;&#x964D;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x5728;&#x53EF;&#x63A5;&#x53D7;&#x8303;&#x56F4;&#x5185;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x7528;&#x4E8E;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E0D;&#x540C;&#x4E8E;&#x7528;&#x4E8E;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x7528;&#x4E8E;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6027;&#x80FD;&#x7684;&#x74F6;&#x9888;&#x5C31;&#x5728;&#x641C;&#x7D22;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x800C;&#x7528;&#x4E8E;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6027;&#x80FD;&#x7684;&#x74F6;&#x9888;&#x5728;&#x78C1;&#x76D8;IO&#xFF0C;&#x751A;&#x81F3;&#x662F;&#x78C1;&#x76D8;IO&#x7684;&#x6A21;&#x5F0F;&#x3002;</p><p>LSM&#x8FD1;&#x5E74;&#x6765;&#x5DF2;&#x88AB;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#xFF0C;&#x8FD8;&#x6709;&#x5C06;B&#x5BB6;&#x65CF;&#x6811;&#x548C;LSM&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x50CF;HBase&#x3001;SQLite4&#x3001;MongoDB&#x3001;Cassandra&#x3001;LevelDB&#xFF0C;&#x8FD8;&#x6709;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x4E3B;&#x89D2;RocksDB&#xFF0C;&#x8FD9;&#x4E9B;&#x5F53;&#x5BB6;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x82B1;&#x65E6;&#xFF0C;&#x90FD;&#x6216;&#x591A;&#x6216;&#x5C11;&#x652F;&#x6301;&#x3001;&#x4F7F;&#x7528;&#x8D77;LSM&#x4E86;&#x3002;</p><h2 id="RocksDB"><a href="#RocksDB" class="headerlink" title="RocksDB"></a>RocksDB</h2><p>RocksDB&#x662F;Facebook&#x5728;LevelDB&#x57FA;&#x7840;&#x4E0A;&#x7528;C++&#x5199;&#x7684;Key-Value&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x3002;&#x5176;Key&#x548C;Value&#x90FD;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x6D41;&#x3002;&#x5E76;&#x5BF9;&#x95EA;&#x5B58;(flash)&#x6709;&#x66F4;&#x53CB;&#x597D;&#x7684;&#x4F18;&#x5316;&#x3002;&#x5148;&#x6765;&#x804A;&#x4E00;&#x804A;RocksDB&#x7684;&#x6574;&#x4F53;&#x7ED3;&#x6784;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x804A;&#x4E00;&#x804A;RocksDB&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x6709;&#x610F;&#x601D;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x6700;&#x540E;&#x804A;&#x4E00;&#x804A;RocksDB&#x5185;&#x5B58;&#x4E0A;&#x3001;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x5177;&#x4F53;&#x7ED3;&#x6784;&#x3002;&#x5728;RocksDB&#x4E2D;&#xFF0C;&#x5C06;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x7ED3;&#x6784;&#x53EB;&#x505A;flush&#xFF0C;&#x800C;&#x4E0D;&#x540C;file&#x3001;level&#x4E4B;&#x95F4;merge&#x53EB;&#x505A;compaction&#x3002;</p><h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><p>RocksDB&#x5982;&#x4E0A;&#x6587;&#x6240;&#x8BF4;&#x662F;&#x57FA;&#x4E8E;LSM&#x505A;&#x5B58;&#x50A8;&#x3002;RocksDB&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#x53EB;&#x505A;memtable&#xFF0C;&#x7528;&#x4E8E;&#x5F62;&#x6210;Log-Structured&#x7684;file&#x53EB;&#x505A;logfile&#xFF0C;&#x78C1;&#x76D8;&#x4E0A;&#x7684;file&#x7ED3;&#x6784;&#x53EB;&#x505A;sstfile&#xFF0C;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x5BF9;file&#x66F4;&#x6539;&#x7684;log&#x53EB;&#x505A;manifest&#x3002;</p><h3 id="Column-Family"><a href="#Column-Family" class="headerlink" title="Column-Family"></a>Column-Family</h3><p>&#x4E3A;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x903B;&#x8F91;&#x5206;&#x65CF;&#xFF0C;&#x5C06;&#x4E0D;&#x540C;family&#x4E92;&#x76F8;&#x9694;&#x79BB;&#xFF0C;&#x5206;&#x5F00;&#x914D;&#x7F6E;&#x3001;&#x5B58;&#x50A8;&#x3002;column family&#x5171;&#x4EAB;logfile&#xFF0C;&#x800C;&#x4E0D;&#x5171;&#x4EAB;memtable&#x548C;sstfile&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;column family&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x70B9;&#x7279;&#x70B9;&#xFF1A;</p><ul><li>&#x591A;&#x4E2A;column family&#x4ECD;&#x7136;&#x80FD;&#x4FDD;&#x6301;&#x4E8B;&#x52A1;&#x7684;&#x539F;&#x5B50;&#x6027;&#x3002;</li><li>&#x5355;&#x72EC;&#x589E;&#x52A0;&#x3001;&#x4FEE;&#x6539;&#x3001;&#x5220;&#x9664;&#x4E00;&#x4E2A;column family&#x5185;&#x7684;&#x6570;&#x636E;&#x6027;&#x80FD;&#x63D0;&#x5347;&#x3002;</li></ul><h3 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h3><p>RocksDB&#x6709;&#x4E00;&#x4E9B;&#x5947;&#x601D;&#x5999;&#x60F3;&#x7684;filter&#xFF0C;&#x8FD9;&#x4E9B;filter&#x6839;&#x636E;&#x7279;&#x5B9A;&#x6761;&#x4EF6;&#x751F;&#x6210;&#xFF0C;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x7684;key&#x5C31;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x6570;&#x636E;&#x662F;&#x5426;&#x786E;&#x5B9A;&#x6216;&#x53EF;&#x80FD;&#x88AB;&#x7279;&#x5B9A;&#x6761;&#x4EF6;&#x6392;&#x9664;&#x6389;&#x3002;&#x6709;&#x4E9B;filter&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5BF9;&#x8BFB;&#x4F18;&#x5316;&#xFF0C;&#x6709;&#x4E9B;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x7BA1;&#x7406;&#x6570;&#x636E;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x7B49;&#x3002;</p><h3 id="Bloom-Filter"><a href="#Bloom-Filter" class="headerlink" title="Bloom-Filter"></a>Bloom-Filter</h3><p>bloom filter&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x80FD;&#x63D0;&#x9AD8;&#x8BFB;&#x6027;&#x80FD;&#x7684;filter&#x3002;&#x901A;&#x8FC7;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E00;&#x4E2A;key set&#x5BF9;&#x5E94;&#x7684;bloom filter&#x3002;&#x8FD9;&#x4E2A;bloom filter&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x51FA;&#x4EFB;&#x610F;key&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x6216;&#x8005;&#x80AF;&#x5B9A;&#x4E0D;&#x5B58;&#x5728;key set&#x4E2D;&#x3002;&#x6BCF;&#x4E2A;sstfile&#x5728;&#x751F;&#x6210;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5BF9;&#x5E94;&#x7684;bloom filter&#xFF0C;&#x5F53;&#x5728;&#x8BFB;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x5224;&#x65AD;&#x51FA;&#x6570;&#x636E;&#x662F;&#x5426;&#x53EF;&#x80FD;&#x5728;sstfile&#x4E2D;&#x3002;&#x5728;&#x505A;range scan&#x548C;prefix&#x67E5;&#x627E;&#x7684;&#x65F6;&#x5019;&#xFF0C;bloom filter&#x4E5F;&#x80FD;&#x5E2E;&#x4E0A;&#x5FD9;&#x3002;</p><h3 id="Time-To-Live-TTL"><a href="#Time-To-Live-TTL" class="headerlink" title="Time-To-Live(TTL)"></a>Time-To-Live(TTL)</h3><p>RocksDB&#x8FD8;&#x652F;&#x6301;&#x4E3A;&#x5B58;&#x5165;&#x7684;&#x6570;&#x636E;&#x8BBE;&#x7F6E;&#x4E0A;&#x6700;&#x957F;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002;RocksDB&#x4F1A;&#x4E3A;&#x6709;TTL&#x7684;&#x6570;&#x636E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;filter&#x3002;&#x8FD9;&#x79CD;filter&#x53EB;&#x505A;compaction filter&#xFF0C;&#x5F53;&#x8FDB;&#x884C;compaction&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x751F;&#x547D;&#x5468;&#x671F;&#x7ED3;&#x675F;&#x7684;&#x6570;&#x636E;&#x5C06;&#x4F1A;&#x88AB;&#x6392;&#x9664;&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8FD9;&#x4E2A;TTL&#x4E0D;&#x662F;&#x7EDD;&#x5BF9;&#x65F6;&#x95F4;&#xFF0C;RocksDB&#x4F1A;&#x5728;&#x7EDD;&#x5BF9;&#x65F6;&#x95F4;&#x8FC7;&#x540E;&#x7684;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x5220;&#x9664;&#x6570;&#x636E;&#x3002;</p><h3 id="Memtable"><a href="#Memtable" class="headerlink" title="Memtable"></a>Memtable</h3><p>RocksDB&#x5728;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x7ED3;&#x6784;&#x7531;memtable&#x7EC4;&#x6210;&#xFF0C;&#x5177;&#x4F53;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;<a href="http://blog.mrriddler.com/2016/11/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">SkipList</a>&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x5916;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x5176;&#x4ED6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;SkipList&#x505A;&#x4E3A;&#x7528;&#x591A;&#x4E2A;&#x7EBF;&#x6027;&#x7ED3;&#x6784;&#x6A21;&#x4EFF;&#x51FA;&#x5C42;&#x7EA7;&#x7ED3;&#x6784;&#x7684;&#x201C;&#x6811;&#x72B6;&#x201C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x80FD;&#x63D0;&#x4F9B;&#x5E38;&#x6570;&#x7EA7;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x548C;&#x5BF9;&#x6570;&#x7EA7;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5E76;&#x53D1;&#x73AF;&#x5883;&#x76F8;&#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x51CF;&#x8F7B;&#x4E86;&#x9501;&#x5F00;&#x9500;&#xFF0C;&#x8FD0;&#x7528;&#x5728;&#x8FD9;&#x91CC;&#x518D;&#x5408;&#x9002;&#x4E0D;&#x8FC7;&#x4E86;&#x3002;</p><h3 id="Flush"><a href="#Flush" class="headerlink" title="Flush"></a>Flush</h3><p>&#x4E3A;&#x4E86;&#x51CF;&#x5C0F;&#x9501;&#x5F00;&#x9500;&#xFF0C;&#x5C06;&#x5199;&#x5165;memtable&#x548C;flush&#x5206;&#x79BB;&#xFF0C;RocksDB&#x4F1A;&#x4F7F;&#x7528;&#x591A;&#x4E2A;memtable&#xFF0C;&#x5E76;&#x4E14;&#x628A;flush&#x8FD9;&#x4EF6;&#x4E8B;&#x62BD;&#x8C61;&#x4E3A;task-pipeline&#xFF0C;&#x4E5F;&#x5C31;&#x662F;job&#x3001;job queue&#x3001;worker&#x62BD;&#x8C61;&#x3002;&#x5C06;&#x8981;flush&#x7684;memtable&#x5148;&#x8F6C;&#x6362;&#x6210;immutable memtable&#xFF0C;&#x4EE3;&#x8868;&#x5176;&#x4E0D;&#x53EF;&#x5199;&#x4E86;&#xFF0C;&#x5E76;&#x5C06;immutable memtable&#x52A0;&#x5165;flush pipeline&#xFF0C;&#x7B49;&#x5F85;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x53BB;flush&#x3002;&#x800C;&#x540C;&#x65F6;&#x65B0;&#x7684;memtable&#x751F;&#x6210;&#x53D6;&#x4EE3;immutable memtable&#x7B49;&#x5F85;&#x6570;&#x636E;&#x5199;&#x5165;&#x3002;&#x5728;&#x5C06;immutable memtable flush&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x662F;&#x4F1A;&#x505A;inline-compaction&#xFF0C;&#x8FD9;&#x662F;&#x5C06;immutbale memtable&#x63D0;&#x524D;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5408;&#x5E76;&#x7684;&#x4F18;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8FD9;&#x4E2A;memtable&#x521B;&#x5EFA;&#x5230;flush&#x7684;&#x5468;&#x671F;&#x4E2D;&#xFF0C;&#x6570;&#x636E;&#x88AB;&#x52A0;&#x5165;&#x7136;&#x540E;&#x5220;&#x9664;&#xFF0C;&#x5728;&#x8FD9;&#x4E00;&#x6B65;&#x5C31;&#x53EF;&#x4EE5;compact&#x6389;&#xFF0C;&#x8FD9;&#x5BF9;&#x77ED;&#x751F;&#x547D;&#x5468;&#x671F;&#x7684;&#x6570;&#x636E;&#x6709;&#x5F88;&#x5927;&#x7684;&#x5199;&#x4F18;&#x5316;&#x3002;</p><h3 id="SSTFile-SSTTable"><a href="#SSTFile-SSTTable" class="headerlink" title="SSTFile(SSTTable)"></a>SSTFile(SSTTable)</h3><p>RocksDB&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x7684;file&#x7ED3;&#x6784;sstfile&#x7531;block&#x4F5C;&#x4E3A;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#x7EC4;&#x6210;&#xFF0C;&#x4E00;&#x4E2A;sstfile&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-c">&lt;beginning_of_file&gt;[data block 1][data block 2]...[data block N][meta block 1: filter block]                 [meta block 2: stats block]                   [meta block 3: compression dictionary block]  ...[meta block K: future extended block] [metaindex block][index block][Footer]                              &lt;end_of_file&gt;</code></pre><p>&#x5176;&#x4E2D;data block&#x5C31;&#x662F;&#x6570;&#x636E;&#x5B9E;&#x4F53;block&#xFF0C;meta block&#x4E3A;&#x5143;&#x6570;&#x636E;block&#x3002;metaindex block&#x548C;index block&#x5206;&#x522B;&#x662F;&#x5BF9;meta block&#x548C;data block&#x7684;&#x7D22;&#x5F15;block&#x3002;metaindex block&#x548C;index block&#x90FD;&#x4EE5;blockhandle&#x7ED3;&#x6784;&#x4F5C;&#x4E3A;&#x6307;&#x5411;&#x6240;&#x7D22;&#x5F15;block&#x7684;&#x6307;&#x9488;&#x3002;blockhandle&#x5305;&#x542B;&#x6240;&#x7D22;&#x5F15;block&#x7684;offset&#x548C;size&#x3002;metaindex block&#x5C06;&#x6240;&#x7D22;&#x5F15;&#x7684;meta block&#x7684;&#x540D;&#x5B57;&#x4F5C;&#x4E3A;key&#x3002;&#x800C;index block&#x5C06;&#x6240;&#x7D22;&#x5F15;&#x7684;data block&#x524D;&#x4E00;block&#x7684;&#x6700;&#x5927;key&#x503C;&#x4E0E;&#x6240;&#x7D22;&#x5F15;data block&#x7684;&#x6700;&#x5C0F;key&#x503C;&#x7684;&#x4E2D;&#x95F4;&#x4EFB;&#x610F;&#x503C;&#x4F5C;&#x4E3A;key&#x3002;</p><p>filter block&#x8BB0;&#x5F55;&#x7684;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x6B64;sstfile&#x751F;&#x6548;&#x7684;&#x4E00;&#x7CFB;&#x5217;filter&#x3002;stats block&#x4E5F;&#x5C31;&#x662F;properties block&#xFF0C;&#x5B83;&#x4EE5;key-value&#x5F62;&#x5F0F;&#x8BB0;&#x5F55;&#x4E86;&#x6B64;sstfile&#x7684;&#x4E00;&#x4E9B;&#x5C5E;&#x6027;&#x3002;sstfile&#x7EC4;&#x6210;&#x7684;block&#x6709;&#x53EF;&#x80FD;&#x88AB;&#x538B;&#x7F29;(compression)&#xFF0C;&#x4E0D;&#x540C;level&#x4E5F;&#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;compression&#x65B9;&#x5F0F;&#x3002;compression dictionary block&#x8BB0;&#x5F55;&#x4E86;&#x9002;&#x7528;&#x4E8E;compression&#x6B64;sstfile block&#x7684;&#x5E93;&#x3002;footer&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E9B;&#x5B57;&#x8282;&#x586B;&#x5145;&#xFF0C;&#x548C;&#x8BB0;&#x5F55;&#x4E86;&#x6307;&#x5411;metaindex block&#x3001;index block&#x7684;blockhandle&#x7ED3;&#x6784;&#x6307;&#x9488;&#x3002;&#x8FD9;&#x8BF4;&#x660E;sstfile&#x5982;&#x679C;&#x8981;&#x904D;&#x5386;block&#xFF0C;&#x4F1A;&#x9006;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x4ECE;footer&#x5F00;&#x59CB;&#x3002;</p><h3 id="Compaction"><a href="#Compaction" class="headerlink" title="Compaction"></a>Compaction</h3><p>RocksDB&#x4F1A;&#x5728;&#x540E;&#x53F0;&#x591A;&#x7EBF;&#x7A0B;compact&#x3002;RocksDB&#x6709;&#x4E24;&#x79CD;compact style&#xFF1A;</p><ul><li>Universal Style Compaction&#xFF1A;&#x8FD9;&#x79CD;style&#x53BB;compact&#x5C31;&#x5982;&#x4E0A;&#x6587;LSM&#x6240;&#x804A;&#x7684;&#xFF0C;&#x5C06;&#x78C1;&#x76D8;&#x4E0A;&#x6570;&#x636E;&#x5B8C;&#x5168;&#x6309;&#x7167;&#x5199;&#x5165;&#x65F6;&#x95F4;&#x7EBF;&#x53BB;&#x7EC4;&#x7EC7;&#xFF0C;&#x53EA;&#x5C06;&#x76F8;&#x90BB;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;compact&#xFF0C;&#x5F88;&#x50CF;&#x5728;&#x5408;&#x5E76;&#x4E92;&#x4E0D;&#x91CD;&#x53E0;(overlapping)&#x7684;&#x65F6;&#x95F4;&#x6BB5;&#x3002;&#x8FD9;&#x79CD;style&#x53EF;&#x4EE5;compact&#x51FA;&#x65B0;&#x7684;file&#x6216;&#x8005;level&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x4E0D;&#x540C;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x6709;&#x91CD;&#x53E0;&#x7684;key&#xFF0C;&#x4F1A;&#x6709;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#x3002;</li><li>Level Style Compaction&#xFF1A;&#x8FD9;&#x79CD;style&#x53BB;compact&#x4E0D;&#x4F1A;&#x5C06;&#x78C1;&#x76D8;&#x4E0A;&#x6570;&#x636E;&#x5B8C;&#x5168;&#x6309;&#x7167;&#x5199;&#x5165;&#x65F6;&#x95F4;&#x7EBF;&#x53BB;&#x7EC4;&#x7EC7;&#x3002;&#x800C;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x540C;&#x4E00;level&#x591A;&#x4E2A;file&#x4E2D;&#x76F8;&#x540C;key&#x6570;&#x636E;&#x7684;&#x5197;&#x4F59;&#xFF0C;&#x8FD9;&#x79CD;style&#x8981;&#x4FDD;&#x8BC1;&#x540C;&#x4E00;level&#x4E0D;&#x5B58;&#x5728;&#x6709;&#x76F8;&#x540C;key&#x7684;&#x6570;&#x636E;&#x3002;&#x82E5;&#x5C06;Ln level&#x4E2D;&#x7684;file1 &#x8981;compact&#x5230;Ln+1level&#xFF0C;&#x8981;&#x5C06;Ln+1level&#x4E2D;&#x6240;&#x6709;&#x5305;&#x542B;&#x91CD;&#x53E0;file1&#x6570;&#x636E;key&#x7684;&#x6587;&#x4EF6;&#x4E00;&#x8D77;compact&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8FD9;&#x4E9B;file compact&#x6210;Ln+1level&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x65B0;file&#x3002;&#x8FD9;&#x79CD;style&#x8FD8;&#x4F1A;&#x9020;&#x6210;&#x4E00;&#x79CD;&#x6548;&#x679C;&#xFF0C;&#x5C31;&#x662F;&#x540C;&#x4E00;level&#x7684;file&#x6309;key&#x503C;&#x6392;&#x5E8F;&#x3002;&#x867D;&#x7136;Level Style Compaction&#x51CF;&#x5C11;&#x4E86;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;&#x8BFB;&#x6570;&#x636E;&#x6765;&#x8BF4;&#xFF0C;Universal Style Compaction&#x66F4;&#x52A0;&#x9075;&#x5B88;&#x5C40;&#x90E8;&#x6027;&#xFF0C;&#x6240;&#x4EE5;Level Style Compaction&#x8BFB;&#x6027;&#x80FD;&#x66F4;&#x5DEE;&#x4E00;&#x70B9;&#x3002;</li></ul><p>&#x4E5F;&#x5C31;&#x8BF4;&#xFF0C;Universal Style Compaction&#x91CD;&#x8BFB;&#x8F7B;&#x7A7A;&#x95F4;&#xFF0C;Level Style Compaction&#x91CD;&#x7A7A;&#x95F4;&#x8F7B;&#x8BFB;&#x3002;RocksDB&#x5C06;&#x540E;&#x8005;&#x4F5C;&#x4E3A;default style&#xFF0C;&#x5173;&#x4E8E;&#x8FD9;&#x4E24;&#x79CD;style&#x5982;&#x4F55;&#x9009;&#x62E9;(pick)level&#x3001;file&#x53BB;compact&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x6574;&#x4F53;&#x53D9;&#x8FF0;&#x4E86;&#xFF0C;&#x57FA;&#x672C;&#x662F;file&#x3001;level&#x7684;&#x6570;&#x91CF;&#x6216;&#x5927;&#x5C0F;&#x8FBE;&#x5230;&#x4E00;&#x4E2A;ratio&#x7684;threshold&#x5C31;&#x4F1A;triger compact&#xFF0C;<a href="https://github.com/facebook/rocksdb/wiki/Universal-Compaction" target="_blank" rel="noopener">&#x5173;&#x4E8E;Universal Style&#x7684;&#x9009;&#x62E9;&#x5728;&#x8FD9;&#x91CC;</a>&#xFF0C;<a href="https://github.com/facebook/rocksdb/wiki/Choose-Level-Compaction-Files" target="_blank" rel="noopener">&#x5173;&#x4E8E;Level Style&#x7684;&#x9009;&#x62E9;&#x5728;&#x8FD9;&#x91CC;</a>&#x3002;&#x6311;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x804A;&#x4E0B;&#xFF0C;Level Style&#x5982;&#x4F55;pick file&#x53BB;compact&#xFF1F;RocksDB&#x8FD8;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;universal&#x7B56;&#x7565;&#x53BB;pick&#xFF0C;&#x4E0D;&#x8FC7;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;option&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#xFF1A;</p><ul><li>&#x4F18;&#x5148;&#x9009;&#x62E9;key&#x5206;&#x5E03;&#x8303;&#x56F4;&#x96C6;&#x4E2D;&#x7684;file&#x53BB;compact&#xFF1A;file&#x4E2D;&#x6570;&#x636E;key&#x5982;&#x679C;&#x5206;&#x5E03;&#x96C6;&#x4E2D;&#xFF0C;&#x5C31;&#x4F1A;&#x6709;&#x66F4;&#x5C11;&#x7684;&#x91CD;&#x53E0;file&#x5728;&#x4E0B;&#x4E00;level&#xFF0C;&#x5C31;&#x4F1A;&#x6709;&#x66F4;&#x5C11;&#x7684;compact&#x5F00;&#x9500;&#x3002;&#x7528;<strong>kOldestSmallestSeqFirst</strong>&#x8BBE;&#x7F6E;&#x4F18;&#x5148;compactkey&#x5206;&#x5E03;&#x8303;&#x56F4;&#x96C6;&#x4E2D;&#x7684;file&#x3002;</li><li>&#x4F18;&#x5148;&#x9009;&#x62E9;&#x51B7;&#x6570;&#x636E;file&#x53BB;compact&#xFF1A;&#x7ECF;&#x5E38;&#x4FEE;&#x6539;&#x7684;&#x70ED;&#x6570;&#x636E;&#x5982;&#x679C;&#x7ECF;&#x5E38;compact&#xFF0C;&#x53EA;&#x4F1A;&#x6D6A;&#x8D39;&#x5F00;&#x9500;&#x3002;&#x8BBE;&#x60F3;&#x4E0B;&#xFF0C;&#x521A;&#x521A;&#x63D2;&#x5165;&#x7684;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#xFF0C;&#x9A6C;&#x4E0A;&#x53C8;&#x5220;&#x9664;&#xFF0C;&#x5982;&#x679C;&#x63D2;&#x5165;&#x540E;&#x5C31;&#x8FDB;&#x884C;compact&#xFF0C;&#x672C;&#x5E94;&#x8BE5;&#x5220;&#x9664;&#x7684;&#x6570;&#x636E;&#x53C8;&#x5360;&#x4E86;&#x4E24;&#x500D;&#x7684;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#x3002;&#x7528;<strong>kOldestLargestSeqFirst</strong>&#x8BBE;&#x7F6E;&#x4F18;&#x5148;compact&#x51B7;&#x6570;&#x636E;file&#x3002;</li><li>&#x4F18;&#x5148;&#x9009;&#x62E9;&#x88AB;&#x5220;&#x9664;&#x6570;&#x636E;&#x591A;&#x7684;file&#x53BB;compact&#xFF1A;&#x88AB;&#x5220;&#x9664;&#x7684;&#x6570;&#x636E;&#x5982;&#x679C;&#x65E9;&#x88AB;compact&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x5197;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x7528;<strong>kByCompensatedSize</strong>&#x8BBE;&#x7F6E;&#x4F18;&#x5148;compact&#x88AB;&#x5220;&#x9664;&#x6570;&#x636E;&#x591A;&#x7684;file&#x3002;</li></ul><h3 id="SSTFile-Indexing"><a href="#SSTFile-Indexing" class="headerlink" title="SSTFile-Indexing"></a>SSTFile-Indexing</h3><p>&#x5982;&#x679C;RocksDB&#x4F7F;&#x7528;&#x7684;&#x662F;Level Style Compaction&#xFF0C;&#x90A3;&#x4E48;&#x8FD8;&#x53EF;&#x4EE5;&#x5728;&#x67E5;&#x627E;&#x6570;&#x636E;&#x65F6;&#x505A;&#x66F4;&#x591A;&#x4F18;&#x5316;&#x3002;Level Style Compaction&#x4FDD;&#x8BC1;&#x540C;&#x4E00;level&#x4E0D;&#x5B58;&#x5728;&#x6709;&#x76F8;&#x540C;key&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E14;file&#x6309;key&#x503C;&#x6392;&#x5E8F;&#x3002;&#x9996;&#x5148;&#xFF0C;&#x5BF9;&#x4E8E;&#x6709;&#x5E8F;&#x7ED3;&#x6784;&#x641C;&#x7D22;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#x3002;&#x5176;&#x6B21;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x67D0;&#x4E00;level&#x4E2D;&#x90FD;&#x67E5;&#x627E;&#x4E0D;&#x5230;key&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x4E0B;&#x4E00;level&#x4E2D;&#x67E5;&#x627E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x67E5;&#x627E;&#x5230;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;file&#x7684;key&#x8303;&#x56F4;&#x6392;&#x9664;&#x4E0B;&#x4E00;level&#x7684;&#x5F88;&#x591A;file&#xFF0C;&#x6BD4;&#x5982;&#x5982;&#x4E0B;&#x7ED3;&#x6784;&#xFF1A;</p><pre><code class="lang-c">                                         file 1                                file 2                                      +----------+                          +----------+level 1:                              | 100, 200 |                          | 300, 400 |                                      +----------+                          +----------+           file 1     file 2      file 3      file 4       file 5       file 6       file 7                +--------+ +--------+ +---------+ +----------+ +----------+ +----------+ +----------+level 2: | 40, 50 | | 60, 70 | | 95, 110 | | 150, 160 | | 210, 230 | | 290, 300 | | 310, 320 |          +--------+ +--------+ +---------+ +----------+ +----------+ +----------+ +----------+</code></pre><p>&#x5982;&#x679C;&#x8981;&#x67E5;&#x627E;80&#xFF0C;&#x5728;level 1&#x4E2D;file1&#x6CA1;&#x6709;&#x67E5;&#x627E;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x5728;level2&#x4E2D;&#x53EF;&#x4EE5;&#x6392;&#x9664;file3&#x4EE5;&#x540E;&#x7684;file&#x3002;&#x8FD9;&#x79CD;&#x6392;&#x9664;&#x548C;level&#x7ED3;&#x6784;&#x6709;&#x70B9;&#x50CF;<a href="http://blog.mrriddler.com/2016/11/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">&#x533A;&#x95F4;&#x6811;</a>&#x3002;&#x57FA;&#x4E8E;&#x6B64;&#x601D;&#x60F3;&#xFF0C;&#x5728;level compact&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;file&#x6DFB;&#x52A0;&#x4E00;&#x7CFB;&#x5217;&#x6307;&#x5411;&#x4E0B;&#x4E00;level file&#x7684;&#x6307;&#x9488;&#xFF0C;&#x52A0;&#x5FEB;&#x67E5;&#x627E;&#x901F;&#x5EA6;&#x3002;</p><h3 id="Manifest"><a href="#Manifest" class="headerlink" title="Manifest"></a>Manifest</h3><p>&#x56E0;&#x4E3A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x539F;&#x5B50;&#x6027;&#xFF0C;&#x6240;&#x4EE5;RocksDB&#x5BF9;file&#x7684;&#x66F4;&#x6539;&#x4E5F;&#x4F1A;&#x8BB0;&#x5F55;log&#xFF0C;&#x5C31;&#x8BB0;&#x5F55;&#x5728;manifest&#x91CC;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;manifest&#x770B;&#x505A;&#xFF0C;&#x8BB0;&#x5F55;&#x7684;&#x662F;RocksDB&#x7684;&#x72B6;&#x6001;&#x3002;manifest&#x8BB0;&#x5F55;&#x7684;&#x5185;&#x5BB9;&#x5C31;&#x6210;&#x4E86;RocksDB&#x6309;&#x65F6;&#x95F4;&#x6392;&#x5E8F;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;&#xFF0C;&#x5C06;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x770B;&#x505A;RocksDB&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x7684;&#x5FEB;&#x7167;&#xFF0C;manifest&#x5C31;&#x662F;RocksDB&#x7684;&#x52A8;&#x56FE;GIF&#x3002;</p><h3 id="Cache"><a href="#Cache" class="headerlink" title="Cache"></a>Cache</h3><p>&#x6CA1;&#x6709;cache&#x7684;&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x662F;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#xFF0C;RocksDB&#x6709;&#x4E24;&#x79CD;cache&#xFF0C;block cache&#x548C;table cache&#x3002;&#x5148;&#x6765;&#x804A;&#x804A;block cache&#x3002;block cache&#x7F13;&#x5B58;&#x7684;&#x5355;&#x4F4D;&#x5C31;&#x662F;sstfile&#x7684;data block&#xFF0C;&#x8FD9;&#x79CD;cache&#x6709;&#x4E24;&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x7ECF;&#x5178;&#x7684;LRU&#x548C;clock&#xFF0C;&#x4EFB;&#x7531;&#x4F60;&#x9009;&#x62E9;&#x3002;&#x9664;&#x4E86;data block&#xFF0C;&#x7528;&#x4E8E;&#x7D22;&#x5F15;&#x548C;&#x63D0;&#x9AD8;&#x8BFB;&#x6027;&#x80FD;&#x7684;index block&#x548C;filter block&#x66F4;&#x662F;&#x91CD;&#x70B9;&#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;RocksDB&#x5E76;&#x4E0D;&#x4F1A;&#x628A;&#x8FD9;&#x4FE9;&#x653E;&#x5728;block cache&#x4E2D;&#xFF0C;RocksDB&#x4F1A;&#x5355;&#x72EC;&#x7167;&#x987E;&#x597D;&#x8FD9;&#x4FE9;&#xFF0C;&#x57FA;&#x672C;&#x4E0D;&#x7528;&#x5916;&#x90E8;&#x64CD;&#x5FC3;&#x3002;&#x800C;table cache&#x7F13;&#x5B58;&#x7684;&#x662F;sstfile&#x7684;file descriptor&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x901A;&#x8FC7;file descriptor&#x7528;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x7BA1;&#x7406;file&#x7ED3;&#x6784;&#x4F53;&#x548C;&#x5176;&#x80CC;&#x540E;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;table cache&#x7F13;&#x5B58;&#x7684;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7528;&#x6765;&#x64CD;&#x4F5C;sstfile&#x7684;file&#x7ED3;&#x6784;&#x4F53;&#x548C;&#x5176;&#x80CC;&#x540E;&#x8D44;&#x6E90;&#xFF0C;&#x66F4;&#x591A;&#x5173;&#x4E8E;file descriptor&#x7ED3;&#x6784;&#xFF0C;<a href="http://cuckootan.me/2015/04/18/Linux/%E8%BF%9B%E7%A8%8B%E6%89%93%E5%BC%80%E5%8F%8A%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%87%E7%A8%8B/" target="_blank" rel="noopener">&#x63A8;&#x8350;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;</a>&#x3002;</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>&#x4EE5;&#x4E0B;&#x662F;&#x4F7F;&#x7528;RocksDB&#x7684;&#x4E00;&#x4E9B;&#x5EFA;&#x8BAE;&#xFF1A;</p><ul><li>RocksDB&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x662F;&#x5355;&#x53E5;&#x67C4;&#x5BF9;&#x591A;&#x7EBF;&#x7A0B;&#x3002;</li><li>Get&#x3001;Put&#x3001;Delete&#x7B49;&#x64CD;&#x4F5C;&#x4E0D;&#x9700;&#x8981;&#x64CD;&#x5FC3;&#x6570;&#x636E;&#x540C;&#x6B65;&#x95EE;&#x9898;&#xFF0C;&#x800C;Iterator&#x548C;WriteBatch&#x9700;&#x8981;&#x540C;&#x6B65;&#x63A7;&#x5236;&#x3002;</li><li>WriteBatch&#x7C7B;&#x4F3C;&#x4E8E;&#x4E8B;&#x52A1;&#xFF0C;&#x63D0;&#x4F9B;&#x5C06;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x62BD;&#x8C61;&#x4E3A;&#x5355;&#x4F4D;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x6B64;&#x5355;&#x4F4D;&#x662F;&#x539F;&#x5B50;&#x6027;&#x7684;&#xFF0C;&#x4F46;&#x5E76;&#x4E0D;&#x4F1A;&#x4E92;&#x76F8;&#x9694;&#x79BB;&#x4ECE;&#x800C;&#x5E76;&#x53D1;&#x63A7;&#x5236;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x68C0;&#x6D4B;&#x51FA;&#x5F02;&#x5E38;&#x5E76;&#x6062;&#x590D;&#x3002;</li></ul><p>&#x672C;&#x7BC7;&#x804A;&#x4E86;&#x5F88;&#x591A;RocksDB&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x3002;&#x7136;&#x800C;&#x6BD5;&#x7ADF;&#x5927;&#x591A;&#x6570;&#x5DE5;&#x7A0B;&#x5E08;&#x90FD;&#x662F;&#x9762;&#x5411;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x4F1A;&#x53BB;&#x641E;&#x4E2A;&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x603B;&#x7ED3;&#x51E0;&#x6761;&#x4ECE;LSM&#x3001;RocksDB&#x7B49;&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x4E2D;&#x5B66;&#x5230;&#x7684;&#x6709;&#x5173;&#x8BFB;&#x5199;IO&#x7684;&#x6280;&#x5DE7;&#xFF0C;&#x7406;&#x89E3;&#x4E86;&#x5927;&#x6709;&#x88E8;&#x76CA;&#x3002;</p><ul><li>&#x76F8;&#x5BF9;&#x4E8E;&#x8BA1;&#x7B97;&#x3001;&#x5185;&#x5B58;&#x8BFB;&#x53D6;&#xFF0C;&#x78C1;&#x76D8;IO&#x6162;&#x4E0D;&#x77E5;&#x591A;&#x5C11;&#x6570;&#x91CF;&#x7EA7;&#x3002;</li><li>&#x76F8;&#x5BF9;&#x4E8E;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x78C1;&#x76D8;IO&#xFF0C;&#x78C1;&#x76D8;IO&#x7684;&#x6570;&#x636E;&#x91CF;&#x591A;&#x5C11;&#x4E0D;&#x91CD;&#x8981;&#xFF0C;&#x4E5F;&#x5C31;&#x8BF4;&#x5F00;&#x59CB;&#x3001;&#x7ED3;&#x675F;&#x4E00;&#x6B21;&#x78C1;&#x76D8;IO&#x66F4;&#x8D39;&#x65F6;&#x3002;&#x5C3D;&#x91CF;&#x96C6;&#x4E2D;&#x5BF9;&#x78C1;&#x76D8;&#x8FDB;&#x884C;IO&#x3002;</li><li>&#x76F8;&#x5BF9;&#x4E8E;&#x78C1;&#x76D8;&#x968F;&#x673A;&#x8BFB;&#x5199;&#xFF0C;&#x78C1;&#x76D8;&#x987A;&#x5E8F;&#x8BFB;&#x5199;&#x5FEB;&#x4E0A;3&#x4E2A;&#x6570;&#x91CF;&#x7EA7;&#x3002;</li><li>&#x8BFB;&#x5199;&#x5206;&#x79BB;&#xFF0C;&#x51CF;&#x5C11;&#x5E76;&#x53D1;&#x9501;&#x7684;&#x6027;&#x80FD;&#x5F00;&#x9500;&#x3002;</li></ul><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>LSM&#xFF1A;<a href="https://www.zhihu.com/question/19887265" target="_blank" rel="noopener">https://www.zhihu.com/question/19887265</a></p><p>LSM&#x8BBA;&#x6587;&#xFF1A;<a href="http://www.cs.umb.edu/~poneil/lsmtree.pdf" target="_blank" rel="noopener">http://www.cs.umb.edu/~poneil/lsmtree.pdf</a></p><p>RocksDB Blog&#xFF1A;<a href="http://rocksdb.org/blog/" target="_blank" rel="noopener">http://rocksdb.org/blog/</a></p><p>RocksDB Wiki&#xFF1A;<a href="https://github.com/facebook/rocksdb/wiki" target="_blank" rel="noopener">https://github.com/facebook/rocksdb/wiki</a></p>]]></content>
      
      <categories>
          
          <category> 存储体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储体系 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Clang Plugin--Sherlock</title>
      <link href="/Clang%E6%8F%92%E4%BB%B6-Sherlock/"/>
      <url>/Clang%E6%8F%92%E4%BB%B6-Sherlock/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x5C31;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x5982;&#x4F55;&#x505A;&#x4E00;&#x4E2A;Clang Plugin&#x548C;&#x6211;&#x63D0;&#x4F9B;&#x7684;&#x9762;&#x5411;Objective-C&#x7684;&#x5F00;&#x6E90;&#x65B9;&#x6848;<strong>Sherlock</strong>&#x3002;&#x5BF9;&#x4E8E;Swift&#x5DF2;&#x6709;&#x5F00;&#x6E90;&#x65B9;&#x6848;<a href="https://github.com/realm/SwiftLint" target="_blank" rel="noopener">SwiftLint</a>&#x3002;</p><a id="more"></a><p>&#x6700;&#x8FD1;&#x9879;&#x76EE;&#x6B63;&#x5728;&#x5B8C;&#x5584;&#x4E00;&#x5957;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#xFF0C;&#x76F8;&#x6BD4;&#x4E8E;&#x7528;&#x7BA1;&#x7406;&#x4EBA;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x89C4;&#x5B9A;&#x5FC5;&#x987B;&#x8981;&#x600E;&#x4E48;&#x505A;&#xFF0C;&#x4E0D;&#x5982;&#x76F4;&#x63A5;&#x7528;&#x5DE5;&#x7A0B;&#x5316;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x8BA9;&#x7F16;&#x8BD1;&#x5668;&#x5E2E;&#x6211;&#x4EEC;&#x68C0;&#x67E5;&#xFF0C;<a href="http://tech.meituan.com/clean-code.html" target="_blank" rel="noopener">&#x66F4;&#x591A;&#x5173;&#x4E8E;CleanCode&#x7684;&#x5185;&#x5BB9;</a>&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x6216;&#x9759;&#x6001;&#x5206;&#x6790;(&#x8BED;&#x4E49;&#x5206;&#x6790;)&#x5165;&#x624B;&#xFF0C;&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x3002;&#x5BF9;&#x4E8E;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x547D;&#x540D;&#x3001;&#x7ED3;&#x6784;&#x3001;&#x5199;&#x6CD5;&#x4E0A;&#x7684;&#x89C4;&#x5B9A;&#xFF0C;&#x901A;&#x8FC7;&#x68C0;&#x67E5;&#x8BED;&#x6CD5;&#x7ED3;&#x6784;&#x5C31;&#x80FD;&#x641E;&#x5B9A;&#xFF0C;&#x4E0D;&#x7528;&#x7ED3;&#x5408;&#x8BED;&#x5883;&#x3002;&#x5E76;&#x4E14;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x76F8;&#x6BD4;&#x4E8E;&#x9759;&#x6001;&#x5206;&#x6790;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x66F4;&#x65E9;&#x7684;&#x9636;&#x6BB5;&#x66B4;&#x9732;&#x51FA;&#x95EE;&#x9898;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x9759;&#x6001;&#x5206;&#x6790;&#x7684;&#x8BDD;&#xFF0C;&#x5DF2;&#x6709;<a href="https://github.com/oclint/oclint" target="_blank" rel="noopener">OCLint</a>&#x5F00;&#x6E90;&#x65B9;&#x6848;&#x3002;&#x5BF9;&#x4E8E;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x8BDD;&#xFF0C;&#x901A;&#x8FC7;Clang Plugin&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#xFF0C;Clang Plugin&#x5C31;&#x662F;&#x4E00;&#x4E2A;Clang&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x524D;&#x7AEF;&#x63D2;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;Clang&#x63D0;&#x4F9B;&#x7684;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x73AF;&#x5883;&#x3002;&#x4E0D;&#x5F97;&#x4E0D;&#x8BF4;&#xFF0C;&#x7740;&#x5B9E;&#x4F69;&#x670D;&#x6EF4;&#x6EF4;&#xFF0C;&#x65E9;&#x5728;&#x8FD9;&#x65B9;&#x9762;&#x505A;&#x8FC7;&#x63A2;&#x7D22;&#xFF0C;&#x76F8;&#x5173;<a href="https://kangwang1988.github.io/tech/2016/10/31/write-your-first-clang-plugin.html" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#x3002;</p><p>&#x867D;&#x8BF4;&#xFF0C;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#x4E0D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x4E07;&#x91D1;&#x6CB9;&#x5F00;&#x6E90;&#x65B9;&#x6848;&#xFF0C;&#x7136;&#x540E;&#x56E2;&#x961F;&#x76F4;&#x63A5;&#x4E0A;&#x624B;&#x4F7F;&#x7528;&#xFF0C;&#x6BCF;&#x4E2A;&#x56E2;&#x961F;&#x90FD;&#x8981;&#x6839;&#x636E;&#x81EA;&#x8EAB;&#x60C5;&#x51B5;&#xFF0C;&#x91CF;&#x8EAB;&#x5B9A;&#x505A;&#x56E2;&#x961F;&#x5185;&#x7684;&#x89C4;&#x8303;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x6709;&#x9AD8;&#x62D3;&#x5C55;&#x6027;&#x7684;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#x68C0;&#x67E5;&#x57FA;&#x7840;&#x5DE5;&#x5177;&#xFF0C;&#x4F9B;&#x4EFB;&#x4F55;&#x56E2;&#x961F;&#x5728;&#x5176;&#x4E0A;&#x9762;&#x8F7B;&#x677E;&#x505A;&#x5B9A;&#x5236;&#x3001;&#x62D3;&#x5C55;&#x3002;</p><h2 id="Clang-Plugin"><a href="#Clang-Plugin" class="headerlink" title="Clang Plugin"></a>Clang Plugin</h2><p>&#x5728;&#x5236;&#x4F5C;&#x81EA;&#x5DF1;&#x7684;Clang Plugin&#x6216;&#x4F7F;&#x7528;Sherlock&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x8981;&#x627E;&#x4E00;&#x4E2A;&#x6837;&#x4F8B;&#x5DE5;&#x7A0B;&#xFF0C;&#x8BA9;Clang Plugin&#x6574;&#x5408;&#x5230;Xcode&#x4E2D;&#xFF0C;&#x628A;&#x6574;&#x4E2A;&#x6574;&#x5408;&#x8FC7;&#x7A0B;&#x6D41;&#x7545;&#x7684;&#x8DD1;&#x901A;&#x3002;&#x8FD9;&#x6709;&#x547D;&#x4EE4;&#x884C;&#x548C;&#x751F;&#x6210;Xcode&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x539F;&#x7406;&#x90FD;&#x4E00;&#x6837;&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8BD5;&#x8BD5;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5C31;&#x53C2;&#x8003;&#x6EF4;&#x6EF4;&#x7684;&#x90A3;&#x7BC7;&#x6587;&#x7AE0;&#x3002;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x662F;Xcode&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x66F4;&#x52A0;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;&#x4EE3;&#x7801;&#x3002;&#x6574;&#x4E2A;&#x63D2;&#x5165;&#x8FC7;&#x7A0B;&#x90FD;&#x662F;&#x53C2;&#x7167;&#x8FD9;&#x7BC7;<a href="http://railsware.com/blog/2014/02/28/creation-and-using-clang-plugin-with-xcode/" target="_blank" rel="noopener">&#x6587;&#x7AE0;</a>&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x5199;&#x7684;&#x65F6;&#x95F4;&#x5728;2014&#x5E74;&#xFF0C;clang&#x5F53;&#x65F6;&#x7684;&#x7248;&#x672C;&#x8FD8;&#x662F;3.3&#xFF0C;&#x6211;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#x5DF2;&#x7ECF;&#x662F;2017&#x5E74;&#xFF0C;clang&#x7684;&#x7248;&#x672C;&#x4E3A;3.9&#x3002;&#x6587;&#x7AE0;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x6B65;&#x9AA4;&#x9700;&#x8981;&#x5C0F;&#x6539;&#x4E00;&#x4E0B;&#x3002;</p><p>&#x6574;&#x4F53;&#x7684;&#x6D41;&#x7A0B;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x5148;&#x5C06;LLVM&#x548C;Clang&#x6E90;&#x7801;&#x5148;clone&#x4E0B;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;cmake&#x5DE5;&#x5177;&#x7F16;&#x8BD1;&#x4E00;&#x904D;&#xFF0C;&#x786E;&#x4FDD;&#x6CA1;&#x95EE;&#x9898;&#x3002;&#x518D;&#x5C06;&#x4F60;&#x5199;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x901A;&#x8FC7;cmake&#x5DE5;&#x5177;&#x7F16;&#x8BD1;&#x4E00;&#x904D;&#xFF0C;&#x751F;&#x6210;dylib&#x3002;&#x4F60;&#x5199;&#x7684;&#x63D2;&#x4EF6;&#x7531;&#x4E8E;&#x9700;&#x8981;&#x5F15;&#x7528;Clang&#x63D0;&#x4F9B;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5728;&#x751F;&#x6210;dylib&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4E0E;Clang&#x548C;LLVM&#x7684;&#x4E00;&#x4E9B;lib&#x94FE;&#x63A5;&#xFF0C;&#x6240;&#x4EE5;&#x8981;clone&#x4E0B;&#x6765;&#x6E90;&#x7801;&#x3002;&#x5F97;&#x5230;dylib&#x540E;&#xFF0C;&#x5728;Xcode&#x7684;Plugin&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x52A0;&#x5165;HackedClang.xcplugin&#x548C;HackedBuildSystem.xcspec&#x3002;&#x6700;&#x540E;&#xFF0C;&#x5728;&#x4F60;&#x9700;&#x8981;&#x52A0;&#x5165;Plugin&#x7684;&#x5DE5;&#x7A0B;&#x4E2D;&#x52A0;&#x5165;dylib&#xFF0C;&#x914D;&#x7F6E;&#x4E00;&#x4E0B;&#x5C31;&#x884C;&#x4E86;&#x3002;&#x4E0B;&#x9762;&#x76F4;&#x63A5;&#x8FDB;&#x5165;&#x547D;&#x4EE4;&#x884C;&#x5F00;&#x59CB;&#xFF1A;</p><pre><code class="lang-shell">cd /&#x653E;llvm&#x548C;clang&#x6E90;&#x7801;&#x7684;&#x6839;&#x8DEF;&#x5F84;sudo mkdir llvmsudo chown `&#x4F60;&#x7684;&#x7528;&#x6237;&#x540D;` llvmcd llvmexport LLVM_HOME=`pwd`git clone -b release_39 https://github.com/llvm-mirror/llvm.git llvmgit clone -b release_39 https://github.com/llvm-mirror/clang.git llvm/tools/clanggit clone -b release_39 https://github.com/llvm-mirror/clang-tools-extra.git llvm/tools/clang/tools/extragit clone -b release_39 https://github.com/llvm-mirror/compiler-rt.git llvm/projects/compiler-rtmkdir llvm_buildcd llvm_buildcmake ../llvm -DCMAKE_BUILD_TYPE:STRING=Releasemake -j`sysctl -n hw.logicalcpu`</code></pre><p>&#x63A5;&#x7740;&#x4E0B;&#x8F7D;&#x6587;&#x7AE0;&#x4E2D;&#x7684;<a href="https://github.com/AlexDenisov/ToyClangPlugin" target="_blank" rel="noopener">&#x6837;&#x4F8B;&#x5DE5;&#x7A0B;</a>&#x3002;&#x4EE5;&#x4E0B;&#x51E0;&#x70B9;&#x8981;&#x6CE8;&#x610F;&#xFF1A;</p><blockquote><p>&#x6CE8;&#x610F;clone&#x7684;&#x7248;&#x672C;&#xFF0C;release_39&#x662F;&#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x65F6;&#x7684;&#x6700;&#x65B0;&#x7248;&#x672C;3.9&#x3002;</p><p>&#x7531;&#x4E8E;LLVM&#x548C;Clang&#x7684;&#x7248;&#x672C;&#x53D8;&#x52A8;&#xFF0C;&#x4EE5;&#x524D;&#x7684;&#x4E00;&#x4E9B;lib&#x4E0D;&#x9700;&#x8981;&#x518D;&#x94FE;&#x63A5;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x65B0;&#x7248;&#x672C;&#x57FA;&#x4E8E;c++11&#xFF0C;&#x9700;&#x8981;&#x5BF9;CMakeList&#x505A;&#x4EE5;&#x4E0B;&#x4FEE;&#x6539;&#xFF1A;</p><ul><li>&#x6CE8;&#x610F;&#x66FF;&#x6362;&#x4F60;&#x8BBE;&#x7F6E;&#x7684;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x786E;&#x4FDD;CMakeList&#x4E2D;&#x7684;&#x56DB;&#x4E2A;include&#x90FD;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x3002;</li><li>set (LLVM_LIBS&#xFF09;&#x5220;&#x6389;LLVMJIT&#x3001;LLVMipa</li><li>set (USER_LIBS&#xFF09;&#x52A0;&#x5165;z(&#x538B;&#x7F29;lib)</li><li>&#x52A0;&#x5165;set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD &#x201C;c++11&#x201D;)</li><li>&#x52A0;&#x5165;set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY &#x201C;libc++&#x201D;)</li></ul></blockquote><p>&#x7136;&#x540E;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x751F;&#x6210;Xcode&#xFF1A;</p><pre><code class="lang-shell">mkdir buildcd buildcmake -G Xcode ..open ToyClangPlugin.xcodeproj</code></pre><p>&#x7136;&#x540E;build&#xFF0C;&#x6210;&#x529F;&#x540E;&#x53EF;&#x4EE5;&#x5728;lib/Debug/&#x76EE;&#x5F55;&#x4E0B;&#x627E;&#x5230;dylib&#x3002;</p><p>&#x7136;&#x540E;&#x4E0B;&#x8F7D;<a href="https://github.com/AlexDenisov/ToyClangPlugin/releases/download/0.0.1/XcodeHacking.zip" target="_blank" rel="noopener">HackXcodeing</a>&#xFF0C;&#x5E76;&#x4E14;&#x6CE8;&#x610F;&#x4EE5;&#x4E0B;&#x4E24;&#x70B9;&#xFF1A;</p><blockquote><p>&#x5C06;HackXcodeing&#x4E2D;&#x7684;ExecPath&#x4E2D;&#x7684;&#x6839;&#x8DEF;&#x5F84;&#x66F4;&#x6539;&#x4E3A;&#x4F60;&#x7684;&#x6839;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x5C06;HackedClang.xcspec&#x6587;&#x4EF6;&#x4E2D;&#x7684;NO  = ( &#x201C;-Wno-receiver-is-weak&#x201D; );  &#x66F4;&#x6539;&#x4E3A;NO  = ();</p></blockquote><p>HackXcodeing&#x6E90;&#x6587;&#x4EF6;&#x4F5C;&#x8005;&#x7F72;&#x540D;&#x662F;Apple&#xFF0C;&#x4F46;&#x662F;&#x7F51;&#x4E0A;&#x67E5;&#x4E0D;&#x5230;&#x539F;&#x51FA;&#x5904;&#xFF0C;Apple&#x5B98;&#x65B9;&#x5E94;&#x8BE5;&#x6CA1;&#x6709;&#x6446;&#x660E;&#x652F;&#x6301;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x4F46;&#x8FD9;&#x548C;&#x7EBF;&#x4E0A;App&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x53EF;&#x4EE5;&#x653E;&#x5FC3;&#x7528;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x4EE5;&#x540E;Xcode&#x5347;&#x7EA7;&#x53EF;&#x80FD;&#x4F1A;ban&#x6389;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x52A0;&#x5165;&#x5230;Xcode&#x7684;&#x63D2;&#x4EF6;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x3002;</p><pre><code class="lang-shell">sudo mv HackedClang.xcplugin `xcode-select -print-path`/../PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library/Xcode/Plug-inssudo mv HackedBuildSystem.xcspec `xcode-select -print-path`/Platforms/iPhoneSimulator.platform/Developer/Library/Xcode/Specifications</code></pre><blockquote><p>&#x6CE8;&#x610F;&#xFF0C;&#x539F;&#x6587;&#x4E2D;&#x6709;&#x4E00;&#x6B65;&#x662F;&#x5173;&#x6389;language Modules&#xFF0C;&#x4E0D;&#x8981;&#x505A;&#x8FD9;&#x4E00;&#x6B65;&#x3002;</p></blockquote><p>&#x63A5;&#x7740;&#xFF0C;&#x5728;Compiler for C/C++/Objective-C&#x4E2D;&#x9009;&#x62E9;Clang LLVM Trunk&#xFF1A;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/xcode_clangplugin_compiler.png" alt="xcode_clangplugin_compiler"></p><p>&#x6700;&#x540E;&#xFF0C;&#x5728;OTHER_CFLAGS&#x4E2D;&#x52A0;&#x5165;dylib&#x7684;&#x8DEF;&#x5F84;&#xFF1A;</p><pre><code class="lang-shell">-Xclang -load -Xclang /&#x653E;llvm&#x548C;clang&#x6E90;&#x7801;&#x7684;&#x6839;&#x8DEF;&#x5F84;/llvm/toy_clang_plugin/build/lib/Debug/ToyClangPlugin.dylib -Xclang -add-plugin -Xclang ToyClangPlugin</code></pre><p><img src="http://o79rgqboc.bkt.clouddn.com/xcode_clangplugin_flags.png" alt="xcode_clangplugin_flags"></p><p>run&#x4E00;&#x4E0B;&#x4F60;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x63D2;&#x4EF6;&#x6210;&#x529F;&#x63D2;&#x5165;&#x4E86;&#x3002;</p><h2 id="Sherlock"><a href="#Sherlock" class="headerlink" title="Sherlock"></a>Sherlock</h2><blockquote><p>Yep, This is &#x201C;the detective&#x201D;, the one with a magnifying glass.</p></blockquote><p>Sherlock&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x9AD8;&#x62D3;&#x5C55;&#x6027;&#x7684;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#x68C0;&#x67E5;&#x57FA;&#x7840;&#x5DE5;&#x5177;&#xFF0C;&#x60A8;&#x7684;&#x56E2;&#x961F;&#x53EF;&#x4EE5;&#x5728;Sherlock&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x8F7B;&#x677E;&#x505A;&#x5B9A;&#x5236;&#x3001;&#x62D3;&#x5C55;&#x3002;Sherlock&#x662F;&#x4E00;&#x4E2A;C++&#x5199;&#x7684;Clang Plugin&#xFF0C;&#x9762;&#x5411;&#x68C0;&#x67E5;Objective-C&#x4EE3;&#x7801;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x4F7F;&#x7528;Sherlock&#x524D;&#x5FC5;&#x987B;&#x8981;&#x5148;&#x5C06;Clang Plugin&#x6574;&#x5408;&#x5230;Xcode&#x4E2D;&#x3002;</p><h3 id="buildIn-base-rule"><a href="#buildIn-base-rule" class="headerlink" title="buildIn base rule"></a>buildIn base rule</h3><p>&#x9996;&#x5148;&#x770B;&#x770B;Sherlock&#x63D0;&#x4F9B;&#x7684;&#x57FA;&#x672C;&#x89C4;&#x5219;&#xFF0C;&#x9996;&#x5148;&#x662F;&#x7ED9;Warning&#x7684;:</p><ul><li>interface<em>illegal_character&#xFF1A;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#x547D;&#x540D;&#x4E2D;&#x6709;&#x201D;</em>&#x201C;&#x3002;</li><li>project_prefix&#xFF1A;&#x9879;&#x76EE;&#x4E2D;&#x95F4;&#x63A5;&#x6216;&#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x81EA;UIVIewController&#x7684;controller&#x547D;&#x540D;&#x6CA1;&#x6709;&#x4EE5;XX&#x5F00;&#x5934;&#x3002;</li><li>property_atomic&#xFF1A;&#x5C5E;&#x6027;&#x58F0;&#x660E;&#x4E3A;atomic&#x3002;</li><li>property_unsafe&#xFF1A;&#x5C5E;&#x6027;&#x58F0;&#x660E;&#x4E3A;unsafe_unretained&#x3002;</li><li>property_copy&#xFF1A;NSArray&#x3001;NSNumber&#x3001;NSString&#x3001;block&#x7C7B;&#x578B;&#x5C5E;&#x6027;&#x58F0;&#x660E;&#x4E0D;&#x4E3A;copy&#x3002;</li><li>weak_protocol&#xFF1A;protocol&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x58F0;&#x660E;&#x4E0D;&#x4E3A;weak&#x3002;</li><li>category<em>method_naming&#xFF1A;&#x7ED9;&#x7CFB;&#x7EDF;&#x7C7B;&#x6DFB;&#x52A0;&#x7684;Category&#x65B9;&#x6CD5;&#x547D;&#x540D;&#x6CA1;&#x6709;&#x4EE5;XX</em>&#x5F00;&#x5934;&#x3002;</li><li>initializer_design&#xFF1A;&#x7C7B;&#x6CA1;&#x6709;&#x7528;Designated Initializer&#x8BBE;&#x8BA1;init&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;&#x3002;</li></ul><p>&#x7136;&#x540E;&#x662F;&#x76F4;&#x63A5;&#x7ED9;Error&#x7684;&#xFF1A;</p><ul><li>mutable_property_copy&#xFF1A;&#x53EF;&#x53D8;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5C5E;&#x6027;&#x58F0;&#x660E;&#x4E3A;copy&#x3002;(copy&#x4F1A;&#x5236;&#x4F5C;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x53D8;&#x6570;&#x636E;&#x6DF1;&#x590D;&#x5236;)</li><li>weak_proxy&#xFF1A;&#x8C03;&#x7528;NSTimer&#x6216;CADisplayLink&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5C06;self&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x3002;(&#x5BB9;&#x6613;&#x5F15;&#x8D77;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528;WeakProxy)</li><li>super_call&#xFF1A;&#x8C03;&#x7528;[super respondsToSelector:]&#x6216;[super conformsToProtocol:]&#x3002;(&#x8FD9;&#x6837;&#x8C03;&#x7528;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x68C0;&#x67E5;&#x81EA;&#x5DF1;&#x662F;&#x5426;&#x5B9E;&#x73B0;&#xFF0C;&#x6CA1;&#x610F;&#x4E49;)</li><li>observe_pairing&#xFF1A;&#x5728;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x5355;&#x4F4D;&#x4E2D;&#xFF0C;&#x6DFB;&#x52A0;NSNotificationCenter&#x6216;KVO&#x7684;&#x89C2;&#x5BDF;&#x8005;&#x548C;&#x79FB;&#x9664;&#x89C2;&#x5BDF;&#x8005;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x91CF;&#x4E0D;&#x914D;&#x5BF9;&#x3002;(&#x5FD8;&#x8BB0;&#x79FB;&#x9664;&#x89C2;&#x5BDF;&#x8005;)</li></ul><h3 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h3><p>&#x4F7F;&#x7528;Sherlock&#x524D;&#x4F60;&#x9700;&#x8981;&#x5728;SherlockConfigure.hpp&#x6587;&#x4EF6;&#x4E2D;&#x4FEE;&#x6539;ProjectAbsoluteRootPath&#x4E3A;&#x9879;&#x76EE;&#x7684;&#x6839;&#x8DEF;&#x5F84;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x811A;&#x672C;&#x7684;&#x8DEF;&#x5F84;&#x7ED9;RuleAbsolutePath&#x5B57;&#x6BB5;&#xFF0C;&#x5728;&#x811A;&#x672C;&#x4E2D;&#x8FDB;&#x884C;Configure&#x3002;&#x73B0;&#x5728;&#x652F;&#x6301;&#x7684;Configure&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x9879;&#xFF1A;</p><ul><li>disabled_rules&#xFF1A;&#x5C06;&#x89C4;&#x5219;&#x540D;&#x79F0;&#x4EE5;&#x201D;-&#x201C;&#x5F00;&#x5934;&#xFF0C;&#x7D27;&#x8DDF;&#x7A7A;&#x683C;&#xFF0C;&#x5982;- initializer_design&#xFF0C;&#x53EF;&#x4EE5;&#x5173;&#x6389;&#x76F8;&#x5E94;&#x7684;&#x89C4;&#x5219;&#x3002;</li><li>force_cast&#xFF1A;&#x53EF;&#x4EE5;&#x952E;&#x5165;Error&#x6216;Warning&#xFF0C;&#x5F3A;&#x5236;&#x6240;&#x6709;rule&#x62A5;&#x544A;&#x9519;&#x8BEF;&#x6216;&#x662F;&#x8B66;&#x544A;&#x3002;</li><li>project_prefix&#xFF1A;&#x952E;&#x5165;&#x6BD4;&#x5982;Sherlock&#xFF0C;&#x63D0;&#x4F9B;&#x9879;&#x76EE;&#x7684;&#x524D;&#x7F00;&#x540D;&#x3002;</li><li>blacklist_path&#xFF1A;&#x952E;&#x5165;&#x6BD4;&#x5982;- Pods&#xFF0C;&#x5FFD;&#x7565;&#x6240;&#x6709;&#x9879;&#x76EE;&#x4E2D;Pods&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x3002;</li><li>blacklist_prefix&#xFF1A;&#x952E;&#x5165;&#x6BD4;&#x5982;- AF&#xFF0C;&#x5FFD;&#x7565;&#x6240;&#x6709;Interface&#x3001;Extension&#x3001;implementation&#x3001;Category&#x4EE5;AF&#x4F5C;&#x4E3A;&#x524D;&#x7F00;&#x7684;&#x4EE3;&#x7801;&#x3002;</li></ul><p>&#x6CE8;&#x610F;&#xFF0C;&#x6240;&#x6709;&#x4EE5;- &#x5F00;&#x5934;&#x4EE3;&#x8868;&#x7684;&#x591A;&#x4E2A;&#x9009;&#x9879;&#x5FC5;&#x987B;&#x4EE5;&#x53E6;&#x8D77;&#x4E00;&#x884C;~end&#x7ED3;&#x675F;&#x3002;&#x6837;&#x4F8B;Configure&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code class="lang-shell">disabled_rules:  - interface_illegal_character  - project_prefix  - property_atomic  - property_unsafe   - property_copy  - weak_protocol  - category_method_naming  - initializer_design  - mutable_property_copy  - weak_proxy  - super_call  - observe_pairing  ~endforce_report: Warningproject_prefix: Sherlockblacklist_path:  - Pods  - ThirdPart  ~endblacklist_prefix:  - AF  - SD  - FM  - YY  ~end</code></pre><p>&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x5FFD;&#x7565;&#x6240;&#x6709;Pod&#x4E0B;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#xFF0C;&#x53EA;&#x5728;blacklist_path&#x4E2D;&#x52A0;&#x5165;- Pods&#x662F;&#x884C;&#x4E0D;&#x901A;&#x7684;&#x3002;&#x9884;&#x5904;&#x7406;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5C06;&#x5F15;&#x5165;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x5408;&#x5E76;&#xFF0C;&#x4EFB;&#x610F;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x5F15;&#x5165;&#x7B2C;&#x4E09;&#x65B9;&#xFF0C;&#x90FD;&#x4F1A;&#x5BFC;&#x81F4;&#x7B2C;&#x4E09;&#x65B9;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x88AB;&#x68C0;&#x67E5;&#x3002;&#x5982;&#x679C;&#x60F3;&#x8981;&#x5B8C;&#x5168;&#x5FFD;&#x7565;&#x7B2C;&#x4E09;&#x65B9;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x8981;&#x5728;blacklist_prefix&#x52A0;&#x5165;&#x524D;&#x7F00;&#x3002;</p><h3 id="CustomRule"><a href="#CustomRule" class="headerlink" title="CustomRule"></a>CustomRule</h3><p>Sherlock&#x63D0;&#x4F9B;&#x4E86;&#x826F;&#x597D;&#x7684;&#x62D3;&#x5C55;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x4E00;&#x4E2A;clang&#x7684;AST&#x77E5;&#x8BC6;&#x624D;&#x80FD;&#x7F16;&#x5199;&#x68C0;&#x67E5;&#x89C4;&#x5219;&#x4EE3;&#x7801;&#x3002;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x65B0;&#x89C4;&#x5219;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x6B65;&#xFF1A;</p><ul><li>&#x4E3A;&#x65B0;&#x7684;&#x89C4;&#x5219;&#x53D6;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x4E0E;&#x539F;&#x6709;&#x89C4;&#x5219;&#x4E0D;&#x80FD;&#x91CD;&#x540D;&#xFF0C;&#x540D;&#x5B57;&#x5C06;&#x4F5C;&#x4E3A;&#x89C4;&#x5219;&#x7684;&#x8BC6;&#x522B;&#x3002;&#x7136;&#x540E;&#x52A0;&#x5165;&#x5230;SherlockConfigure.hpp&#x6587;&#x4EF6;&#x4E2D;&#x7684;buildInBaseRules&#x7ED3;&#x6784;&#x91CC;&#x3002;</li><li>&#x5728;Sherlock.cpp&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x65B9;&#x6CD5;&#x7F16;&#x5199;&#x68C0;&#x67E5;&#x89C4;&#x5219;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x5730;&#x65B9;&#x8C03;&#x7528;isBuildInBaseRuleEnable&#x65B9;&#x6CD5;&#x67E5;&#x770B;&#x662F;&#x5426;&#x88AB;&#x5173;&#x95ED;&#x3002;</li></ul><p>&#x5982;&#x679C;&#x6709;&#x66F4;&#x591A;&#x7684;&#x81EA;&#x5B9A;&#x4E49;Configure&#xFF0C;&#x4ECE;SherlockParser.hpp&#x4E2D;&#x7684;tupleRuleMap&#x6216;setRuleMap&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;</p><h2 id="&#x7F16;&#x5199;Clang-Plugin&#x7684;&#x201C;&#x62E6;&#x8DEF;&#x864E;&#x201D;"><a href="#&#x7F16;&#x5199;Clang-Plugin&#x7684;&#x201C;&#x62E6;&#x8DEF;&#x864E;&#x201D;" class="headerlink" title="&#x7F16;&#x5199;Clang Plugin&#x7684;&#x201C;&#x62E6;&#x8DEF;&#x864E;&#x201D;"></a>&#x7F16;&#x5199;Clang Plugin&#x7684;&#x201C;&#x62E6;&#x8DEF;&#x864E;&#x201D;</h2><p>&#x5F53;&#x7136;&#xFF0C;&#x5728;&#x5199;Sherlock&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x9047;&#x5230;&#x4E86;&#x201C;&#x62E6;&#x8DEF;&#x864E;&#x201D;&#xFF0C;&#x8FD9;&#x91CC;&#x548C;&#x5927;&#x5BB6;&#x5206;&#x4EAB;&#x4E00;&#x4E0B;&#x3002;</p><ul><li>Clang Plugin&#x5FC5;&#x987B;&#x7528;C++&#x5199;&#x3002;</li><li>&#x5FC5;&#x987B;&#x719F;&#x6089;Clang&#x5F00;&#x653E;&#x7684;API&#xFF0C;Clang&#x6709;&#x6587;&#x6863;&#xFF0C;&#x4F46;&#x662F;&#x89E3;&#x91CA;&#x8BED;&#x8A00;&#x6BD4;&#x8F83;&#x7B80;&#x77ED;&#xFF0C;&#x5149;&#x770B;&#x6587;&#x6863;&#x5F97;&#x5230;&#x7684;&#x4FE1;&#x606F;&#x6709;&#x9650;&#x3002;</li><li>&#x65E0;&#x6CD5;&#x5FEB;&#x901F;&#x6253;&#x5370;&#x51FA;&#x6240;&#x9700;&#x7684;Debug&#x4FE1;&#x606F;&#x3002;</li><li>&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x80FD;&#x529B;&#x6709;&#x9650;&#xFF0C;&#x6CA1;&#x6709;&#x7A0B;&#x5E8F;&#x4E0A;&#x4E0B;&#x6587;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E0D;&#x80FD;&#x8DE8;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x5171;&#x4EAB;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6CA1;&#x6709;&#x8DE8;&#x7F16;&#x8BD1;&#x5355;&#x5143;&#x7684;&#x5168;&#x5C40;&#x6570;&#x636E;&#x3002;</li></ul><p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x524D;&#x4E09;&#x70B9;&#x90FD;&#x80FD;&#x6162;&#x6162;&#x514B;&#x670D;&#x3002;C++&#x53EA;&#x8981;&#x4F1A;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x8BED;&#x6CD5;&#x5C31;&#x80FD;&#x5FEB;&#x901F;&#x4E0A;&#x624B;&#xFF0C;&#x5E76;&#x4E0D;&#x590D;&#x6742;&#x3002;&#x5149;&#x770B;Clang&#x5F00;&#x53D1;&#x7684;&#x6587;&#x6863;&#x786E;&#x5B9E;&#x4E0D;&#x9760;&#x8C31;&#xFF0C;&#x66F4;&#x53EF;&#x9760;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x7528;clang -fmodules -fsyntax-only -Xclang -ast-dump&#x547D;&#x4EE4;dump&#x51FA;AST&#x7136;&#x540E;&#x89C2;&#x5BDF;AST&#xFF0C;&#x518D;&#x53BB;&#x6E90;&#x7801;&#x770B;&#x770B;&#x76F8;&#x5E94;&#x7C7B;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5F88;&#x5FEB;&#x4E5F;&#x80FD;&#x719F;&#x6089;Clang&#x5F00;&#x653E;&#x7684;API&#x3002;&#x5173;&#x4E8E;&#x65E0;&#x6CD5;&#x5FEB;&#x901F;&#x6253;&#x5370;&#x51FA;&#x6240;&#x9700;&#x7684;Debug&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x91CC;&#x63D0;&#x4E00;&#x4E2A;&#x5EFA;&#x8BAE;&#x5C31;&#x662F;&#x60F3;&#x529E;&#x6CD5;&#x628A;Debug&#x4FE1;&#x606F;&#x5F53;&#x505A;Warning&#x6253;&#x51FA;&#x6765;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x6700;&#x540E;&#x4E00;&#x70B9;&#xFF0C;Clang Plugin&#x672C;&#x6765;&#x5C31;&#x662F;&#x5728;&#x505A;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x9636;&#x6BB5;&#xFF0C;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x7684;&#x80FD;&#x529B;&#x3002;&#x5982;&#x679C;&#x6709;&#x66F4;&#x590D;&#x6742;&#x7684;&#x9700;&#x6C42;&#x505A;&#x4E0D;&#x4E86;&#xFF0C;&#x8BF7;&#x5148;&#x8003;&#x8651;&#x4E00;&#x4E0B;&#x662F;&#x4E0D;&#x662F;&#x56E0;&#x4E3A;&#x60F3;&#x5728;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x9636;&#x6BB5;&#x505A;&#x9759;&#x6001;&#x5206;&#x6790;&#x7684;&#x5DE5;&#x4F5C;&#x4E86;&#x3002;</p><h2 id="&#x63A8;&#x8350;&#x6587;&#x7AE0;"><a href="#&#x63A8;&#x8350;&#x6587;&#x7AE0;" class="headerlink" title="&#x63A8;&#x8350;&#x6587;&#x7AE0;"></a>&#x63A8;&#x8350;&#x6587;&#x7AE0;</h2><p>&#x5B98;&#x65B9;&#x6587;&#x6863; <a href="https://clang.llvm.org/docs/RAVFrontendAction.html" target="_blank" rel="noopener">https://clang.llvm.org/docs/RAVFrontendAction.html</a></p><p>AST <a href="https://jonasdevlieghere.com/understanding-the-clang-ast/" target="_blank" rel="noopener">https://jonasdevlieghere.com/understanding-the-clang-ast/</a></p>]]></content>
      
      <categories>
          
          <category> clang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clang </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据结构</title>
      <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x5E76;&#x4E0D;&#x5173;&#x6CE8;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x66F4;&#x52A0;&#x5173;&#x6CE8;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6709;&#x8DA3;&#x7684;&#x6027;&#x8D28;&#x3002;</p></blockquote><p>&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8868;&#x8FBE;&#x5143;&#x7D20;&#x7684;&#x987A;&#x5E8F;&#x5173;&#x7CFB;&#x3002;</p><p>&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8868;&#x8FBE;&#x5143;&#x7D20;&#x7684;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#x3002;</p><p>&#x56FE;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8868;&#x8FBE;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#x66F4;&#x5E7F;&#x6CDB;&#x7684;&#x5173;&#x7CFB;&#x3002;</p><a id="more"></a><h2 id="&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;"><a href="#&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;" class="headerlink" title="&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;"></a>&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;</h2><p>&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x6700;&#x7ECF;&#x5E38;&#x7528;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7C7B;&#x578B;&#xFF0C;&#x54C8;&#x5E0C;&#x8868;&#x66F4;&#x662F;&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6CA1;&#x6709;&#x4E4B;&#x4E00;&#x3002;</p><h3 id="&#x54C8;&#x5E0C;&#x8868;-HashTable"><a href="#&#x54C8;&#x5E0C;&#x8868;-HashTable" class="headerlink" title="&#x54C8;&#x5E0C;&#x8868;(HashTable)"></a>&#x54C8;&#x5E0C;&#x8868;(HashTable)</h3><p>&#x54C8;&#x5E0C;&#x8868;&#x89E3;&#x51B3;&#x78B0;&#x649E;(collision)&#x6709;&#x62C9;&#x94FE;&#x6CD5;(chaining)&#x548C;&#x5F00;&#x653E;&#x5BFB;&#x5740;&#x6CD5;(open addressing)&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x3002;&#x62C9;&#x94FE;&#x6CD5;&#x5C31;&#x662F;&#x53D1;&#x751F;&#x78B0;&#x649E;&#x7684;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;redis&#x3001;java&#x4E2D;&#x7684;JDK&#x3001;C++STL&#x4E2D;&#x7684;unoreder_map&#x5C31;&#x662F;&#x7528;&#x7684;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x5F00;&#x653E;&#x5BFB;&#x5740;&#x6CD5;&#x5C31;&#x662F;&#x78B0;&#x5230;&#x78B0;&#x649E;&#xFF0C;&#x7528;&#x4E00;&#x5E8F;&#x5217;(squence)&#x7684;&#x63A2;&#x67E5;(probing)&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x5143;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x6CA1;&#x6709;&#x78B0;&#x649E;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x67E5;&#x8BE2;&#x65F6;&#x4F7F;&#x7528;&#x540C;&#x6837;&#x5E8F;&#x5217;&#x7684;&#x63A2;&#x67E5;&#x67E5;&#x627E;&#x3002;&#x800C;&#x5E8F;&#x5217;&#x63A2;&#x67E5;&#x53C8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EBF;&#x6027;&#x63A2;&#x67E5;(linear probing)&#x3001;&#x4E8C;&#x6B21;&#x63A2;&#x67E5;(quadratic probing)&#x3001;&#x53CC;&#x91CD;&#x54C8;&#x5E0C;(double hashing)&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#xFF0C;&#x8FD9;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#x4E3B;&#x8981;&#x7684;&#x533A;&#x522B;&#x5C31;&#x5728;&#x4E8E;&#x63A2;&#x67E5;&#x6B21;&#x6570;&#x7684;&#x51FD;&#x6570;&#x548C;&#x8F85;&#x52A9;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x3002;python&#x5B9E;&#x73B0;&#x5B57;&#x5178;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x8FD9;&#x7528;&#x65B9;&#x5F0F;&#x3002;&#x7528;&#x62C9;&#x94FE;&#x6CD5;&#x89E3;&#x51B3;&#x78B0;&#x649E;&#x7684;&#x54C8;&#x5E0C;&#x8868;&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x9488;&#x5BF9;&#x7528;&#x62C9;&#x94FE;&#x6CD5;&#x89E3;&#x51B3;&#x78B0;&#x649E;&#x7684;&#x54C8;&#x5E0C;&#x8868;&#x804A;&#x4E00;&#x804A;&#x3002;</p><p>&#x9AD8;&#x6548;&#x7684;&#x54C8;&#x5E0C;&#x8868;&#x53D6;&#x51B3;&#x4E8E;&#x4E24;&#x70B9;&#xFF0C;&#x4E00;&#x70B9;&#x662F;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x5BFC;&#x81F4;&#x5143;&#x7D20;&#x5206;&#x6563;&#x7684;&#x5747;&#x5300;&#x7A0B;&#x5EA6;&#xFF0C;&#x5143;&#x7D20;&#x5206;&#x5E03;&#x6781;&#x4E0D;&#x5747;&#x5300;&#x7684;&#x54C8;&#x5E0C;&#x8868;&#x4F1A;&#x4ECE;&#x5E38;&#x6570;&#x7EA7;&#x8BBF;&#x95EE;&#x6D3B;&#x751F;&#x751F;&#x53D8;&#x6210;&#x4E86;&#x7EBF;&#x6027;&#x7EA7;&#x8BBF;&#x95EE;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x662F;&#x54C8;&#x5E0C;&#x8868;&#x6027;&#x80FD;&#x7684;&#x5173;&#x952E;&#x3002;&#x53E6;&#x4E00;&#x70B9;&#x662F;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x6269;&#x5BB9;&#x7B97;&#x6CD5;&#xFF0C;&#x7531;&#x4E8E;&#x6269;&#x5BB9;&#x662F;&#x5F88;&#x8017;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x5408;&#x9002;&#x7684;&#x6269;&#x5BB9;&#x7684;&#x9891;&#x7387;&#x4E5F;&#x662F;&#x9AD8;&#x6548;&#x54C8;&#x5E0C;&#x8868;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x70B9;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4ECE;&#x54C8;&#x5E0C;&#x8868;&#x7684;key&#x503C;&#x5230;&#x6620;&#x5C04;&#x5230;&#x67D0;&#x4E2A;&#x6876;&#xFF0C;&#x5206;&#x4E3A;&#x4E24;&#x6B65;&#x3002;&#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x4ECE;key&#x503C;&#x7684;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x6210;&#x975E;&#x8D1F;&#x6570;&#xFF0C;&#x8FD9;&#x6B65;&#x53EB;&#x505A;preHash&#x3002;&#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x624D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x5F97;&#x5230;&#x7684;&#x975E;&#x8D1F;&#x6570;&#x6620;&#x5C04;&#x5230;&#x67D0;&#x6876;&#x3002;</p><ul><li>preHash</li></ul><p>preHash&#x4E3B;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;mix&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#x5C3D;&#x91CF;&#x6D88;&#x9664;&#x8F93;&#x5165;&#x7684;&#x6A21;&#x5F0F;&#x3002;&#x8BA9;&#x8F93;&#x5165;&#x7684;&#x89C4;&#x5F8B;&#x6027;&#x4E0D;&#x53BB;&#x5F71;&#x54CD;hash&#x51FD;&#x6570;&#x540E;&#x7684;&#x5206;&#x914D;&#x3002;&#x6BD4;&#x8F83;&#x5E38;&#x7528;&#x7684;&#x662F;&#x5F00;&#x6E90;&#x7684;MurmurHash2&#x6216;&#x8005;djb&#x7B97;&#x6CD5;&#xFF0C;redis&#x3001;hadoop&#x7B49;&#x4F7F;&#x7528;&#x7684;&#x5C31;&#x662F;MurmurHash2&#x7B97;&#x6CD5;&#x3002;</p><ul><li>hash</li></ul><p>&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#x7684;hash&#x51FD;&#x6570;&#x6709;&#x9664;&#x6CD5;&#x8FD0;&#x7B97;&#x3002;&#x5C06;preHash&#x6240;&#x5F97;&#x7684;&#x975E;&#x8D1F;&#x6570;&#x4E0E;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x6876;&#x6570;&#x91CF;&#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#x3002;&#x4F46;&#x662F;&#x7531;&#x4E8E;%&#x8FD0;&#x7B97;&#xFF0C;&#x592A;&#x6162;&#x4E86;&#x3002;&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5229;&#x7528;&amp;&#x4F4D;&#x8FD0;&#x7B97;&#x6765;&#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#x3002;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x8FD0;&#x7B97;&#xFF1A;</p><pre><code class="lang-java">static int indexFor(int h, int length) { //length&#x4E3A;&#x6876;&#x7684;&#x6570;&#x91CF;     return h &amp; (length-1);  }</code></pre><p>python&#x4E2D;&#x7684;&#x5B57;&#x5178;&#x3001;redis&#x3001;JDK&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x8BA1;&#x7B97;&#x7684;&#xFF0C;&#x4E0D;&#x8FC7;JDK&#x8FD8;&#x9700;&#x8981;&#x5148;&#x5C06;preHash&#x6240;&#x5F97;&#x7684;&#x975E;&#x8D1F;&#x6570;&#x8FDB;&#x884C;&#x53F3;&#x79FB;16&#x4F4D;&#xFF0C;&#x518D;&#x4E0E;&#x53F3;&#x79FB;&#x540E;&#x7684;&#x6570;&#x8FDB;&#x884C;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#x3002;</p><pre><code class="lang-java">h ^ (h &gt;&gt;&gt; 16)</code></pre><p>JDK&#x8FD9;&#x6837;&#x505A;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x9AD8;&#x4F4D;&#x53C2;&#x4E0E;&#x5230;&#x8FD0;&#x7B97;&#x4E2D;&#x3002;</p><ul><li>&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x673A;</li></ul><p>&#x5F53;&#x54C8;&#x5E0C;&#x8868;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x5230;&#x8FBE;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x54C8;&#x5E0C;&#x8868;&#x4E2D;&#x7684;&#x78B0;&#x649E;&#x6570;&#x91CF;&#x5C31;&#x8DB3;&#x4EE5;&#x4F7F;&#x6027;&#x80FD;&#x6781;&#x5177;&#x4E0B;&#x964D;&#xFF0C;&#x8FD9;&#x65F6;&#x5C31;&#x8981;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#x3002;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x673A;&#x662F;&#x65F6;&#x95F4;&#x548C;&#x7A7A;&#x95F4;&#x7684;&#x6743;&#x8861;&#xFF0C;&#x65E2;&#x4E0D;&#x80FD;&#x9891;&#x53D1;&#x6269;&#x5BB9;&#xFF0C;&#x5BFC;&#x81F4;&#x54C8;&#x5E0C;&#x8868;&#x6027;&#x80FD;&#x964D;&#x4F4E;&#x3002;&#x53C8;&#x4E0D;&#x80FD;&#x4E00;&#x4E0B;&#x5B50;&#x5360;&#x8FC7;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x6D6A;&#x8D39;&#x6389;&#x8FC7;&#x591A;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x8FD9;&#x4E2A;&#x9608;&#x503C;&#x53EB;&#x505A;&#x8D1F;&#x8F7D;&#x56E0;&#x5B50;(load factor)&#xFF0C;&#x8D1F;&#x8F7D;&#x56E0;&#x5B50; = &#x73B0;&#x6709;&#x5143;&#x7D20;&#x6570;&#x91CF; / &#x6876;&#x6570;&#x91CF;&#x3002;unoreder_map&#x9ED8;&#x8BA4;&#x4E3A;1&#x3002;JDK&#x9ED8;&#x8BA4;&#x4E3A;0.75&#x3002;JDK&#x4E2D;&#x5934;&#x6587;&#x4EF6;&#x7684;&#x6CE8;&#x91CA;&#xFF1A;</p><blockquote><pre><code class="lang-java"> * &lt;p&gt;As a general rule, the default load factor (.75) offers a good * tradeoff between time and space costs.  Higher values decrease the * space overhead but increase the lookup cost (reflected in most of * the operations of the &lt;tt&gt;HashMap&lt;/tt&gt; class, including * &lt;tt&gt;get&lt;/tt&gt; and &lt;tt&gt;put&lt;/tt&gt;).  The expected number of entries in * the map and its load factor should be taken into account when * setting its initial capacity, so as to minimize the number of * rehash operations.  If the initial capacity is greater than the * maximum number of entries divided by the load factor, no rehash * operations will ever occur.</code></pre></blockquote><ul><li>&#x6269;&#x5BB9;&#x7684;&#x65B9;&#x6CD5;</li></ul><p>&#x6269;&#x5BB9;&#x53EF;&#x4EE5;&#x6574;&#x4F53;&#x6269;&#x5BB9;&#xFF0C;&#x4E00;&#x6B21;&#x6027;&#x5C06;&#x539F;&#x8868;&#x7684;&#x6876;&#x91CD;&#x65B0;&#x54C8;&#x5E0C;&#x5230;&#x65B0;&#x8868;&#x4E2D;&#xFF0C;&#x8FD9;&#x79CD;&#x6269;&#x5BB9;&#x65B9;&#x6CD5;&#x4F1A;&#x4E00;&#x76F4;&#x53EA;&#x7528;&#x4E00;&#x4E2A;&#x8868;&#x3002;&#x6216;&#x8005;&#x5206;&#x6CBB;&#x6269;&#x5BB9;&#xFF0C;&#x6BCF;&#x6B21;&#x5BF9;&#x54C8;&#x5E0C;&#x8868;&#x8FDB;&#x884C;&#x589E;&#x5220;&#x6539;&#x67E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x91CD;&#x65B0;&#x54C8;&#x5E0C;&#x4E00;&#x4E2A;&#x6876;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x6269;&#x5BB9;&#x65F6;&#x5E26;&#x6765;&#x7684;&#x4F4E;&#x6548;&#x7387;&#xFF0C;&#x8FD9;&#x79CD;&#x6269;&#x5BB9;&#x65B9;&#x6CD5;&#x5728;&#x6269;&#x5BB9;&#x671F;&#x95F4;&#x4F1A;&#x7528;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x8868;&#x548C;&#x4E00;&#x4E2A;&#x65E7;&#x8868;&#x3002;</p><ul><li>&#x6269;&#x5BB9;&#x7684;&#x91CF;</li></ul><p>&#x6269;&#x5BB9;&#x5230;&#x73B0;&#x6709;&#x5BB9;&#x91CF;&#x4E8C;&#x500D;&#xFF0C;&#x6216;&#x8005;&#x4EE5;2&#x7684;&#x6307;&#x6570;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#xFF0C;&#x8FD9;&#x540C;&#x6837;&#x662F;&#x65F6;&#x95F4;&#x4E0E;&#x7A7A;&#x95F4;&#x7684;&#x6743;&#x8861;&#x3002;</p><ul><li>&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x4E0D;&#x7406;&#x60F3;&#x65F6;&#x7684;&#x5E94;&#x5BF9;&#x7B56;&#x7565;</li></ul><p>&#x5728;&#x5B9E;&#x73B0;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3A;&#x907F;&#x514D;&#x4E0D;&#x7406;&#x60F3;&#x7684;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x5C06;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x6027;&#x80FD;&#x62D6;&#x57AE;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x3002;&#x5F53;&#x6876;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x8D85;&#x8FC7;&#x8FD9;&#x4E2A;&#x9608;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x8BA4;&#x4E3A;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x7684;&#x9009;&#x62E9;&#x6709;&#x95EE;&#x9898;&#x3002;&#x5728;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3A;&#x8FD9;&#x4E2A;&#x6876;&#x5EFA;&#x7ACB;&#x4E00;&#x9897;&#x7EA2;&#x9ED1;&#x6811;&#x6765;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002;JDK&#x4E2D;&#x7684;&#x9608;&#x503C;&#x4E3A;8&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x5982;&#x4F55;&#x8BA1;&#x7B97;&#x51FA;&#x9608;&#x503C;&#x4E3A;8&#x3002;</p><p>&#x7406;&#x60F3;&#x7684;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x4EE5;&#x4E0B;&#x4E09;&#x70B9;&#xFF1A;</p><ol><li>&#x5143;&#x7D20;&#x88AB;&#x5206;&#x914D;&#x5230;&#x67D0;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x6876;&#x662F;&#x5C0F;&#x6982;&#x7387;&#x4E8B;&#x4EF6;&#x3002;</li><li>&#x4E0D;&#x540C;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#xFF0C;&#x88AB;&#x5206;&#x914D;&#x5230;&#x54EA;&#x4E2A;&#x6876;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#x3002;</li><li>&#x5143;&#x7D20;&#x5206;&#x914D;&#x5230;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x6876;&#x7684;&#x6982;&#x7387;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x5373;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x53D7;&#x5230;&#x67D0;&#x79CD;&#x6A21;&#x5F0F;&#x7684;&#x5F71;&#x54CD;&#x3002;</li></ol><p>&#x8FD9;&#x4E09;&#x70B9;&#x6B63;&#x597D;&#x4F7F;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x88AB;&#x5206;&#x914D;&#x5230;&#x54EA;&#x4E2A;&#x6876;&#x8FD9;&#x4E00;&#x4E8B;&#x4EF6;&#xFF0C;&#x7B26;&#x5408;&#x6CCA;&#x677E;&#x5206;&#x5E03;&#x7684;&#x8981;&#x6C42;&#x3002;</p><p>&#x6CCA;&#x677E;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><center>$$P(X = x) = \frac{\lambda^{x} }{x!}e^{-x}$$</center><p>&#x8FD9;&#x4E00;&#x4E8B;&#x4EF6;&#x4E2D;x&#x4EE3;&#x8868;&#x6876;&#x4E2D;&#x5206;&#x914D;&#x5143;&#x7D20;&#x7684;&#x6570;&#x91CF;&#x3002;&#x3BB;&#x4EE3;&#x8868;&#x8868;&#x6876;&#x4E2D;&#x5E73;&#x5747;&#x88AB;&#x5206;&#x914D;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x3002;&#x6700;&#x540E;&#x6240;&#x5F97;&#x6876;&#x4E2D;&#x5206;&#x914D;x&#x6570;&#x91CF;&#x5143;&#x7D20;&#x7684;&#x6982;&#x7387;&#x3002;JDK&#x5934;&#x6587;&#x4EF6;&#x4E2D;&#x8BF4;&#x660E;&#x3BB;&#x4E3A;0.5&#x3001;x&#x4E3A;8&#x65F6;&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x4E3A;0.0000006&#x3002;&#x5728;hash&#x51FD;&#x6570;&#x8FD9;&#x4EF6;&#x4E8B;&#x4E0A;&#xFF0C;&#x53D1;&#x751F;&#x6982;&#x7387;&#x5C0F;&#x4E8E;0.0000001&#x88AB;&#x8BA4;&#x5B9A;&#x4E3A;&#x5C0F;&#x6982;&#x7387;&#x4E8B;&#x4EF6;&#xFF0C;9&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x5C0F;&#x4E8E;&#x5C0F;&#x6982;&#x7387;&#x4E8B;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;8&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x9608;&#x503C;&#x3002;&#x5F53;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x9009;&#x62E9;&#x7684;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5BFC;&#x81F4;&#x6876;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5927;&#x4E8E;8&#xFF0C;&#x8FD9;&#x65F6;&#x5F15;&#x5165;&#x7EA2;&#x9ED1;&#x6811;&#x5F25;&#x8865;&#x54C8;&#x5E0C;&#x51FD;&#x6570;&#x5E26;&#x6765;&#x7684;&#x4F4E;&#x6548;&#x7387;&#x3002;</p><p>JDK&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x5934;&#x6587;&#x4EF6;&#x8BF4;&#x660E;&#xFF1A;</p><pre><code class="lang-java">     * Because TreeNodes are about twice the size of regular nodes, we     * use them only when bins contain enough nodes to warrant use     * (see TREEIFY_THRESHOLD). And when they become too small (due to     * removal or resizing) they are converted back to plain bins.  In     * usages with well-distributed user hashCodes, tree bins are     * rarely used.  Ideally, under random hashCodes, the frequency of     * nodes in bins follows a Poisson distribution     * (http://en.wikipedia.org/wiki/Poisson_distribution) with a     * parameter of about 0.5 on average for the default resizing     * threshold of 0.75, although with a large variance because of     * resizing granularity. Ignoring variance, the expected     * occurrences of list size k are (exp(-0.5) * pow(0.5, k) /     * factorial(k)). The first values are:     *     * 0:    0.60653066     * 1:    0.30326533     * 2:    0.07581633     * 3:    0.01263606     * 4:    0.00157952     * 5:    0.00015795     * 6:    0.00001316     * 7:    0.00000094     * 8:    0.00000006     * more: less than 1 in ten million</code></pre><h3 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h3><p>&#x5728;&#x4EE5;&#x524D;&#x804A;&#x7F13;&#x5B58;&#x7684;&#x6587;&#x7AE0;&#x4E2D;&#x63D0;&#x5230;&#x8FC7;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B9E;&#x73B0;LRU&#x7B97;&#x6CD5;&#x7528;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x518D;&#x65B9;&#x4FBF;&#x4E0D;&#x8FC7;&#x7684;&#x4E86;&#x3002;&#x5728;&#x54C8;&#x5E0C;&#x8868;&#x57FA;&#x7840;&#x4E0A;&#x62D3;&#x5C55;&#x51FA;&#x8FD9;&#x4E2A;LinkedHashMap&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x54C8;&#x5E0C;&#x8868;&#x5DF2;&#x7ECF;&#x505A;&#x5230;&#x4E86;&#x5E38;&#x6570;&#x7EA7;&#x7684;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x60F3;&#x8981;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6309;&#x63D2;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#xFF0C;&#x90A3;&#x5C31;&#x505A;&#x4E0D;&#x5230;&#x4E86;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5C31;&#x5728;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x5B9E;&#x73B0;&#x4E0A;&#x60F3;&#x529E;&#x6CD5;&#x6A21;&#x62DF;&#x51FA;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x6765;&#x8BB0;&#x5F55;&#x987A;&#x5E8F;&#xFF0C;&#x63D0;&#x4F9B;&#x7EBF;&#x6027;&#x7EA7;&#x7684;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x3002;&#x5982;&#x4F55;&#x6A21;&#x62DF;&#x51FA;&#x961F;&#x5217;&#x5462;&#xFF1F;&#x4E3A;&#x6BCF;&#x4E2A;&#x52A0;&#x5165;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x5143;&#x7D20;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;prev&#x6307;&#x9488;&#x548C;next&#x6307;&#x9488;&#xFF0C;&#x6765;&#x8BB0;&#x5F55;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x597D;&#x4E86;&#x3002;&#x518D;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7684;head&#x6307;&#x9488;&#x548C;tail&#x6307;&#x9488;&#xFF0C;&#x5C31;&#x4EE5;&#x4EE5;&#x6B63;&#x5E8F;&#x548C;&#x9006;&#x5E8F;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#x4E86;&#x3002;LinkedHashMap&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_LinkedHashMap.png" alt="blog_LinkedHashMap"></p><h3 id="&#x8DF3;&#x8868;-SkipList"><a href="#&#x8DF3;&#x8868;-SkipList" class="headerlink" title="&#x8DF3;&#x8868;(SkipList)"></a>&#x8DF3;&#x8868;(SkipList)</h3><p>&#x8DF3;&#x8868;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x72EC;&#x7279;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x8DF3;&#x8868;&#x5728;&#x666E;&#x901A;&#x7684;&#x5DF2;&#x6392;&#x5E8F;&#x94FE;&#x8868;&#x4E4B;&#x4E0A;&#xFF0C;&#x6DFB;&#x52A0;&#x66F4;&#x591A;&#x7684;&#x94FE;&#x8868;&#x6A21;&#x4EFF;&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5C42;&#x7EA7;(level)&#x3002;&#x9AD8;&#x5C42;&#x7EA7;&#x4EC5;&#x5305;&#x542B;&#x4F4E;&#x5C42;&#x7EA7;&#x7684;&#x90E8;&#x5206;&#x5143;&#x7D20;&#xFF0C;&#x641C;&#x7D22;&#x7684;&#x65F6;&#x5019;&#x4ECE;&#x6700;&#x9AD8;&#x5C42;&#x7EA7;&#x4E00;&#x76F4;&#x641C;&#x7D22;&#x5230;&#x6700;&#x4F4E;&#x5C42;&#x7EA7;&#x3002;&#x76F8;&#x6BD4;&#x4E8E;&#x666E;&#x901A;&#x94FE;&#x8868;&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x4F1A;&#x641C;&#x7D22;&#x66F4;&#x5C11;&#x7684;&#x5143;&#x7D20;&#x3002;&#x8DF3;&#x8868;&#x7684;&#x5173;&#x952E;&#x5C31;&#x5728;&#x4E8E;&#x5982;&#x4F55;&#x5EFA;&#x7ACB;&#x5C42;&#x7EA7;&#x3002;&#x8DF3;&#x8868;&#x5F15;&#x5165;&#x968F;&#x673A;&#x79CD;&#x5B50;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5728;&#x52A0;&#x5165;&#x65F6;&#xFF0C;&#x4F1A;&#x63B7;&#x786C;&#x5E01;&#x51B3;&#x5B9A;&#x5143;&#x7D20;&#x5360;&#x51E0;&#x5C42;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x63B7;&#x53CD;&#x9762;&#xFF0C;&#x5143;&#x7D20;&#x5C31;&#x5728;&#x7B2C;&#x4E00;&#x5C42;&#x3002;&#x8FDE;&#x63B7;&#x4E86;&#x4E09;&#x6B21;&#x6B63;&#x9762;&#xFF0C;&#x5143;&#x7D20;&#x5C31;&#x5728;&#x7B2C;&#x4E00;&#x3001;&#x4E8C;&#x3001;&#x4E09;&#x5C42;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8DF3;&#x8868;&#x5F15;&#x5165;&#x4E86;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x6765;&#x5E73;&#x8861;&#x5C42;&#x7EA7;&#x3002;&#x4EE5;&#x4E0B;&#x5C31;&#x662F;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x662F;&#x5982;&#x4F55;&#x8D77;&#x4F5C;&#x7528;&#x7684;&#x3002;</p><p>&#x5728;&#x6982;&#x7387;&#x5206;&#x5E03;&#x5747;&#x5300;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9AD8;&#x5C42;&#x7EA7;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x662F;&#x4F4E;&#x5C42;&#x7EA7;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x4F4E;&#x5C42;&#x7EA7;&#x5143;&#x7D20;&#x662F;&#x5426;&#x52A0;&#x5165;&#x5230;&#x9AD8;&#x5C42;&#x7EA7;&#x7684;&#x6982;&#x7387;&#x4E3A;1/2&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x6BCF;&#x4E24;&#x4E2A;&#x4F4E;&#x5C42;&#x5143;&#x7D20;&#x4F1A;&#x52A0;&#x5165;&#x9AD8;&#x5C42;&#x3002;&#x90A3;&#x4E48;&#x5C42;&#x6570;&#x5C31;&#x662F;<script type="math/tex">\log{2}{n}</script>&#x3002;&#x6BCF;&#x6B21;&#x641C;&#x7D22;&#x5143;&#x7D20;&#x53EA;&#x9700;&#x4ECE;&#x6700;&#x9AD8;&#x5C42;&#x5230;&#x6700;&#x4F4E;&#x5C42;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x641C;&#x7D22;&#x6700;&#x5E95;&#x5C42;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x641C;&#x7D22;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#x3002;&#x6BCF;&#x6B21;&#x641C;&#x7D22;&#x5143;&#x7D20;&#x53EA;&#x9700;&#x4ECE;&#x6700;&#x9AD8;&#x5C42;&#x5230;&#x6700;&#x4F4E;&#x5C42;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x641C;&#x7D22;&#x6700;&#x5E95;&#x5C42;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x641C;&#x7D22;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<script type="math/tex">O(\log{2}{n})</script>&#x3002;</p><p>&#x8DF3;&#x8868;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#xFF0C;&#x4F7F;&#x590D;&#x6742;&#x5EA6;&#x66F4;&#x4F4E;&#x5417;&#xFF1F;&#x4E0D;&#x884C;&#xFF0C;&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF4;&#x660E;&#x3002;</p><script type="math/tex; mode=display">假设，概率分布均匀，且现阶段跳表仅有两层。第一层长度为L_1，第二层长度为L_2 \\则跳表搜索的最大代价为 L_2+\frac{L_1}{L_2}\\因为L_1 = n，则当L_2=\sqrt{n}上式得最小值2\sqrt{n}\\将跳表拓展到k层，则上式为L_k+\frac{L_1}{L_2}+....+\frac{L_{k-1}}{L_k}\\其最小值为k\cdot n^{\frac{1}{k}}\\当k=\log_{2}{n}时，上式取得最小值\\即当跳表层数为\log_{2}{n}时，搜索的复杂度最低</script><p>&#x6982;&#x7387;&#x5206;&#x5E03;&#x5747;&#x5300;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8DF3;&#x8868;&#xFF0C;&#x88AB;&#x79F0;&#x4E3A;&#x201D;The Perfect Skip List&#x201D;&#xFF0C;&#x5176;&#x7ED3;&#x6784;&#x5982;&#x4E0B;:<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_SkipList.png" alt="SkipList"></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8FD9;&#x65F6;&#x7684;&#x8DF3;&#x8868;&#x5DF2;&#x7ECF;&#x50CF;&#x662F;&#x4E00;&#x9897;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x4E86;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x8DF3;&#x8868;&#x72EC;&#x7279;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x8DF3;&#x8868;&#x867D;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x6027;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B83;&#x786E;&#x6A21;&#x62DF;&#x51FA;&#x4E86;&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;</p><p>&#x8DF3;&#x8868;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x72EC;&#x7279;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5C31;&#x662F;&#x5B83;&#x53EA;&#x5BF9;&#x5C40;&#x90E8;&#x505A;&#x4FEE;&#x6539;&#x5C31;&#x53EF;&#x4EE5;&#x7EF4;&#x6301;(maintain)&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5E76;&#x53D1;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x76F8;&#x6BD4;&#x4E8E;&#x5176;&#x4ED6;&#x7684;&#x641C;&#x7D22;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#xFF0C;&#x51CF;&#x8F7B;&#x4E86;&#x9501;&#x5F00;&#x9500;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;JDK&#x4E2D;&#x7684;ConcurrentSkipListMap&#x5C31;&#x662F;&#x57FA;&#x4E8E;&#x8DF3;&#x8868;&#x5B9E;&#x73B0;&#x7684;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x5C06;&#x63D0;&#x5230;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x719F;&#x6089;&#xFF0C;<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">&#x53EF;&#x89C6;&#x5316;&#x5DE5;&#x5177;</a>&#x53EF;&#x4EE5;&#x5E2E;&#x5230;&#x4F60;&#x3002;</p><h2 id="&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;"><a href="#&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;" class="headerlink" title="&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;"></a>&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;</h2><p>&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x7528;&#x6765;&#x641C;&#x7D22;&#x3002;&#x90A3;&#x4E48;&#x6709;&#x4E86;&#x54C8;&#x5E0C;&#x8868;&#x5E38;&#x6570;&#x7EA7;&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x9700;&#x8981;&#x6811;&#x72B6;&#x7684;&#x641C;&#x7D22;&#x7ED3;&#x6784;&#x5462;&#xFF1F;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x54C8;&#x5E0C;&#x8868;&#x5E38;&#x6570;&#x7EA7;&#x7684;&#x641C;&#x7D22;&#x662F;&#x644A;&#x8FD8;&#x4E0B;&#x6765;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;&#x90FD;&#x4E3A;&#x5E38;&#x6570;&#x7EA7;&#xFF0C;&#x8FD9;&#x662F;&#x5176;&#x4E00;&#x3002;&#x5176;&#x4E8C;&#x662F;&#x6811;&#x72B6;&#x641C;&#x7D22;&#x7ED3;&#x6784;&#x63D0;&#x4F9B;&#x4E86;&#x8BB8;&#x591A;&#x54C8;&#x5E0C;&#x8868;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6392;&#x5E8F;&#x3001;&#x7EDF;&#x8BA1;&#x3001;&#x533A;&#x95F4;&#x67E5;&#x627E;(&#x533A;&#x95F4;&#x6811;)&#x3002;&#x9996;&#x5148;&#xFF0C;&#x5148;&#x6765;&#x804A;&#x4E00;&#x804A;&#x5177;&#x6709;&#x6709;&#x5E8F;&#x6027;&#x7684;&#x6811;&#x72B6;&#x7ED3;&#x6784;-&#x5806;&#x3002;</p><h3 id="&#x5806;-Heap"><a href="#&#x5806;-Heap" class="headerlink" title="&#x5806;(Heap)"></a>&#x5806;(Heap)</h3><p>&#x5806;&#x662F;&#x4E00;&#x7C7B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x79CD;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;(Priority-Queue)&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5185;&#x7684;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x8D4B;&#x4E88;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x8FDB;&#x884C;&#x6392;&#x5217;&#x3002;&#x5806;&#x5206;&#x4E3A;&#x6700;&#x5927;&#x5806;&#x548C;&#x6700;&#x5C0F;&#x5806;&#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x6700;&#x5927;&#x5806;&#x4E2D;&#xFF0C;&#x5806;&#x7684;&#x6839;&#x8282;&#x70B9;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x9AD8;&#x3002;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#xFF0C;&#x5806;&#x7684;&#x6839;&#x8282;&#x70B9;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x4F4E;&#x3002;&#x5806;&#x4EFB;&#x610F;&#x8282;&#x70B9;&#x4F18;&#x5148;&#x7EA7;&#x6BD4;&#x5B50;&#x8282;&#x70B9;&#x4F18;&#x5148;&#x7EA7;&#x9AD8;&#x6216;&#x8005;&#x4F4E;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x5806;&#x7684;&#x6709;&#x5E8F;&#x6027;&#x3002;&#x5806;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x6027;&#x8D28;&#x5C31;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x6700;&#x4F4E;&#x5C42;&#xFF0C;&#x5176;&#x4ED6;&#x5C42;&#x90FD;&#x662F;&#x6EE1;&#x8282;&#x70B9;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x5806;&#x6709;&#x4E8C;&#x53C9;&#x5806;(Binary-Heap)&#x3001;&#x4E8C;&#x9879;&#x5806;(Binomial-Heap)&#x3001;&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x5806;(Fibonacci-Heap)&#x3001;&#x659C;&#x5806;(Skew-Heap)&#x7B49;&#x7B49;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x6765;&#x804A;&#x4E00;&#x804A;&#x641C;&#x7D22;&#x6811;&#x3002;&#x641C;&#x7D22;&#x6811;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x548C;&#x591A;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x3002;&#x5E38;&#x7528;&#x7684;&#x641C;&#x7D22;&#x6811;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x662F;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x3002;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;&#x4E3A;&#x6240;&#x6709;&#x8282;&#x70B9;&#x7684;&#x9AD8;&#x5EA6;&#x8D8B;&#x8FD1;&#x4E8E;&#x5E73;&#x8861;&#xFF0C;&#x5E73;&#x644A;&#x4E0B;&#x6765;&#x5176;&#x64CD;&#x4F5C;&#x590D;&#x6742;&#x5EA6;&#x504F;&#x4F4E;&#x3002;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x4FDD;&#x8BC1;&#x6811;&#x9AD8;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#xFF0C;&#x641C;&#x7D22;&#x3001;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x3002;</p><p>&#x641C;&#x7D22;&#x6811;&#x5728;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x3001;&#x67E5;&#x627E;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x5BF9;&#x76F8;&#x5E94;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x65CB;&#x8F6C;&#x6765;&#x7EF4;&#x6301;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x6027;&#x8D28;&#x3002;&#x65CB;&#x8F6C;&#x6709;Left&#x65CB;&#x8F6C;&#x3001;Right&#x65CB;&#x8F6C;&#x3001;LeftLeft&#x65CB;&#x8F6C;&#x3001;RightRight&#x65CB;&#x8F6C;&#x3001;LeftRight&#x65CB;&#x8F6C;&#x3001;RightLeft&#x65CB;&#x8F6C;&#xFF0C;&#x8FD9;&#x4E9B;&#x65CB;&#x8F6C;&#x81EA;&#x7136;&#x4E5F;&#x4E0D;&#x4F1A;&#x8FDD;&#x53CD;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;&#x3002;&#x800C;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4F1A;&#x5728;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x3001;&#x67E5;&#x627E;&#x4E4B;&#x540E;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x65CB;&#x8F6C;&#x3002;</p><h3 id="AVL&#x6811;-AVL-Tree"><a href="#AVL&#x6811;-AVL-Tree" class="headerlink" title="AVL&#x6811;(AVL-Tree)"></a>AVL&#x6811;(AVL-Tree)</h3><p>AVL&#x6811;&#x662F;&#x6700;&#x7ECF;&#x5178;&#x7684;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;AVL&#x6811;&#x7684;&#x6027;&#x8D28;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x8282;&#x70B9;&#xFF0C;&#x5176;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#x4E0D;&#x8D85;&#x8FC7;1&#xFF0C;&#x8FD9;&#x5C31;&#x57FA;&#x672C;&#x8BF4;&#x660E;&#x4E86;AVL&#x6811;&#x662F;&#x5E73;&#x8861;&#x7684;&#x3002;&#x65E2;&#x7136;&#x8981;&#x4FDD;&#x8BC1;&#x5DE6;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#xFF0C;AVL&#x6811;&#x7684;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x8981;&#x8BB0;&#x5F55;&#x672C;&#x8282;&#x70B9;&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x4EE5;&#x88AB;&#x68C0;&#x67E5;&#x51FA;&#x662F;&#x5426;&#x9700;&#x8981;&#x88AB;&#x91CD;&#x65B0;&#x5E73;&#x8861;&#x3002;&#x6BCF;&#x5F53;&#x4F1A;&#x5F71;&#x54CD;AVL&#x6811;&#x7684;&#x5E73;&#x8861;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x68C0;&#x67E5;&#x76F8;&#x5E94;&#x7684;&#x8282;&#x70B9;&#x662F;&#x5426;&#x8FDD;&#x53CD;&#x4E86;&#x6027;&#x8D28;&#xFF0C;&#x8FDD;&#x53CD;&#x4E86;&#x6027;&#x8D28;&#x5C31;&#x4F1A;&#x91CD;&#x65B0;&#x5E73;&#x8861;&#x3002;AVL&#x6811;&#x7684;&#x91CD;&#x65B0;&#x5E73;&#x8861;&#x6D89;&#x53CA;&#x5230;LeftLeft&#x65CB;&#x8F6C;&#x3001;RightRight&#x65CB;&#x8F6C;&#x3001;LeftRight&#x65CB;&#x8F6C;&#x3001;RightLeft&#x65CB;&#x8F6C;&#x3002;&#x4EE5;&#x4E0B;&#x4E3A;&#x8BC1;&#x660E;AVL&#x6811;&#x9AD8;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;AVL&#x6811;&#x9AD8;&#x4E3A;h&#xFF0C;&#x603B;&#x8282;&#x70B9;&#x6570;&#x4E3A;n&#xFF0C;AVL&#x6811;&#x5728;&#x9AD8;&#x4E0E;&#x8282;&#x70B9;&#x6570;&#x4E4B;&#x95F4;&#x7684;&#x51FD;&#x6570;&#x4E3A;N(h)&#x3002;</p><p>&#x5BF9;&#x4E8E;h=1&#x65F6;&#xFF0C;N(h)=1&#x3002; &#x5BF9;&#x4E8E;&#x4EFB;&#x610F;h&#x5927;&#x4E8E;1&#x7684;AVL&#x6811;&#xFF0C;AVL&#x6811;&#x7684;&#x8282;&#x70B9;&#x6570;&#x4E3A;&#x6839;&#x8282;&#x70B9;+&#x6839;&#x8282;&#x70B9;&#x5DE6;&#x5B50;&#x6811;&#x8282;&#x70B9;&#x6570;+&#x6839;&#x8282;&#x70B9;&#x53F3;&#x5B50;&#x6811;&#x8282;&#x70B9;&#x6570;&#x3002;&#x53C8;&#x6709;AVL&#x6811;&#x5177;&#x6709;&#x5DE6;&#x5B50;&#x6811;&#x4E0E;&#x53F3;&#x5B50;&#x6811;&#x9AD8;&#x5EA6;&#x5DEE;&#x4E0D;&#x8D85;&#x8FC7;1&#x7684;&#x6027;&#x8D28;&#x3002;</p><script type="math/tex; mode=display">即N(h)\geq 1+N(h-1)+N(h-2) \\又有N(h)=N(h-1)+N(h-2)是F_n斐波那契数列，则有N(h)\geq F_n\\又有F_n = \frac{\phi^h}{\sqrt{5}}，则有N(h)\geq \frac{\phi^h}{\sqrt{5}}\\可得 h\leq\log_{\phi}{n}，即h\leq\log_{2}{n}，即AVL树高为O(\log_{2}{n})</script><h3 id="&#x7EA2;&#x9ED1;&#x6811;-Red-Black-Tree"><a href="#&#x7EA2;&#x9ED1;&#x6811;-Red-Black-Tree" class="headerlink" title="&#x7EA2;&#x9ED1;&#x6811;(Red-Black-Tree)"></a>&#x7EA2;&#x9ED1;&#x6811;(Red-Black-Tree)</h3><p>&#x7EA2;&#x9ED1;&#x6811;&#x662F;&#x6700;&#x5E38;&#x7528;&#x7684;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x3002;&#x7EA2;&#x9ED1;&#x6811;&#x6709;&#x56DB;&#x4E2A;&#x5173;&#x952E;&#x6027;&#x8D28;&#xFF1A;</p><ul><li>&#x6BCF;&#x4E2A;&#x8282;&#x4F1A;&#x88AB;&#x7740;&#x8272;&#xFF0C;&#x4E0D;&#x662F;&#x9ED1;&#x8272;&#x5C31;&#x662F;&#x7EA2;&#x8272;&#x3002;</li><li>&#x6839;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x3002;</li><li>&#x6BCF;&#x4E2A;&#x7EA2;&#x8272;&#x8282;&#x70B9;&#x7684;&#x7236;&#x4EB2;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x7684;&#xFF0C;&#x5373;&#x6CA1;&#x6709;&#x4E24;&#x4E2A;&#x7EA2;&#x8272;&#x8282;&#x70B9;&#x4E34;&#x63A5;&#x3002;</li><li>&#x4EFB;&#x610F;&#x8282;&#x70B9;&#x5230;&#x5176;&#x53F6;&#x8282;&#x70B9;&#x8DEF;&#x5F84;&#x4E0A;&#x7684;&#x9ED1;&#x8272;&#x8282;&#x70B9;&#x7684;&#x6570;&#x91CF;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;</li></ul><p>&#x7EA2;&#x9ED1;&#x6811;&#x8FD9;&#x56DB;&#x6761;&#x6027;&#x8D28;&#x80FD;&#x4FDD;&#x8BC1;&#x6811;&#x7684;&#x5E73;&#x8861;&#xFF1F;&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF4;&#x660E;&#x3002;</p><p>&#x5982;&#x679C;&#x6811;&#x4E0D;&#x5E73;&#x8861;&#x4F1A;&#x5B58;&#x5728;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x5DEE;&#x8D85;&#x8FC7;1&#xFF0C;&#x90A3;&#x4E48;&#x6765;&#x770B;&#x770B;&#x4F1A;&#x4E0D;&#x4F1A;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x8282;&#x70B9;&#x3002;</p><pre><code class="lang-c">R&#x4EE3;&#x8868;&#x7EA2;&#x8272;&#xFF0C;B&#x4EE3;&#x8868;&#x9ED1;&#x8272;&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x51E0;&#x79CD;30&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x9AD8;&#x8FC7;&#x5176;&#x53F3;&#x5B50;&#x6811;&#x9AD8;&#x5EA6;1&#x7684;&#x7740;&#x8272;&#x53EF;&#x80FD;&#x3002;    B--30           B--30            B--30              / \            /  \             /  \  B--20  NIL      R--20   NIL      R--20   NIL    / \             / \              /  \   B--10  NIL     B-- 10  NIL       R--10  NIL  &#x8FDD;&#x53CD;&#x7B2C;&#x56DB;&#x70B9;&#x6027;&#x8D28;  &#x8FDD;&#x53CD;&#x7B2C;&#x56DB;&#x70B9;&#x6027;&#x8D28;     &#x8FDD;&#x53CD;&#x7B2C;&#x4E09;&#x70B9;&#x6027;&#x8D28;&#x5C06;&#x4E0A;&#x8FF0;&#x60C5;&#x51B5;&#x62D3;&#x5C55;&#x5230;&#x4EFB;&#x610F;&#x60C5;&#x51B5;&#xFF0C;&#x5047;&#x8BBE;&#x6709;&#x4EFB;&#x610F;&#x8282;&#x70B9;x&#x3001;y&#x3001;z&#x6784;&#x6210;x&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x9AD8;&#x8FC7;&#x5176;&#x53F3;&#x5B50;&#x6811;&#x9AD8;&#x5EA6;1&#x3002;      x             / \               y  NIL         / \               z  NIL &#x6839;&#x636E;&#x7B2C;&#x56DB;&#x70B9;&#x6027;&#x8D28;&#xFF0C;y&#x548C;z&#x5FC5;&#x987B;&#x90FD;&#x662F;&#x7EA2;&#x8272;&#x8282;&#x70B9;&#x3002;&#x800C;y&#x548C;z&#x90FD;&#x662F;&#x7EA2;&#x8272;&#x8282;&#x70B9;&#x53C8;&#x4E0E;&#x7B2C;&#x4E09;&#x70B9;&#x6027;&#x8D28;&#x77DB;&#x76FE;&#x3002;&#x53EF;&#x5F97;&#x7EA2;&#x9ED1;&#x6811;&#x53EA;&#x8981;&#x7EF4;&#x6301;&#x8FD9;&#x56DB;&#x4E2A;&#x6027;&#x8D28;&#xFF0C;&#x4FBF;&#x80FD;&#x7EF4;&#x6301;&#x6811;&#x7684;&#x5E73;&#x8861;&#x3002;</code></pre><p>&#x4EE5;&#x4E0A;&#x662F;&#x76F4;&#x89C2;&#x7684;&#x8BF4;&#x660E;&#x4E3A;&#x4EC0;&#x4E48;&#x7EA2;&#x9ED1;&#x6811;&#x662F;&#x5E73;&#x8861;&#x7684;&#xFF0C;&#x4EE5;&#x4E0B;&#x6765;&#x7528;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x8BC1;&#x660E;&#x6CD5;(&#x6570;&#x5B66;&#x5F52;&#x7EB3;&#x6CD5;)&#x6765;&#x8BC1;&#x660E;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x6811;&#x9AD8;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x3002;</p><script type="math/tex; mode=display">\\假设：函数bh(v)代表，以v为根节点的红黑树任意一条从根节点到叶节点路径上的黑色节点的数量，\\这个数量不包括黑色节点本身，即根节点v。命题：\\以v为根节点的红黑树内部至少有2^{bh(v)}-1个节点\\证明：对于红黑树高为0，其bh(v)为0，内部节点至少为0，命题得证。\\假设对于任意一棵红黑树的根节点的左右子节v‘、v''点成立。\\即以v'、v''为根节点的红黑树内部至少有2^{bh(v')}-1、2^{bh(v'')}-1个节点\\因为v'与v''为v的子节点，根据子节点为红色或黑色\\子节点的bh等于父节点的bh或父节点的bh-1\\即bh(v')=bh(v)或bh(v)-1、bh(v'')=bh(v)或bh(v)-1\\则以v为根节点的红黑树内部至少有2^{bh(v)-1}-1+2^{bh(v)-1}-1+1节点\\即则以v为根节点的红黑树内部至少有2^{bh(v)}-1节点，命题得证\\然后，使用这条证明出来的定理来证明红黑树的树高，假设红黑树的树高为h，节点数为n。\\根据第三条性质，可得出红黑树黑色节点数量最少占总节点数量的一半。\\则n\geq2^{bh(v)}-1可得出n\geq 2^{\frac{h}{2}}-1\\可得出h\leq2\log_{2}{n+1}\\即红黑树的树高为O(\log_{2}{n})</script><p>&#x4E3A;&#x4E86;&#x8BB0;&#x5F55;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8981;&#x6709;&#x989C;&#x8272;&#x57DF;(color-field)&#xFF0C;&#x5E76;&#x4E14;&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8981;&#x6709;&#x6307;&#x5411;parent&#x8282;&#x70B9;&#x7684;&#x6307;&#x9488;&#x3002;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x6D89;&#x53CA;&#x5230;Left&#x65CB;&#x8F6C;&#x3001;Right&#x65CB;&#x8F6C;&#x3002;&#x7EA2;&#x9ED1;&#x6811;&#x5982;&#x679C;&#x8FDD;&#x53CD;&#x4E86;&#x6027;&#x8D28;&#xFF0C;&#x4F1A;&#x5148;&#x5C1D;&#x8BD5;&#x91CD;&#x65B0;&#x7740;&#x8272;(recolor)&#xFF0C;&#x4E0D;&#x884C;&#x7684;&#x8BDD;&#x518D;&#x65CB;&#x8F6C;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x7EA2;&#x9ED1;&#x6811;&#x9AD8;&#x6027;&#x80FD;&#x7684;&#x4E00;&#x4E2A;&#x7279;&#x70B9;&#x3002;&#x56E0;&#x4E3A;&#x65CB;&#x8F6C;&#x6BD4;&#x91CD;&#x65B0;&#x7740;&#x8272;&#x66F4;&#x6D88;&#x8017;&#x6027;&#x80FD;&#xFF0C;&#x91CD;&#x65B0;&#x7740;&#x8272;&#x7684;&#x8BDD;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x8FD8;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x67E5;&#x8BE2;&#xFF0C;&#x4F46;&#x662F;&#x65CB;&#x8F6C;&#x7684;&#x8BDD;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x5C31;&#x4E0D;&#x80FD;&#x7EE7;&#x7EED;&#x67E5;&#x8BE2;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x7B49;&#x5F85;&#x7ED3;&#x6784;&#x8C03;&#x6574;&#x5B8C;&#x518D;&#x67E5;&#x8BE2;&#x3002;</p><p>&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x6709;&#x5BF9;&#x79F0;&#x7684;&#x516D;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5220;&#x9664;&#x6709;&#x5BF9;&#x79F0;&#x7684;&#x516B;&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x8981;&#x60F3;&#x638C;&#x63E1;&#xFF0C;&#x80CC;&#x4E0B;&#x6765;&#x662F;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x529E;&#x6CD5;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x7528;&#x5230;&#x518D;&#x67E5;&#x5C31;&#x8DB3;&#x591F;&#x4E86;&#xFF0C;&#x6CA1;&#x5FC5;&#x8981;&#x8F83;&#x771F;&#x3002;</p><p>&#x90A3;&#x4E48;AVL&#x6811;&#x548C;&#x7EA2;&#x9ED1;&#x6811;&#x90FD;&#x662F;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;&#x7EA2;&#x9ED1;&#x6811;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;&#x91CD;&#x65B0;&#x7740;&#x8272;&#x4EE3;&#x66FF;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x65CB;&#x8F6C;&#xFF0C;&#x8FD9;&#x4EE3;&#x8868;AVL&#x6811;&#x4F1A;&#x505A;&#x66F4;&#x591A;&#x7684;&#x65CB;&#x8F6C;&#xFF0C;&#x5BFC;&#x81F4;AVL&#x6811;&#x4E5F;&#x66F4;&#x52A0;&#x5E73;&#x8861;&#x3002;&#x5982;&#x679C;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x5BFC;&#x81F4;&#x65CB;&#x8F6C;&#x7684;&#x64CD;&#x4F5C;&#x591A;&#x4E8E;&#x67E5;&#x627E;&#x4E0D;&#x5BFC;&#x81F4;&#x65CB;&#x8F6C;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x6027;&#x80FD;&#x4F1A;&#x6BD4;AVL&#x6811;&#x66F4;&#x597D;&#x4E00;&#x70B9;&#x3002;&#x53CD;&#x4E4B;&#xFF0C;AVL&#x6811;&#x6027;&#x80FD;&#x66F4;&#x597D;&#x4E00;&#x70B9;&#x3002;&#x4E0D;&#x8FC7;&#x603B;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x6027;&#x80FD;&#x4F1A;&#x66F4;&#x597D;&#x3002;</p><h3 id="&#x6811;&#x5806;-Treap"><a href="#&#x6811;&#x5806;-Treap" class="headerlink" title="&#x6811;&#x5806;(Treap)"></a>&#x6811;&#x5806;(Treap)</h3><p>&#x6811;&#x5806;&#x662F;&#x9897;&#x6709;&#x8DA3;&#x7684;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x3002;&#x5B83;&#x65E2;&#x5177;&#x6709;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;&#x53C8;&#x6709;&#x5806;&#x7684;&#x6027;&#x8D28;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;Left&#x65CB;&#x8F6C;&#x548C;Right&#x65CB;&#x8F6C;&#x7EF4;&#x6301;&#x5806;&#x7684;&#x6709;&#x5E8F;&#x6027;&#x3002;&#x6811;&#x5806;&#x662F;&#x5982;&#x4F55;&#x80FD;&#x4FDD;&#x8BC1;&#x6811;&#x7684;&#x5E73;&#x8861;&#xFF1F;&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF4;&#x660E;&#x3002;</p><pre><code class="lang-c">&#x5047;&#x8BBE;&#xFF0C;A&#x8282;&#x70B9;&#x5927;&#x4E8E;B&#x8282;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;A&#x8282;&#x70B9;&#x4E0E;B&#x8282;&#x70B9;&#x7684;&#x76F8;&#x5BF9;&#x4F4D;&#x7F6E;&#x6709;&#x5982;&#x4E0B;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;  A                B   \              /    B            A  &#x60C5;&#x51B5;1         &#x60C5;&#x51B5;2&#x800C;A&#x4E0E;B&#x7684;&#x76F8;&#x5BF9;&#x4F4D;&#x7F6E;&#xFF0C;&#x662F;&#x60C5;&#x51B5;1&#x8FD8;&#x662F;&#x60C5;&#x51B5;2&#x5728;&#x4E00;&#x822C;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E2D;&#x662F;&#x6839;&#x636E;A&#x548C;B&#x63D2;&#x5165;&#x987A;&#x5E8F;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x5982;&#x679C;&#x5148;&#x63D2;&#x5165;&#x7684;&#x662F;A&#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x60C5;&#x51B5;1&#x3002;&#x5982;&#x679C;&#x5148;&#x63D2;&#x5165;&#x7684;&#x662F;&#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x60C5;&#x51B5;2&#x3002;&#x4F46;&#x662F;&#x5728;Treap&#x6811;&#x4E2D;&#xFF0C;&#x51FA;&#x73B0;&#x60C5;&#x51B5;1&#x8FD8;&#x662F;&#x60C5;&#x51B5;2&#x662F;&#x6839;&#x636E;A&#x4E0E;B&#x968F;&#x673A;&#x51FA;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#x76F8;&#x5BF9;&#x5927;&#x5C0F;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;Treap&#x6811;&#x4E2D;&#xFF0C;&#x51FA;&#x73B0;&#x60C5;&#x51B5;1&#x8FD8;&#x662F;&#x60C5;&#x51B5;2&#x662F;&#x968F;&#x673A;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x6811;&#x7684;&#x63D2;&#x5165;&#x987A;&#x5E8F;&#x662F;&#x968F;&#x673A;&#x7684;&#x3002;</code></pre><p>&#x968F;&#x673A;&#x7684;&#x63D2;&#x5165;&#x987A;&#x5E8F;&#x4EE3;&#x8868;&#x7740;&#x6D88;&#x9664;&#x4E86;&#x8F93;&#x5165;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x4EE5;&#x201C;&#x7406;&#x60F3;&#x201D;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x5165;&#xFF0C;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x76F4;&#x589E;&#x5E8F;&#x6216;&#x8005;&#x964D;&#x5E8F;&#xFF0C;&#x5BFC;&#x81F4;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x503E;&#x659C;&#x7684;&#x975E;&#x5E38;&#x5389;&#x5BB3;&#x7684;&#x8F93;&#x5165;&#x987A;&#x5E8F;&#xFF0C;&#x4EE5;&#x7EF4;&#x6301;&#x4E86;&#x6811;&#x7684;&#x5E73;&#x8861;&#x3002;&#x800C;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x968F;&#x673A;&#x7684;&#x63D2;&#x5165;&#x987A;&#x5E8F;&#x53EF;&#x4F7F;&#x6811;&#x9AD8;&#x671F;&#x671B;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#xFF0C;&#x4E25;&#x8C28;&#x8BC1;&#x660E;&#x770B;<a href="http://cs.stackexchange.com/questions/6342/proof-that-a-randomly-built-binary-search-tree-has-logarithmic-height#answer-6356" target="_blank" rel="noopener">&#x8FD9;&#x91CC;</a>&#x6216;&#x8005;&#x7B97;&#x5BFC;&#x7B2C;12&#x7AE0;&#x7B2C;4&#x8282;&#x3002;&#x6811;&#x5806;&#x7684;&#x4F18;&#x70B9;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x7B80;&#x5355;&#xFF0C;&#x4E14;&#x57FA;&#x672C;&#x80FD;&#x4FDD;&#x8BC1;&#x5E73;&#x8861;&#x3002;</p><h3 id="&#x4F38;&#x5C55;&#x6811;-Splay-Tree"><a href="#&#x4F38;&#x5C55;&#x6811;-Splay-Tree" class="headerlink" title="&#x4F38;&#x5C55;&#x6811;(Splay-Tree)"></a>&#x4F38;&#x5C55;&#x6811;(Splay-Tree)</h3><p>&#x4F38;&#x5C55;&#x6811;&#x662F;&#x9897;&#x7279;&#x6B8A;&#x7684;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5B83;&#x4E0D;&#x76F4;&#x63A5;&#x63A7;&#x5236;&#x8282;&#x70B9;&#x9AD8;&#x5EA6;&#xFF0C;&#x4F46;&#x8FD8;&#x4F1A;&#x5C3D;&#x91CF;&#x7EF4;&#x6301;&#x6811;&#x7684;&#x5E73;&#x8861;&#x3002;&#x65E0;&#x8BBA;&#x589E;&#x3001;&#x5220;&#x3001;&#x67E5;&#x64CD;&#x4F5C;&#xFF0C;&#x4F38;&#x5C55;&#x6811;&#x90FD;&#x4F1A;&#x5C06;&#x76F8;&#x5E94;&#x7684;&#x8282;&#x70B9;&#x4F38;&#x5C55;&#x5230;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x4EE5;&#x52A0;&#x5FEB;&#x4E0B;&#x6B21;&#x641C;&#x7D22;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4F38;&#x5C55;&#x6811;&#x57FA;&#x4E8E;&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;&#x3002;&#x5728;&#x540C;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x8BBF;&#x95EE;&#x76F8;&#x540C;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x4F38;&#x5C55;&#x6811;&#x7684;&#x6027;&#x80FD;&#x6700;&#x597D;&#x3002;&#x4F38;&#x5C55;&#x9664;&#x4E86;&#x4F7F;&#x641C;&#x7D22;&#x540C;&#x6837;&#x7684;&#x5143;&#x7D20;&#x5E38;&#x6570;&#x7EA7;&#x8BBF;&#x95EE;&#xFF0C;&#x5728;&#x6811;&#x4E0D;&#x5E73;&#x8861;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x80FD;&#x4F7F;&#x6811;&#x66F4;&#x52A0;&#x5E73;&#x8861;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5728;&#x6811;&#x5E73;&#x8861;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x4F1A;&#x4F7F;&#x6811;&#x66F4;&#x52A0;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x5E73;&#x644A;&#x4E0B;&#x6765;&#xFF0C;&#x4F38;&#x5C55;&#x6811;&#x4E0D;&#x8F93;&#x4E8E;&#x5176;&#x4ED6;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x8FD8;&#x6709;&#x5B9E;&#x73B0;&#x7B80;&#x5355;&#x3001;&#x5185;&#x5B58;&#x5360;&#x7528;&#x91CF;&#x5C0F;&#x7B49;&#x4F18;&#x70B9;&#x3002;</p><h3 id="B&#x6811;-B-Tree"><a href="#B&#x6811;-B-Tree" class="headerlink" title="B&#x6811;(B-Tree)"></a>B&#x6811;(B-Tree)</h3><p>&#x4EE5;&#x4E0A;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x5047;&#x8BBE;&#x641C;&#x7D22;&#x5185;&#x5BB9;&#x90FD;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x641C;&#x7D22;&#x7684;&#x5185;&#x5BB9;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x5185;&#x5B58;&#x88C5;&#x4E0D;&#x4E0B;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x4F1A;&#x51FA;&#x73B0;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF1F;&#x5982;&#x679C;&#x4ECD;&#x7528;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x67E5;&#x627E;&#xFF0C;&#x6BCF;&#x641C;&#x7D22;&#x5230;&#x4E00;&#x4E2A;&#x672A;&#x641C;&#x7D22;&#x8FC7;&#x7684;&#x8282;&#x70B9;&#x90FD;&#x8981;&#x8FDB;&#x884C;&#x78C1;&#x76D8;IO&#xFF0C;&#x5C06;&#x8282;&#x70B9;&#x4ECE;&#x78C1;&#x76D8;&#x8C03;&#x5EA6;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x6574;&#x4E2A;&#x64CD;&#x4F5C;&#x7684;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x78C1;&#x76D8;IO&#x800C;&#x4E0D;&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x641C;&#x7D22;&#x6027;&#x80FD;&#x4E86;&#x3002;&#x8FD9;&#x5C31;&#x5F15;&#x51FA;&#x4E86;B&#x6811;&#xFF0C;B&#x6811;&#x7684;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5927;&#x5C0F;&#x4E0E;&#x8981;&#x8C03;&#x5EA6;&#x7684;&#x9875;&#x7684;&#x5927;&#x5C0F;&#x76F8;&#x8FD1;&#xFF0C;&#x5145;&#x5206;&#x5229;&#x7528;&#x78C1;&#x76D8;&#x7684;IO&#xFF0C;&#x8FD9;&#x4F7F;B&#x6811;&#x5728;&#x641C;&#x7D22;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x5185;&#x5BB9;&#x8FDC;&#x4F18;&#x4E8E;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x3002;B&#x6811;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5927;&#x5C0F;&#x4E0E;&#x8C03;&#x5EA6;&#x9875;&#x7684;&#x5927;&#x5C0F;&#x76F8;&#x8FD1;&#xFF0C;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x5EA6;&#x6570;(minmum degree)t&#x7684;&#x6982;&#x5FF5;&#x3002;B&#x6811;&#x8981;&#x6C42;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5305;&#x542B;&#x7684;&#x5185;&#x5BB9;&#x6570;&#x91CF;&#x57FA;&#x4E8E;t&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5B58;&#x50A8;&#x7684;&#x5185;&#x5BB9;&#x8C03;&#x6574;t&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8FDB;&#x800C;&#x8C03;&#x8282;t&#x53BB;&#x4FDD;&#x8BC1;&#x8282;&#x70B9;&#x7684;&#x5927;&#x5C0F;&#x4E0E;&#x8C03;&#x5EA6;&#x9875;&#x7684;&#x5927;&#x5C0F;&#x76F8;&#x8FD1;&#x3002;&#x4EE5;&#x4E0B;&#x4E3A;B&#x6811;&#x7684;&#x5173;&#x952E;&#x6027;&#x8D28;&#x3002;</p><ul><li>&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5305;&#x542B;&#x6700;&#x5C0F;&#x5EA6;&#x6570;t</li><li>&#x9664;&#x4E86;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6700;&#x5C11;&#x6709;t-1&#x4E2A;&#x952E;&#x503C;&#x3002;&#x6839;&#x8282;&#x70B9;&#x6700;&#x5C11;&#x6709;1&#x4E2A;&#x952E;&#x503C;</li><li>&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6700;&#x591A;&#x6709;2t-1&#x4E2A;&#x952E;&#x503C;</li><li>&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6709;&#x952E;&#x503C;&#x52A0;1&#x4E2A;&#x5B50;&#x8282;&#x70B9;</li><li>&#x6240;&#x6709;&#x8282;&#x70B9;&#x5185;&#x7684;&#x952E;&#x503C;&#x662F;&#x589E;&#x5E8F;&#x7684;</li><li>&#x76F8;&#x90BB;&#x952E;&#x503C;&#x4E2D;&#x95F4;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x5185;&#x7684;&#x6240;&#x6709;&#x952E;&#x503C;&#x5728;&#x76F8;&#x90BB;&#x5EFA;&#x503C;&#x6784;&#x6210;&#x7684;&#x8303;&#x56F4;&#x5185;</li><li>&#x6240;&#x6709;&#x53F6;&#x8282;&#x70B9;&#x5728;&#x540C;&#x4E00;&#x5C42;&#xFF0C;B&#x6811;&#x589E;&#x957F;&#x3001;&#x7F29;&#x51CF;&#x9AD8;&#x5EA6;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x65B9;&#x5411;&#x589E;&#x957F;&#x3001;&#x7F29;&#x51CF;</li></ul><p>&#x76F8;&#x6BD4;&#x4E8E;&#x4E00;&#x822C;&#x7684;&#x4E8C;&#x53C9;&#x5E73;&#x8861;&#x641C;&#x7D22;&#x6811;&#x589E;&#x957F;&#x3001;&#x7F29;&#x51CF;&#x4ECE;&#x53F6;&#x8282;&#x70B9;&#x65B9;&#x5411;&#x4E0D;&#x540C;&#xFF0C;B&#x6811;&#x4F1A;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x65B9;&#x5411;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;&#x5B9E;&#x9645;&#x8FD0;&#x7528;B&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ECF;&#x5E38;&#x4F1A;&#x5C06;B&#x6811;&#x7684;&#x524D;&#x51E0;&#x5C42;&#x8282;&#x70B9;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#xFF0C;&#x53EA;&#x6709;&#x5E95;&#x5C42;&#x4F1A;&#x5F15;&#x8D77;&#x78C1;&#x76D8;IO&#x4EE5;&#x52A0;&#x901F;&#x8BBF;&#x95EE;&#x3002;&#x90A3;&#x4E48;&#xFF0C;B&#x6811;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x65B9;&#x5411;&#x6539;&#x53D8;&#x8282;&#x70B9;&#x5C31;&#x4F1A;&#x6BD4;&#x4ECE;&#x53F6;&#x8282;&#x70B9;&#x65B9;&#x5411;&#x6539;&#x53D8;&#x8282;&#x70B9;&#x5FEB;&#x5F97;&#x591A;&#x3002;&#x4EE5;&#x4E0B;&#x662F;B&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x4E3A;<script type="math/tex">O(\log_{t}{n})</script>&#x7684;&#x8BC1;&#x660E;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;&#x5F53;B&#x6811;&#x6811;&#x9AD8;&#x4E3A;h&#x65F6;&#xFF0C;&#x542B;&#x6709;&#x7684;&#x952E;&#x503C;&#x6700;&#x5C11;&#x4E3A;n&#x3002;</p><p>&#x82E5;B&#x6811;&#x542B;&#x6709;&#x7684;&#x952E;&#x503C;&#x6700;&#x5C11;&#xFF0C;&#x5219;&#x6709;&#x6839;&#x8282;&#x70B9;&#x542B;&#x6709;1&#x4E2A;&#x952E;&#x503C;&#xFF0C;&#x5176;&#x4ED6;&#x8282;&#x70B9;&#x542B;&#x6709;t-1&#x4E2A;&#x952E;&#x503C;&#x3002; </p><p>&#x7B2C;0&#x5C42;&#x8282;&#x70B9;&#x6570;&#x4E3A;1&#xFF0C;&#x7B2C;1&#x5C42;&#x8282;&#x70B9;&#x6570;&#x4E3A;2&#xFF0C;&#x7B2C;2&#x5C42;&#x8282;&#x70B9;&#x6570;&#x4E3A;2t&#xFF0C;&#x7B2C;3&#x5C42;&#x8282;&#x70B9;&#x6570;&#x4E3A;<script type="math/tex">2t^2</script>&#xFF0C;&#x5219;&#x53EF;&#x5F97;&#x51FA;&#x7B2C;i&#x5C42;&#x8282;&#x70B9;&#x6570;&#x4E3A;<script type="math/tex">2t^{i-1}</script></p><script type="math/tex; mode=display">则有n\geq1+(t-1)\sum_{i=1}^{h}2t^{i-1}\\n\geq 1 + (t-1)\frac{2t^{h-1}}{t-1}\\n\geq2t^{h-1}+1\\h\ \leq \log_{t}{\frac{n-1}{2}}+1\\即命题得证。</script><p>B&#x6811;&#x7684;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x4F1A;&#x4EE5;&#x5206;&#x88C2;(split)&#x5B50;&#x8282;&#x70B9;&#x6765;&#x7EF4;&#x6301;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6700;&#x591A;&#x6709;2t-1&#x4E2A;&#x952E;&#x503C;&#x8FD9;&#x4E00;&#x6027;&#x8D28;&#xFF0C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x4F1A;&#x4EE5;&#x4ECE;&#x5176;&#x4ED6;&#x8282;&#x70B9;&#x501F;(borrow)&#x6765;&#x7EF4;&#x6301;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6700;&#x5C11;&#x6709;t-1&#x4E2A;&#x952E;&#x503C;&#x8FD9;&#x4E00;&#x6027;&#x8D28;&#x3002; B&#x6811;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E00;&#x7C7B;&#x5BB6;&#x65CF;&#x6811;&#xFF0C;&#x8FD8;&#x6709;B+&#x6811;&#x3001;B*&#x6811;&#x7B49;&#x7B49;&#x3002;</p><h3 id="&#x524D;&#x7F00;&#x6811;-Trie"><a href="#&#x524D;&#x7F00;&#x6811;-Trie" class="headerlink" title="&#x524D;&#x7F00;&#x6811;(Trie)"></a>&#x524D;&#x7F00;&#x6811;(Trie)</h3><p>&#x524D;&#x7F00;&#x6811;&#x6216;&#x8005;&#x53EB;&#x5B57;&#x5178;&#x6811;&#x662F;&#x9897;&#x591A;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x3002;&#x524D;&#x7F00;&#x6811;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x548C;&#x7EDF;&#x8BA1;&#x5E8F;&#x5217;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x4E8E;&#x5B57;&#x7B26;&#x4E32;&#x3001;&#x6570;&#x5B57;&#x3001;&#x5F62;&#x72B6;&#x5E8F;&#x5217;&#x3002;&#x4E0E;&#x5176;&#x4ED6;&#x641C;&#x7D22;&#x6811;&#x8282;&#x70B9;&#x5C31;&#x4EE3;&#x8868;&#x81EA;&#x5DF1;&#x7684;&#x952E;&#x503C;&#x4E0D;&#x540C;&#xFF0C;&#x524D;&#x7F00;&#x6811;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x5230;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#x4EE3;&#x8868;&#x6B64;&#x8282;&#x70B9;&#x7684;&#x952E;&#x503C;&#xFF0C;&#x8FD9;&#x70B9;&#x6027;&#x8D28;&#x7ED9;&#x4E86;&#x524D;&#x7F00;&#x6811;&#x5728;&#x641C;&#x7D22;&#x5E8F;&#x5217;&#x5F88;&#x5927;&#x7684;&#x4F18;&#x52BF;&#x3002;&#x5047;&#x5982;&#xFF0C;&#x6240;&#x8981;&#x641C;&#x5BFB;&#x7684;&#x5E8F;&#x5217;&#x7EC4;&#x5408;&#x6709;N&#x79CD;&#xFF0C;&#x5E8F;&#x5217;&#x6700;&#x957F;&#x4E3A;M&#x3002;&#x5219;&#x7528;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x6811;&#x53BB;&#x5BFB;&#x627E;&#x5E8F;&#x5217;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<script type="math/tex">O(\log_{2}{n})，前缀树复杂度为，而当和比较大的时候，，前缀树复杂度为O(M)，而当N和M比较大的时候，\log_{2}{N}</script>&#x4F1A;&#x6BD4;M&#x5927;&#x5F97;&#x591A;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x641C;&#x7D22;&#x5E8F;&#x5217;&#x4E0A;&#xFF0C;&#x524D;&#x7F00;&#x6811;&#x76F8;&#x6BD4;&#x4E8E;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x6709;&#x5F88;&#x5927;&#x7684;&#x4F18;&#x52BF;&#x3002;&#x5B83;&#x7684;&#x8FD9;&#x79CD;&#x6027;&#x8D28;&#xFF0C;&#x4F7F;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x5305;&#x542B;&#x5F88;&#x591A;&#x524D;&#x7F00;&#x5E8F;&#x5217;&#xFF0C;&#x8BA9;&#x5B83;&#x5F97;&#x540D;&#x4E3A;&#x524D;&#x7F00;&#x6811;&#x3002;&#x5B83;&#x88AB;&#x8FD0;&#x7528;&#x6700;&#x5E7F;&#x6CDB;&#x7684;&#x662F;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5305;&#x542B;26&#x4E2A;&#x5B57;&#x6BCD;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x8BB0;&#x5F55;&#x4E0B;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x5185;&#x6240;&#x6709;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E8F;&#x5217;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x6709;&#x7EDF;&#x8BA1;&#x529F;&#x80FD;&#x7684;&#x5B57;&#x5178;&#xFF0C;&#x6240;&#x4EE5;&#x53C8;&#x5F97;&#x540D;&#x4E3A;&#x5B57;&#x5178;&#x6811;&#x3002;</p><h3 id="&#x57FA;&#x6570;&#x6811;-Radix-Tree"><a href="#&#x57FA;&#x6570;&#x6811;-Radix-Tree" class="headerlink" title="&#x57FA;&#x6570;&#x6811;(Radix-Tree)"></a>&#x57FA;&#x6570;&#x6811;(Radix-Tree)</h3><p>&#x57FA;&#x6570;&#x6811;&#x662F;&#x524D;&#x7F00;&#x6811;&#x7684;&#x53D8;&#x79CD;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x79CD;&#x538B;&#x7F29;&#x524D;&#x7F00;&#x6811;&#x3002;&#x5B83;&#x81EA;&#x7136;&#x6709;&#x524D;&#x7F00;&#x6811;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x5230;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#x4EE3;&#x8868;&#x6B64;&#x8282;&#x70B9;&#x7684;&#x952E;&#x503C;&#x8FD9;&#x4E00;&#x6027;&#x8D28;&#xFF0C;&#x5E76;&#x4E14;&#x5982;&#x679C;&#x67D0;&#x8282;&#x70B9;&#x662F;&#x5176;&#x7236;&#x8282;&#x70B9;&#x7684;&#x552F;&#x4E00;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;&#x6B64;&#x8282;&#x70B9;&#x5C31;&#x4F1A;&#x548C;&#x7236;&#x8282;&#x70B9;&#x5408;&#x5E76;&#x3002;&#x540C;&#x6837;&#x5730;&#xFF0C;&#x4E0E;&#x524D;&#x7F00;&#x6811;&#x76F8;&#x540C;&#xFF0C;&#x57FA;&#x6570;&#x6811;&#x9002;&#x5408;&#x4E8E;&#x641C;&#x7D22;&#x5E8F;&#x5217;&#x3002;&#x5E76;&#x4E14;&#x57FA;&#x4E8E;&#x57FA;&#x6570;&#x6811;&#x81EA;&#x5DF1;&#x72EC;&#x6709;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x5B83;&#x66F4;&#x9002;&#x5408;&#x641C;&#x7D22;&#x90A3;&#x4E9B;&#x90E8;&#x5206;&#x5E8F;&#x5217;&#x51E0;&#x4E4E;&#x4E00;&#x81F4;&#x7684;&#x5E8F;&#x5217;&#x3002;&#x6BD4;&#x5982;&#xFF0C;IP&#x5730;&#x5740;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x9996;&#x6BB5;&#x5E8F;&#x5217;&#x90FD;&#x4E3A;192&#xFF0C;&#x641C;&#x7D22;&#x8FD9;&#x79CD;&#x5E8F;&#x5217;&#xFF0C;&#x57FA;&#x6570;&#x6811;&#x76F8;&#x6BD4;&#x4E8E;&#x524D;&#x7F00;&#x6811;&#x590D;&#x6742;&#x5EA6;&#x66F4;&#x4F4E;&#xFF0C;&#x5360;&#x7684;&#x7A7A;&#x95F4;&#x66F4;&#x5C11;&#x3002;</p><h3 id="&#x533A;&#x95F4;&#x6811;-Interval-Tree"><a href="#&#x533A;&#x95F4;&#x6811;-Interval-Tree" class="headerlink" title="&#x533A;&#x95F4;&#x6811;(Interval-Tree)"></a>&#x533A;&#x95F4;&#x6811;(Interval-Tree)</h3><p>&#x533A;&#x95F4;&#x6811;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B83;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x62D3;&#x5C55;&#xFF0C;&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#x7684;&#x662F;&#x5C06;&#x7EA2;&#x9ED1;&#x6811;&#x62D3;&#x5C55;&#x4E3A;&#x533A;&#x95F4;&#x6811;&#x3002;&#x4E00;&#x822C;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x8282;&#x70B9;&#x7684;&#x952E;&#x4E3A;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x800C;&#x5C06;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x62D3;&#x5C55;&#x6210;&#x533A;&#x95F4;&#x6811;&#x540E;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x952E;&#x53D8;&#x4E3A;&#x4E00;&#x4E2A;&#x533A;&#x95F4;&#xFF0C;&#x8FD9;&#x6837;&#x533A;&#x95F4;&#x6811;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x91CD;&#x53E0;&#x533A;&#x95F4;&#x7684;&#x67E5;&#x8BE2;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x67E5;&#x8BE2;&#x5728;&#x533A;&#x95F4;&#x6811;&#x4E2D;&#x4E0E;&#x88AB;&#x67E5;&#x8BE2;&#x533A;&#x95F4;&#x91CD;&#x53E0;&#x7684;&#x533A;&#x95F4;&#x3002;&#x533A;&#x95F4;&#x6811;&#x4EC5;&#x662F;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x62D3;&#x5C55;&#xFF0C;&#x533A;&#x95F4;&#x6811;&#x4ECD;&#x4FDD;&#x7559;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x5B83;&#x4EE5;&#x533A;&#x95F4;&#x7684;&#x4F4E;&#x4F4D;&#x4F5C;&#x4E3A;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6392;&#x5E8F;&#x4F4D;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8FD8;&#x8981;&#x8BB0;&#x5F55;&#x6B64;&#x8282;&#x70B9;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x5B50;&#x6811;&#x7684;&#x6700;&#x5927;&#x7684;&#x533A;&#x95F4;&#x9AD8;&#x4F4D;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5224;&#x65AD;&#x6240;&#x67E5;&#x8BE2;&#x533A;&#x95F4;&#x5728;&#x5DE6;&#x5B50;&#x6811;&#x8FD8;&#x662F;&#x53F3;&#x5B50;&#x6811;&#xFF0C;&#x5982;&#x679C;&#x67E5;&#x8BE2;&#x533A;&#x95F4;&#x4F4E;&#x4F4D;&#x5927;&#x4E8E;&#x5DE6;&#x5B50;&#x6811;&#x8BB0;&#x5F55;&#x7684;&#x6700;&#x5927;&#x9AD8;&#x4F4D;&#xFF0C;&#x5219;&#x533A;&#x95F4;&#x53EA;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x53F3;&#x5B50;&#x6811;&#xFF0C;&#x5426;&#x5219;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5DE6;&#x5B50;&#x6811;&#x3002;&#x533A;&#x95F4;&#x6811;&#x67E5;&#x8BE2;&#x7684;&#x533A;&#x95F4;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x591A;&#x4E2A;&#x91CD;&#x53E0;&#x7684;&#x533A;&#x95F4;&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x67E5;&#x8BE2;&#x5230;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x91CD;&#x53E0;&#x533A;&#x95F4;&#x3002;</p><h3 id="&#x7EBF;&#x6BB5;&#x6811;-Segment-Tree"><a href="#&#x7EBF;&#x6BB5;&#x6811;-Segment-Tree" class="headerlink" title="&#x7EBF;&#x6BB5;&#x6811;(Segment-Tree)"></a>&#x7EBF;&#x6BB5;&#x6811;(Segment-Tree)</h3><p>&#x7EBF;&#x6BB5;&#x6811;&#x4E5F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;&#x89E3;&#x51B3;&#x4E0D;&#x540C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x51FA;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x6BB5;&#x6811;&#x3002;&#x4EE5;&#x4E0B;&#x4E3A;&#x7EBF;&#x6BB5;&#x6811;&#x7684;&#x5173;&#x952E;&#x6027;&#x8D28;&#x3002;</p><ul><li>&#x6240;&#x6709;&#x7684;&#x8282;&#x70B9;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;&#x5355;&#x5143;&#x533A;&#x95F4;&#xFF0C;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x8868;&#x793A;&#x7684;&#x533A;&#x95F4;&#x4E3A;[a,b]&#xFF0C;&#x5B83;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x8868;&#x793A;&#x7684;&#x533A;&#x95F4;&#x4E3A;[a,(a+b)/2]&#xFF0C;&#x53F3;&#x5B50;&#x6811;&#x8868;&#x793A;&#x7684;&#x533A;&#x95F4;&#x4E3A;[(a+b)/2+1,b]</li><li>&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x6301;&#x6709;&#x7EBF;&#x6BB5;&#x6811;&#x5EFA;&#x7ACB;&#x7684;&#x5143;&#x7D20;&#x7684;&#x503C;&#xFF0C;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x6301;&#x6709;&#x5176;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x201D;&#x5F52;&#x5E76;&#x201C;&#x503C;&#xFF0C;&#x201D;&#x5F52;&#x5E76;&#x201C;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x5B9A;&#x4E49;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x76F8;&#x52A0;&#x3001;&#x6700;&#x5927;&#x503C;&#x3001;&#x6700;&#x5C0F;&#x503C;</li></ul><p>&#x6839;&#x636E;&#x7EBF;&#x6BB5;&#x6811;&#x5206;&#x5272;&#x533A;&#x95F4;&#x7684;&#x6027;&#x8D28;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5047;&#x5982;&#x7EBF;&#x6BB5;&#x6811;&#x4ECE;n&#x4E2A;&#x5143;&#x7D20;&#x5EFA;&#x7ACB;&#xFF0C;&#x7EBF;&#x6BB5;&#x6811;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x6709;n&#x4E2A;&#xFF0C;&#x5185;&#x90E8;&#x8282;&#x70B9;&#x6709;n-1&#x4E2A;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x7EBF;&#x6BB5;&#x6811;&#x662F;&#x6EE1;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x6240;&#x4EE5;&#x6811;&#x9AD8;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x3002;&#x7EBF;&#x6BB5;&#x6811;&#x652F;&#x6301;&#x4ECE;&#x5143;&#x7D20;&#x96C6;&#x5408;&#x5EFA;&#x7ACB;&#x3001;&#x67E5;&#x8BE2;&#x67D0;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x201D;&#x5F52;&#x5E76;&#x201D;&#x503C;&#x3001;&#x66F4;&#x65B0;&#x5355;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5355;&#x70B9;&#x66F4;&#x65B0;&#x3001;&#x66F4;&#x65B0;&#x533A;&#x95F4;&#x5185;&#x5143;&#x7D20;&#x7684;&#x533A;&#x95F4;&#x66F4;&#x65B0;&#x8FD9;&#x56DB;&#x79CD;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x7EBF;&#x6BB5;&#x6811;&#x66F4;&#x65B0;&#x64CD;&#x4F5C;&#x6709;&#x4E2A;&#x5173;&#x952E;&#x4F18;&#x5316;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5355;&#x70B9;&#x66F4;&#x65B0;&#x8981;&#x66F4;&#x65B0;&#x53F6;&#x8282;&#x70B9;&#x548C;&#x5176;&#x7236;&#x8282;&#x70B9;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x3002;&#x533A;&#x95F4;&#x66F4;&#x65B0;&#x8981;&#x66F4;&#x65B0;&#x591A;&#x4E2A;&#x53F6;&#x8282;&#x70B9;&#xFF0C;&#x548C;&#x66F4;&#x65B0;&#x8FD9;&#x4E9B;&#x53F6;&#x8282;&#x70B9;&#x7684;&#x7236;&#x8282;&#x70B9;&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x4E0D;&#x53EF;&#x80FD;&#x4E3A;<script type="math/tex">O(\log_{2}{n})</script>&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5F15;&#x5165;&#x4E86;&#x5EF6;&#x8FDF;&#x6807;&#x8BB0;(lazy-tag)&#x4F18;&#x5316;&#x3002;&#x6709;&#x4E86;&#x5EF6;&#x8FDF;&#x6807;&#x8BB0;&#x4F18;&#x5316;&#x540E;&#xFF0C;&#x66F4;&#x65B0;&#x533A;&#x95F4;&#x53EA;&#x4F1A;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x66F4;&#x65B0;&#x5230;&#x6240;&#x9700;&#x66F4;&#x65B0;&#x7684;&#x533A;&#x95F4;&#x8FD9;&#x4E00;&#x5C42;&#xFF0C;&#x4E0D;&#x4F1A;&#x518D;&#x5411;&#x4E0B;&#x66F4;&#x65B0;&#x5230;&#x53F6;&#x8282;&#x70B9;&#x3002;&#x7136;&#x540E;&#x5411;&#x6240;&#x9700;&#x66F4;&#x65B0;&#x7684;&#x533A;&#x95F4;&#x6807;&#x4E0A;&#x5EF6;&#x8FDF;&#x6807;&#x8BB0;&#x3002;&#x7B49;&#x5230;&#x4EE5;&#x540E;&#x67E5;&#x8BE2;&#x5230;&#x6B64;&#x533A;&#x95F4;&#x65F6;&#xFF0C;&#x624D;&#x66F4;&#x65B0;&#x4E0B;&#x5C42;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x5411;&#x4E0B;&#x5C42;&#x4F20;&#x9012;&#x5EF6;&#x8FDF;&#x6807;&#x8BB0;&#x3002;&#x8FD9;&#x6709;&#x70B9;&#x50CF;&#x8282;&#x70B9;&#x62C9;&#x53D6;(pull)&#x66F4;&#x65B0;&#xFF0C;&#x7B49;&#x5230;&#x8282;&#x70B9;&#x88AB;&#x67E5;&#x8BE2;&#x5230;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4F1A;&#x53BB;&#x4E0A;&#x5C42;&#x8282;&#x70B9;&#x62C9;&#x53D6;&#x88AB;&#x66F4;&#x65B0;&#x8FC7;&#x7684;&#x503C;&#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x91CC;&#x804A;&#x7684;&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6709;&#x9650;&#x3002;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x6811;&#x72B6;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6BD4;&#x5982;&#xFF1A;2-3-4&#x6811;(2-3-4-Tree)&#x3001;&#x5DE6;&#x9AD8;&#x6811;(Leftist-Tree)&#x3001;&#x8D62;&#x8005;&#x6811;(Winner-Tree)&#x3001;&#x8D25;&#x8005;&#x6811;(Loser-Tree)&#x3001;R&#x6811;(R-Tree)&#x3001;K-d&#x6811;(K-d-Tree)&#x7B49;&#x7B49;&#x3002;</p><h2 id="&#x4E0D;&#x76F8;&#x4EA4;&#x96C6;&#x5408;"><a href="#&#x4E0D;&#x76F8;&#x4EA4;&#x96C6;&#x5408;" class="headerlink" title="&#x4E0D;&#x76F8;&#x4EA4;&#x96C6;&#x5408;"></a>&#x4E0D;&#x76F8;&#x4EA4;&#x96C6;&#x5408;</h2><h3 id="&#x5E76;&#x67E5;&#x96C6;-Union-Find"><a href="#&#x5E76;&#x67E5;&#x96C6;-Union-Find" class="headerlink" title="&#x5E76;&#x67E5;&#x96C6;(Union-Find)"></a>&#x5E76;&#x67E5;&#x96C6;(Union-Find)</h3><p>&#x5E76;&#x67E5;&#x96C6;&#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x5E76;&#x67E5;&#x96C6;&#x7279;&#x6B8A;&#x7684;&#x6027;&#x8D28;&#x662F;&#x5305;&#x542B;&#x7684;&#x5143;&#x7D20;&#x4E92;&#x76F8;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x6709;&#x7B49;&#x4EF7;&#x5173;&#x7CFB;&#xFF0C;&#x7B49;&#x4EF7;&#x7684;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#xFF0C;&#x5E76;&#x67E5;&#x96C6;&#x5C31;&#x662F;&#x7531;&#x8FD9;&#x4E9B;&#x96C6;&#x5408;&#x7EC4;&#x6210;&#x7684;&#x3002;&#x5E76;&#x67E5;&#x96C6;&#x9664;&#x4E86;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x63D0;&#x4F9B;find&#x64CD;&#x4F5C;&#x67E5;&#x627E;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#x6240;&#x5728;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x63D0;&#x4F9B;unite&#x64CD;&#x4F5C;&#x5C06;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x3002;</p><p>&#x5E76;&#x67E5;&#x96C6;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x96C6;&#x5408;&#x53EF;&#x4EE5;&#x7528;&#x94FE;&#x8868;&#x6216;&#x8005;&#x6811;&#x8868;&#x793A;&#xFF0C;&#x7531;&#x94FE;&#x8868;&#x8868;&#x793A;&#x96C6;&#x5408;&#x590D;&#x6742;&#x5EA6;&#x9AD8;&#x4E8E;&#x7528;&#x6811;&#x8868;&#x793A;&#x96C6;&#x5408;&#xFF0C;&#x800C;&#x4E14;&#x5B9E;&#x73B0;&#x8FD8;&#x66F4;&#x590D;&#x6742;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x7528;&#x94FE;&#x8868;&#x8868;&#x793A;&#x96C6;&#x5408;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x4EE5;&#x6811;&#x8868;&#x793A;&#x96C6;&#x5408;&#x6765;&#x804A;&#x5E76;&#x67E5;&#x96C6;&#x3002;</p><p>&#x6BCF;&#x4E2A;&#x96C6;&#x5408;&#x90FD;&#x7528;&#x4E00;&#x68F5;&#x6811;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x90A3;&#x4E48;&#x5E76;&#x67E5;&#x96C6;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x68EE;&#x6797;&#x3002;&#x5E76;&#x67E5;&#x96C6;&#x8FD8;&#x9690;&#x542B;&#x4E00;&#x4E2A;&#x7279;&#x70B9;&#x5C31;&#x662F;&#x65E2;&#x7136;&#x63D0;&#x4F9B;&#x67E5;&#x627E;&#x548C;&#x5408;&#x5E76;&#x96C6;&#x5408;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x5728;&#x5E76;&#x67E5;&#x96C6;&#x4E2D;&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x96C6;&#x5408;&#x3002;&#x7531;&#x6811;&#x8868;&#x793A;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;&#x5C31;&#x5728;&#x5E76;&#x67E5;&#x96C6;&#x4E2D;&#x4EE3;&#x8868;&#x8BE5;&#x96C6;&#x5408;&#x3002;&#x81F3;&#x6B64;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x8868;&#x793A;&#x6240;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x8BB0;&#x5F55;&#x7236;&#x8282;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x51FA;&#x5E76;&#x67E5;&#x96C6;&#x4E86;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x6BCF;&#x6B21;&#x5408;&#x5E76;&#x53EA;&#x4EFB;&#x610F;&#x7684;&#x5C06;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x5408;&#x5E76;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x96C6;&#x5408;&#x8868;&#x793A;&#x7684;&#x6811;&#x4E25;&#x91CD;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x5F15;&#x51FA;&#x5E76;&#x67E5;&#x96C6;&#x7684;&#x4E24;&#x4E2A;&#x4F18;&#x5316;&#xFF1A;</p><ul><li>&#x6309;&#x79E9;(rank)&#x5408;&#x5E76;</li></ul><p>&#x4E3A;&#x6BCF;&#x68F5;&#x6811;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x79E9;&#xFF0C;&#x79E9;&#x4EE3;&#x8868;&#x8FD9;&#x68F5;&#x6811;&#x9AD8;&#x7684;&#x4E0A;&#x9650;&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x79E9;&#x4E0D;&#x7B49;&#x4E8E;&#x6811;&#x7684;&#x9AD8;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6BCF;&#x6B21;&#x5408;&#x5E76;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x5C06;&#x79E9;&#x4F4E;&#x7684;&#x6811;&#x4F5C;&#x4E3A;&#x79E9;&#x9AD8;&#x7684;&#x6811;&#x7684;&#x5B50;&#x6811;&#xFF0C;&#x6765;&#x4FDD;&#x6301;&#x6811;&#x7684;&#x5E73;&#x8861;&#x3002;</p><ul><li>&#x8DEF;&#x5F84;&#x538B;&#x7F29;</li></ul><p>&#x6BCF;&#x6B21;&#x67E5;&#x627E;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x7236;&#x8282;&#x70B9;&#x76F4;&#x63A5;&#x8FDE;&#x63A5;&#x5230;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x51CF;&#x5C0F;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x4F7F;&#x6811;&#x66F4;&#x52A0;&#x6241;&#x5E73;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8FDE;&#x63A5;&#x5230;&#x6839;&#x8282;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x6539;&#x53D8;&#x6811;&#x7684;&#x79E9;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x8BF4;&#x660E;&#x4E86;&#x79E9;&#x4E0D;&#x7B49;&#x4E8E;&#x6811;&#x9AD8;&#x3002;&#x800C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x66F4;&#x6539;&#x5462;&#xFF0C;&#x5982;&#x679C;&#x6BCF;&#x6B21;&#x67E5;&#x627E;&#x5143;&#x7D20;&#x7684;&#x96C6;&#x5408;&#x90FD;&#x6539;&#x53D8;&#x6811;&#x8BB0;&#x5F55;&#x7684;&#x79E9;&#x4E0D;&#x4EC5;&#x4E0D;&#x4F1A;&#x8282;&#x7701;&#x4EE3;&#x4EF7;&#xFF0C;&#x53EA;&#x4F1A;&#x589E;&#x52A0;&#x4EE3;&#x4EF7;&#x3002;&#x8FD9;&#x6837;&#x6765;&#x60F3;&#xFF0C;&#x5C06;&#x79E9;&#x9AD8;&#x4F5C;&#x4E3A;&#x5B50;&#x6811;&#x548C;&#x5C06;&#x79E9;&#x4F4E;&#x4F5C;&#x4E3A;&#x5B50;&#x6811;&#x662F;&#x4E0D;&#x5F71;&#x54CD;&#x5408;&#x5E76;&#x64CD;&#x4F5C;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x7684;&#xFF0C;&#x5F71;&#x54CD;&#x7684;&#x662F;&#x67E5;&#x627E;&#x64CD;&#x4F5C;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x800C;&#x67E5;&#x627E;&#x64CD;&#x4F5C;&#x6BCF;&#x6B21;&#x53C8;&#x6709;&#x8DEF;&#x5F84;&#x538B;&#x7F29;&#x4F18;&#x5316;&#xFF0C;&#x6700;&#x540E;&#x5C31;&#x76F8;&#x5DEE;&#x51FA;&#x591A;&#x641C;&#x7D22;&#x51E0;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x76F8;&#x6BD4;&#x4E8E;&#x6BCF;&#x6B21;&#x67E5;&#x627E;&#x64CD;&#x4F5C;&#x90FD;&#x68C0;&#x67E5;&#x6811;&#x7684;&#x79E9;&#xFF0C;&#x8FD9;&#x70B9;&#x4EE3;&#x4EF7;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684;&#x3002;</p><p>&#x5C06;&#x6309;&#x79E9;&#x5408;&#x5E76;&#x548C;&#x8DEF;&#x5F84;&#x538B;&#x7F29;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x4F18;&#x5316;&#x5E76;&#x67E5;&#x96C6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5E76;&#x67E5;&#x96C6;&#x5E73;&#x644A;&#x4E0B;&#x6765;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x964D;&#x4E3A;<script type="math/tex">O(\alpha (n))</script>&#x3002;</p><script type="math/tex; mode=display">\alpha (n)是n=f(x)=A(x,x)（Ackermann函数）的反函数</script><script type="math/tex; mode=display">\alpha(n)在n十分巨大的时候仍小于5</script><p>&#x5373;&#x5E76;&#x67E5;&#x96C6;&#x5E73;&#x644A;&#x4E0B;&#x6765;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#x5E38;&#x6570;&#x3002;&#x5177;&#x4F53;&#x8BC1;&#x660E;&#x8BF7;&#x770B;&#x7B97;&#x5BFC;&#x7B2C;21&#x7AE0;&#x7B2C;4&#x8282;&#x3002;</p><blockquote><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5C31;&#x662F;&#x5143;&#x7D20;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x96C6;&#x5408;&#x90FD;&#x6709;&#x72EC;&#x7279;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x8FD9;&#x4E9B;&#x6027;&#x8D28;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x72EC;&#x7279;&#x7684;&#x529F;&#x80FD;&#x3002;&#x800C;&#x6BCF;&#x5F53;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6267;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x8FDD;&#x53CD;&#x4E86;&#x6027;&#x8D28;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5C31;&#x4F1A;&#x91CD;&#x65B0;&#x8C03;&#x6574;&#x7ED3;&#x6784;&#x4EE5;&#x7EF4;&#x6301;&#x6027;&#x8D28;&#x3002;</p></blockquote><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>Java&#x54C8;&#x5E0C;&#x8868; <a href="http://tech.meituan.com/java-hashmap.html" target="_blank" rel="noopener">http://tech.meituan.com/java-hashmap.html</a></p><p>Redis&#x54C8;&#x5E0C;&#x8868; <a href="http://redisbook.com/preview/dict/incremental_rehashing.html" target="_blank" rel="noopener">http://redisbook.com/preview/dict/incremental_rehashing.html</a></p><p>python&#x5B57;&#x5178;<a href="http://www.laurentluce.com/posts/python-dictionary-implementation/" target="_blank" rel="noopener">http://www.laurentluce.com/posts/python-dictionary-implementation/</a></p><p>&#x6CCA;&#x677E;&#x5206;&#x5E03; <a href="http://www.ruanyifeng.com/blog/2013/01/poisson_distribution.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2013/01/poisson_distribution.html</a></p><p>&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6027;&#x8D28; <a href="http://www.geeksforgeeks.org/" target="_blank" rel="noopener">http://www.geeksforgeeks.org/</a></p><p>&#x7EBF;&#x6BB5;&#x6811; <a href="http://www.cnblogs.com/TenosDoIt/p/3453089.html" target="_blank" rel="noopener">http://www.cnblogs.com/TenosDoIt/p/3453089.html</a></p><p>&#x5E76;&#x67E5;&#x96C6; <a href="http://www.roading.org/algorithm/introductiontoalgorithm/Disjoint_set.html" target="_blank" rel="noopener">http://www.roading.org/algorithm/introductiontoalgorithm/Disjoint_set.html</a></p>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法灰烬</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%81%B0%E7%83%AC/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%81%B0%E7%83%AC/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x7070;&#x70EC;&#x7684;&#x7ED3;&#x8BED;</p></blockquote><p>&#x672C;&#x7BC7;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#x95EE;&#x9898;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x6027;&#x5F52;&#x7C7B;&#xFF0C;R&#x3001;EXP&#x3001;P&#x3001;NP&#x3001;NPC&#x3001;NPH</p><a id="more"></a><p>&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x7814;&#x7A76;&#x95EE;&#x9898;&#xFF0C;&#x4EBA;&#x4EEC;&#x5C06;&#x95EE;&#x9898;&#x6839;&#x636E;&#x5176;&#x7B97;&#x6CD5;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5212;&#x5206;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x6709;&#x8DA3;&#x7684;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x4EBA;&#x4EEC;&#x73B0;&#x9636;&#x6BB5;&#x5BF9;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x8BA4;&#x8BC6;&#x7684;&#x8FD8;&#x4E0D;&#x591F;&#x6DF1;&#x5165;&#xFF0C;&#x5BFC;&#x81F4;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x662F;&#x975E;&#x9ED1;&#x65E2;&#x767D;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x5305;&#x542B;&#x5173;&#x7CFB;&#x3002;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x6700;&#x56F0;&#x96BE;&#x7684;&#x95EE;&#x9898;&#x662F;&#x7B97;&#x6CD5;&#x6839;&#x672C;&#x65E0;&#x6CD5;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;&#x800C;&#x5728;&#x751F;&#x6D3B;&#x4E2D;&#xFF0C;&#x7B97;&#x6CD5;&#x80FD;&#x591F;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x4EC5;&#x4EC5;&#x662F;&#x5FAE;&#x4E0D;&#x8DB3;&#x9053;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x8FD9;&#x786E;&#x5B9E;&#x4F1A;&#x4F7F;&#x559C;&#x6B22;&#x7B97;&#x6CD5;&#x7684;&#x4EBA;&#x5F88;&#x4F24;&#x5FC3;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x6700;&#x540E;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x6807;&#x9898;&#x53EB;&#x505A;&#x7B97;&#x6CD5;&#x7070;&#x70EC;&#x3002;</p><h2 id="R-Recurrence"><a href="#R-Recurrence" class="headerlink" title="R(Recurrence)"></a>R(Recurrence)</h2><p>R&#x7C7B;&#x95EE;&#x9898;&#x6307;&#x7684;&#x5C31;&#x662F;&#x6709;&#x9650;&#x65F6;&#x95F4;&#x5185;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53EF;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;</p><h2 id="EXP-Exponential"><a href="#EXP-Exponential" class="headerlink" title="EXP(Exponential)"></a>EXP(Exponential)</h2><p>EXP&#x7C7B;&#x95EE;&#x9898;&#x6307;&#x7684;&#x662F;&#x80FD;&#x5728;&#x6307;&#x6570;&#x590D;&#x6742;&#x5EA6;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p><h2 id="P-Polynomial"><a href="#P-Polynomial" class="headerlink" title="P(Polynomial)"></a>P(Polynomial)</h2><p>P&#x7C7B;&#x95EE;&#x9898;&#x6307;&#x7684;&#x662F;&#x80FD;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;&#x800C;&#x4E0D;&#x80FD;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x662F;NP&#x5417;&#xFF1F;&#x4E0D;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x627E;&#x5230;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5E76;&#x4E0D;&#x4EE3;&#x8868;&#x5C31;&#x6CA1;&#x6709;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x73B0;&#x5728;&#x4EBA;&#x4EEC;&#x5C40;&#x9650;&#x4E8E;&#x6B64;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4EBA;&#x4EEC;&#x53C8;&#x5EFA;&#x7ACB;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x5206;&#x7C7B;NP&#xFF0C;&#x6765;&#x4EE3;&#x8868;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;</p><h2 id="NP-Nondeterministic-Polynomial"><a href="#NP-Nondeterministic-Polynomial" class="headerlink" title="NP(Nondeterministic-Polynomial)"></a>NP(Nondeterministic-Polynomial)</h2><p>NP&#x7C7B;&#x95EE;&#x9898;&#x6307;&#x7684;&#x662F;&#x975E;&#x786E;&#x5B9A;&#x7684;P&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x90A3;&#x4E48;&#x6240;&#x6709;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x627E;&#x4E0D;&#x5230;&#x89E3;&#x7684;&#x95EE;&#x9898;&#x90FD;&#x5C5E;&#x4E8E;NP&#x7C7B;&#x95EE;&#x9898;&#x5417;&#xFF1F;&#x4E5F;&#x4E0D;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x3002;&#x5982;&#x679C;&#x6211;&#x80FD;&#x8BC1;&#x660E;&#x67D0;&#x4E2A;&#x95EE;&#x9898;&#x53EA;&#x80FD;&#x5728;&#x6307;&#x6570;&#x590D;&#x6742;&#x5EA6;&#x627E;&#x5230;&#x89E3;&#xFF0C;&#x90A3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x4E0D;&#x5C5E;&#x4E8E;NP&#xFF0C;&#x5C5E;&#x4E8E;EXP&#x3002;NP&#x7C7B;&#x95EE;&#x9898;&#x5B9A;&#x4E49;&#xFF0C;&#x80FD;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x9A8C;&#x8BC1;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x89E3;&#x3002;&#x6BD5;&#x7ADF;&#xFF0C;&#x80FD;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x9A8C;&#x8BC1;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x89E3;&#xFF0C;&#x624D;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x6C42;&#x51FA;&#x89E3;&#x3002;</p><h2 id="NPC-Nondeterministic-Polynomial-Complete"><a href="#NPC-Nondeterministic-Polynomial-Complete" class="headerlink" title="NPC(Nondeterministic-Polynomial-Complete)"></a>NPC(Nondeterministic-Polynomial-Complete)</h2><p>&#x4E86;&#x89E3;&#x4E86;P&#x4E0E;NP&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;P&#x4E0E;NP&#x4E4B;&#x95F4;&#x5343;&#x4E1D;&#x4E07;&#x7F15;&#x7684;&#x8054;&#x7CFB;&#x3002;&#x6839;&#x636E;&#x5B9A;&#x4E49;&#x53EA;&#x8981;&#x95EE;&#x9898;&#x662F;P&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;NP&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;NP&#x7C7B;&#x95EE;&#x9898;&#x4E0E;P&#x7C7B;&#x95EE;&#x9898;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x4EBA;&#x80FD;&#x591F;&#x8BC1;&#x660E;&#x51FA;&#x6765;&#x3002;&#x4EBA;&#x4EEC;&#x504F;&#x5411;&#x4E8E;NP&#x7C7B;&#x95EE;&#x9898;&#x4E0D;&#x7B49;&#x4EF7;&#x4E8E;P&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7B49;&#x4EF7;&#x5C31;&#x5F15;&#x51FA;&#x4E86;NPC&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x5728;NP&#x95EE;&#x9898;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x957F;&#x4E45;&#x4EE5;&#x6765;&#x4EBA;&#x4EEC;&#x4E00;&#x76F4;&#x5C1D;&#x8BD5;&#xFF0C;&#x4F46;&#x90FD;&#x627E;&#x4E0D;&#x5230;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x89E3;&#xFF0C;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x88AB;&#x5EFA;&#x7ACB;&#x4E3A;NPC&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;NPC&#x95EE;&#x9898;&#x662F;NP&#x95EE;&#x9898;&#x4E2D;&#x6700;&#x96BE;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x95EE;&#x9898;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8FD9;&#x4E9B;&#x5728;NP&#x7C7B;&#x95EE;&#x9898;&#x4E2D;&#x7684;NPC&#x7C7B;&#x95EE;&#x9898;&#x627E;&#x4E0D;&#x5230;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x89E3;&#xFF0C;&#x8BA9;&#x4EBA;&#x4EEC;&#x66F4;&#x52A0;&#x76F8;&#x4FE1;&#xFF0C;NP&#x7C7B;&#x95EE;&#x9898;&#x4E0D;&#x7B49;&#x4EF7;&#x4E8E;P&#x7C7B;&#x95EE;&#x9898;&#x3002;</p><p>&#x90A3;&#x4E48;&#xFF0C;&#x5047;&#x5982;&#x6709;&#x4E00;&#x4E2A;NP&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x5B83;&#x662F;&#x4E0D;&#x662F;NPC&#x7C7B;&#x95EE;&#x9898;&#xFF1F;&#x8FD9;&#x5C31;&#x7528;&#x5230;&#x4E86;&#x901A;&#x7528;&#x6280;&#x5DE7;-&#x5F52;&#x7EA6;(Reducibility)&#x3002;</p><p>&#x5047;&#x5982;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x95EE;&#x9898;A&#x548C;B&#x3002;&#x5982;&#x679C;&#xFF0C;&#x80FD;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x5C06;&#x95EE;&#x9898;A&#x7684;&#x8F93;&#x5165;&#x8F6C;&#x5316;&#x4E3A;&#x95EE;&#x9898;B&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x95EE;&#x9898;B&#x7684;&#x7B97;&#x6CD5;&#x6C42;&#x89E3;&#x51FA;&#x95EE;&#x9898;B&#x7684;&#x89E3;&#xFF0C;&#x518D;&#x5728;&#x591A;&#x9879;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x5C06;&#x95EE;&#x9898;B&#x7684;&#x89E3;&#x8F6C;&#x5316;&#x4E3A;&#x95EE;&#x9898;A&#x7684;&#x89E3;&#xFF0C;&#x5F97;&#x5230;&#x95EE;&#x9898;A&#x7684;&#x89E3;&#x3002;&#x5C31;&#x8BA4;&#x4E3A;&#x95EE;&#x9898;A&#x53EF;&#x4EE5;&#x5F52;&#x7EA6;&#x4E3A;&#x95EE;&#x9898;B&#x3002;</p><p>&#x56DE;&#x5230;&#x95EE;&#x9898;&#xFF0C;&#x5047;&#x5982;&#x6240;&#x6709;&#x7684;NP&#x7C7B;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x4EE5;&#x5F52;&#x7EA6;&#x6210;&#x8FD9;&#x4E2A;NP&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;NP&#x7C7B;&#x95EE;&#x9898;&#x5C31;&#x662F;NPC&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x4E5F;&#x662F;NPC&#x95EE;&#x9898;&#x7684;&#x5B9A;&#x4E49;&#x3002;&#x4EBA;&#x4EEC;&#x5DF2;&#x7ECF;&#x53D1;&#x73B0;&#x4E86;&#x5F88;&#x591A;NPC&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x5728;&#x4E0D;&#x65AD;&#x589E;&#x591A;&#x3002;</p><h2 id="NPH-Nondeterministic-Polynomial-Hard"><a href="#NPH-Nondeterministic-Polynomial-Hard" class="headerlink" title="NPH(Nondeterministic-Polynomial-Hard)"></a>NPH(Nondeterministic-Polynomial-Hard)</h2><p>&#x6839;&#x636E;NPC&#x7C7B;&#x95EE;&#x9898;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;&#x679C;&#x95EE;&#x9898;&#x5C5E;&#x4E8E;NP&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x6240;&#x6709;NP&#x7C7B;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x4EE5;&#x5F52;&#x7EA6;&#x6210;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;NPC&#x7C7B;&#x95EE;&#x9898;&#x3002;NPH&#x7C7B;&#x95EE;&#x9898;&#x4E0E;NPC&#x7C7B;&#x95EE;&#x9898;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x4E0D;&#x5C5E;&#x4E8E;NP&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x6240;&#x6709;NP&#x7C7B;&#x95EE;&#x9898;&#x8FD8;&#x90FD;&#x53EF;&#x4EE5;&#x5F52;&#x7EA6;&#x6210;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;NPH&#x7C7B;&#x95EE;&#x9898;&#x3002;NPH&#x7C7B;&#x95EE;&#x9898;&#x53EF;&#x80FD;&#x4F1A;&#x6BD4;NPC&#x7C7B;&#x95EE;&#x9898;&#x8FD8;&#x8981;&#x96BE;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x4E3A;&#x6240;&#x63D0;&#x5230;&#x7684;&#x7B97;&#x6CD5;&#x7C7B;&#x578B;&#x5168;&#x5BB6;&#x798F;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x590D;&#x6742;&#x5EA6;&#x7C7B;&#x578B;.JPG" alt="blog_&#x590D;&#x6742;&#x5EA6;&#x7C7B;&#x578B;"></p><p>&#x6700;&#x540E;&#x518D;&#x732E;&#x4E0A;&#x4E00;&#x5F20;&#xFF0C;&#x7B97;&#x6CD5;&#x4E0E;&#x4EBA;&#x7C7B;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x4EBA;&#x7C7B;&#x7684;&#x6E3A;&#x5C0F;.JPG" alt="blog_&#x4EBA;&#x7C7B;&#x7684;&#x6E3A;&#x5C0F;"></p><blockquote><p>&#x5728;&#x8FD9;&#x51E0;&#x7BC7;&#x5173;&#x4E8E;&#x7B97;&#x6CD5;&#x6587;&#x7AE0;&#x7684;&#x6700;&#x540E;&#xFF0C;&#x9664;&#x4E86;&#x60CA;&#x53F9;&#x4E0E;&#x7B97;&#x6CD5;&#x7684;&#x5DE7;&#x5999;&#xFF0C;&#x6211;&#x60F3;&#xFF0C;&#x7559;&#x4E0B;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5C24;&#x4E3A;&#x5408;&#x9002;&#x3002;</p><p>&#x7B97;&#x6CD5;&#x662F;&#x4EBA;&#x4EEC;&#x53D1;&#x660E;&#x7684;&#x8FD8;&#x662F;&#x53D1;&#x73B0;&#x7684;&#xFF1F;&#x4EA6;&#x6216;&#x662F;&#x7B2C;&#x4E09;&#x79CD;&#x4EBA;&#x7C7B;&#x8FD8;&#x4E0D;&#x53EF;&#x77E5;&#x3001;&#x65E0;&#x6CD5;&#x89E3;&#x91CA;&#x7684;&#x7B2C;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#xFF1F;</p></blockquote>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法余晖</title>
      <link href="/%E7%AE%97%E6%B3%95%E4%BD%99%E6%99%96/"/>
      <url>/%E7%AE%97%E6%B3%95%E4%BD%99%E6%99%96/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x843D;&#x65E5;&#x4F59;&#x6656;</p></blockquote><p>&#x672C;&#x7BC7;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#x56FE;&#x8BBA;&#x7684;&#x57FA;&#x672C;&#x7B97;&#x6CD5;&#xFF0C;&#x4E0D;&#x5305;&#x542B;&#x6709;&#x5173;&#x6700;&#x5927;&#x6D41;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x56FE;&#x8BBA;&#x7684;&#x5927;&#x90E8;&#x5206;&#x7B97;&#x6CD5;&#x90FD;&#x662F;&#x7531;&#x6027;&#x8D28;&#x6216;&#x63A8;&#x8BBA;&#x5F97;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x60F3;&#x6734;&#x7D20;&#x60F3;&#x51FA;&#x6765;&#x786E;&#x5B9E;&#x4E0D;&#x5BB9;&#x6613;&#x3002;</p><a id="more"></a><p><br></p><h2 id="&#x4E8C;&#x5206;&#x56FE;-Is-Bipartite"><a href="#&#x4E8C;&#x5206;&#x56FE;-Is-Bipartite" class="headerlink" title="&#x4E8C;&#x5206;&#x56FE;(Is-Bipartite)"></a>&#x4E8C;&#x5206;&#x56FE;(Is-Bipartite)</h2><p>&#x4E00;&#x4E2A;&#x56FE;&#x7684;&#x6240;&#x6709;&#x9876;&#x70B9;&#x53EF;&#x4EE5;&#x5212;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x5B50;&#x96C6;&#xFF0C;&#x4F7F;&#x6240;&#x6709;&#x7684;&#x8FB9;&#x7684;&#x5165;&#x5EA6;&#x548C;&#x51FA;&#x5EA6;&#x9876;&#x70B9;&#x5206;&#x522B;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x5B50;&#x96C6;&#x4E2D;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x8F6C;&#x6362;&#x4E3A;&#x4E0A;&#x7BC7;&#x63D0;&#x5230;&#x8FC7;&#x7684;&#x56FE;&#x7684;&#x7740;&#x8272;&#x95EE;&#x9898;&#xFF0C;&#x53EA;&#x8981;&#x770B;&#x56FE;&#x662F;&#x5426;&#x80FD;&#x7740;2&#x4E2A;&#x989C;&#x8272;&#x5C31;&#x884C;&#x4E86;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x53EF;&#x4EE5;&#x56DE;&#x6EAF;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E0D;&#x8FC7;&#x5BF9;&#x4E8E;&#x7740;2&#x4E2A;&#x989C;&#x8272;&#x53EF;&#x4EE5;BFS&#x89E3;&#x51B3;&#x3002;</p><p>&#x540C;&#x6837;&#xFF0C;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;colors&#x8868;&#x793A;&#x8282;&#x70B9;&#x5DF2;&#x7740;&#x7684;&#x989C;&#x8272;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;IS-BIPARTITE(g,colors)  let queue be new Queue  colors[0] = 1  queue.push(0)  while queue.empty() == false    let v = queue.top()    queue.pop()    for i equal to every vertex in g      if colors[i] == 0        colors[i] = 3 - colors[v]        queue.push(i)      else if colors[i] == colors[v]        return false    end  end  return true</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><h2 id="DFS&#x6539;&#x826F;-DFS-Improve"><a href="#DFS&#x6539;&#x826F;-DFS-Improve" class="headerlink" title="DFS&#x6539;&#x826F;(DFS-Improve)"></a>DFS&#x6539;&#x826F;(DFS-Improve)</h2><p>&#x4E0A;&#x7BC7;&#x6587;&#x7AE0;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x641C;&#x7D22;&#x89E3;&#x7A7A;&#x95F4;&#x662F;&#x6811;&#x5F62;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x8BF4;BFS&#x548C;DFS&#x3002;&#x90A3;&#x4E48;&#x5728;&#x5BF9;&#x56FE;&#x8FDB;&#x884C;BFS&#x548C;DFS&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x5462;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8981;&#x4ECE;&#x89E3;&#x7A7A;&#x95F4;&#x89D2;&#x5EA6;&#x53BB;&#x7406;&#x89E3;&#x3002;&#x5BF9;&#x56FE;&#x8FDB;&#x884C;BFS&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x662F;&#x4E00;&#x9897;&#x6811;&#xFF0C;&#x53EF;&#x53EB;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x6811;&#x3002;&#x800C;DFS&#x662F;&#x591A;&#x68F5;&#x6811;&#x6784;&#x6210;&#x7684;&#x68EE;&#x6797;&#xFF0C;&#x53EF;&#x53EB;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x68EE;&#x6797;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x8981;&#x5BF9;DFS&#x8FDB;&#x884C;&#x5C0F;&#x5C0F;&#x7684;&#x6539;&#x826F;&#xFF0C;&#x5B83;&#x7684;&#x6027;&#x8D28;&#x4F1A;&#x5BF9;&#x89E3;&#x591A;&#x4E2A;&#x95EE;&#x9898;&#x4F1A;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x539F;&#x7248;DFS&#x641C;&#x7D22;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5148;&#x904D;&#x5386;&#x672C;&#x9876;&#x70B9;&#xFF0C;&#x518D;&#x9012;&#x5F52;&#x904D;&#x5386;&#x4E34;&#x63A5;&#x7684;&#x9876;&#x70B9;&#x3002;DFS&#x6539;&#x826F;&#x5E0C;&#x671B;&#x80FD;&#x5148;&#x9012;&#x5F52;&#x904D;&#x5386;&#x4E34;&#x63A5;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x518D;&#x904D;&#x5386;&#x672C;&#x9876;&#x70B9;&#xFF0C;&#x5E76;&#x4E14;&#x6309;&#x904D;&#x5386;&#x987A;&#x5E8F;&#x9006;&#x5E8F;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;DFS-IMPROVE(v,visited,stack)  visited[v] = true  for i equal to every vertex adjacent to v    if visited[i] == false      DFS-IMPROVE(i,visited,stack)  end  stack.push(v)</code></pre><p>&#x8FD9;&#x4E2A;&#x6539;&#x826F;&#x7248;DFS&#x6709;&#x4E2A;&#x5F88;&#x6709;&#x7528;&#x7684;&#x6027;&#x8D28;&#x5C31;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x9876;&#x70B9;A&#x3001;B&#xFF0C;&#x5B58;&#x5728;A&#x5230;B&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x4E0D;&#x5B58;&#x5728;B&#x5230;A&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x4ECE;&#x8BB0;&#x5F55;&#x7684;&#x987A;&#x5E8F;&#x4E2D;&#x53D6;&#x51FA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x5148;&#x53D6;&#x51FA;&#x9876;&#x70B9;A&#xFF0C;&#x518D;&#x53D6;&#x51FA;&#x9876;&#x70B9;B&#x3002;&#x4EE5;&#x4E0B;&#x4E3A;&#x8FD9;&#x4E2A;&#x6027;&#x8D28;&#x7684;&#x8BC1;&#x660E;&#x3002;</p><blockquote><p>&#x5047;&#x8BBE;&#xFF1A;&#x6709;&#x4E24;&#x4E2A;&#x9876;&#x70B9;A&#x548C;B&#xFF0C;&#x5B58;&#x5728;&#x8DEF;&#x5F84;&#x4ECE;A&#x5230;B&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x8DEF;&#x5F84;&#x4ECE;B&#x5230;A&#x3002;</p><p>&#x8BC1;&#x660E;&#xFF1A;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x60C5;&#x51B5;&#x4E00;&#xFF0C;&#x5148;&#x641C;&#x7D22;&#x5230;A&#x9876;&#x70B9;&#xFF0C;&#x60C5;&#x51B5;&#x4E8C;&#xFF0C;&#x5148;&#x641C;&#x7D22;&#x5230;B&#x9876;&#x70B9;&#x3002;&#x5BF9;&#x4E8E;&#x60C5;&#x51B5;&#x4E00;&#xFF0C;&#x7531;&#x547D;&#x9898;&#x53EF;&#x5F97;&#xFF0C;A&#x4E00;&#x5B9A;&#x5B58;&#x50A8;&#x5728;B&#x4E4B;&#x540E;&#xFF0C;&#x90A3;&#x4E48;&#x53D6;&#x51FA;&#x65F6;&#x5148;&#x53D6;&#x51FA;&#x7684;&#x662F;&#x9876;&#x70B9;A&#x3002;&#x5BF9;&#x4E8E;&#x60C5;&#x51B5;&#x4E8C;&#xFF0C;&#x5148;&#x641C;&#x7D22;&#x5230;B&#x9876;&#x70B9;&#xFF0C;&#x7531;&#x4E8E;B&#x9876;&#x70B9;&#x641C;&#x7D22;&#x4E0D;&#x5230;A&#x9876;&#x70B9;&#xFF0C;&#x5219;A&#x4E00;&#x5B9A;&#x5B58;&#x50A8;&#x5728;B&#x4E4B;&#x540E;&#xFF0C;&#x90A3;&#x4E48;&#x53D6;&#x51FA;&#x65F6;&#x4ECD;&#x5148;&#x53D6;&#x51FA;&#x7684;&#x662F;&#x9876;&#x70B9;A&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p><strong><em>DFS&#x6539;&#x826F;&#x6027;&#x8D28;&#xFF1A;&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x9876;&#x70B9;A&#x3001;B&#xFF0C;&#x5B58;&#x5728;A&#x5230;B&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x4E0D;&#x5B58;&#x5728;B&#x5230;A&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x4ECE;&#x8BB0;&#x5F55;&#x7684;&#x987A;&#x5E8F;&#x4E2D;&#x53D6;&#x51FA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x5148;&#x53D6;&#x51FA;&#x9876;&#x70B9;A&#xFF0C;&#x518D;&#x53D6;&#x51FA;&#x9876;&#x70B9;B&#x3002;</em></strong></p><h2 id="&#x6B27;&#x62C9;&#x56DE;&#x8DEF;-Eulerian-Path-And-Circuit"><a href="#&#x6B27;&#x62C9;&#x56DE;&#x8DEF;-Eulerian-Path-And-Circuit" class="headerlink" title="&#x6B27;&#x62C9;&#x56DE;&#x8DEF;(Eulerian-Path-And-Circuit)"></a>&#x6B27;&#x62C9;&#x56DE;&#x8DEF;(Eulerian-Path-And-Circuit)</h2><p>&#x5728;&#x65E0;&#x5411;&#x56FE;&#x4E2D;&#xFF0C;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#x5B9A;&#x4E49;&#x4E3A;&#xFF0C;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x7ECF;&#x8FC7;&#x6240;&#x6709;&#x7684;&#x8FB9;&#xFF0C;&#x6BCF;&#x4E2A;&#x8FB9;&#x53EA;&#x7ECF;&#x8FC7;&#x4E00;&#x6B21;&#x3002;&#x6B27;&#x62C9;&#x56DE;&#x8DEF;&#x5B9A;&#x4E49;&#x4E3A;&#xFF0C;&#x5B58;&#x5728;&#x4E00;&#x6761;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#x4E14;&#x8DEF;&#x5F84;&#x7684;&#x8D77;&#x70B9;&#x548C;&#x7EC8;&#x70B9;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x53EA;&#x6709;&#x8FDE;&#x901A;&#x56FE;&#x624D;&#x80FD;&#x6709;&#x6B27;&#x62C9;&#x56DE;&#x8DEF;&#x548C;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x5F88;&#x5DE7;&#x3002;&#x5982;&#x679C;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x8981;&#x7ECF;&#x8FC7;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x672C;&#x8D28;&#x662F;&#x4ECE;&#x4E00;&#x6761;&#x8FB9;&#x5230;&#x8FBE;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x6761;&#x8FB9;&#x51FA;&#x53BB;&#x3002;&#x6B27;&#x62C9;&#x56DE;&#x8DEF;&#x5C31;&#x662F;&#x8981;&#x6C42;&#x8DEF;&#x5F84;&#x8981;&#x7ECF;&#x8FC7;&#x6240;&#x6709;&#x7684;&#x70B9;&#xFF0C;&#x8D77;&#x70B9;&#x548C;&#x7EC8;&#x70B9;&#x8FD8;&#x90FD;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x3002;&#x90A3;&#x4E48;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x8981;&#x6C42;&#x6240;&#x6709;&#x9876;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x8FB9;&#x662F;2&#x4E2A;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8DEF;&#x5F84;&#x8FD8;&#x53EF;&#x4EE5;&#x7ECF;&#x8FC7;&#x9876;&#x70B9;&#x591A;&#x6B21;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x8981;&#x6C42;&#x6240;&#x6709;&#x9876;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x8FB9;&#x662F;&#x5076;&#x6570;&#x4E2A;&#x3002;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#x7684;&#x8981;&#x6C42;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x6240;&#x6709;&#x9876;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x8FB9;&#x662F;&#x5076;&#x6570;&#x4E2A;&#xFF0C;&#x9664;&#x4E86;&#x8D77;&#x70B9;&#x548C;&#x7EC8;&#x70B9;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x53EF;&#x4EE5;&#x662F;&#x5947;&#x6570;&#x4E2A;&#x3002;</p><p>&#x5148;&#x5224;&#x65AD;&#x56FE;&#x662F;&#x5426;&#x662F;&#x8FDE;&#x901A;&#x56FE;&#x3002;&#x8FD4;&#x56DE;0&#x4EE3;&#x8868;&#x6CA1;&#x6709;&#x6B27;&#x62C9;&#x56DE;&#x8DEF;&#x6216;&#x8005;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD4;&#x56DE;1&#x4EE3;&#x8868;&#x6709;&#x6B27;&#x62C9;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD4;&#x56DE;2&#x4EE3;&#x8868;&#x6709;&#x6B27;&#x62C9;&#x56DE;&#x8DEF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;EULERIAN-PATH-AND-CIRCUIT(g)  if isConnected(g) == false    return 0  let odd = 0  for v equal to every vertex in g    if v has not even edge       odd = odd + 1  end  if odd &gt; 2    returon 0  if odd == 1    return 1  if odd == 0    return 2</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><h2 id="&#x62D3;&#x6251;&#x6392;&#x5E8F;-Topological-Sorting"><a href="#&#x62D3;&#x6251;&#x6392;&#x5E8F;-Topological-Sorting" class="headerlink" title="&#x62D3;&#x6251;&#x6392;&#x5E8F;(Topological-Sorting)"></a>&#x62D3;&#x6251;&#x6392;&#x5E8F;(Topological-Sorting)</h2><p>&#x5C06;&#x4E00;&#x5F20;&#x6709;&#x5411;&#x65E0;&#x73AF;&#x56FE;&#x7684;&#x9876;&#x70B9;&#x6392;&#x5E8F;&#xFF0C;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x662F;&#x6240;&#x6709;&#x8FB9;&#x7684;&#x5165;&#x5EA6;&#x9876;&#x70B9;&#x8981;&#x5728;&#x51FA;&#x5EA6;&#x9876;&#x70B9;&#x4E4B;&#x524D;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x65E0;&#x5411;&#x548C;&#x6709;&#x73AF;&#x56FE;&#x90FD;&#x4E0D;&#x5B58;&#x5728;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;&#x5E76;&#x4E14;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x591A;&#x79CD;&#x89E3;&#x3002;</p><p>&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x6709;&#x4E24;&#x79CD;&#x89E3;&#x6CD5;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x4ECE;&#x641C;&#x7D22;&#x89D2;&#x5EA6;&#x3002;</p><p>&#x5982;&#x679C;&#x6211;&#x80FD;&#x4FDD;&#x969C;&#x5148;&#x9012;&#x5F52;&#x904D;&#x5386;&#x4E34;&#x63A5;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x518D;&#x904D;&#x5386;&#x672C;&#x9876;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x904D;&#x5386;&#x7684;&#x987A;&#x5E8F;&#x7684;&#x9006;&#x5E8F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x3002;&#x90A3;&#x4E48;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;DFS&#x6539;&#x826F;&#x6C42;&#x89E3;&#x51FA;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;TOPOLOGICAL-SORTING-DFS(g)  let visited be new Array  let result be new Array  let stack be new Stack  for v equal to every vertex in g    if visited[v] == false      DFS-IMPROVE(v,visited,stack)  end  while stack.empty() == false      result.append(stack.top())      stack.pop()  end  return result</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><p>&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x3002;</p><p>&#x76F4;&#x89C9;&#x4E0A;&#xFF0C;&#x65E2;&#x7136;&#x8981;&#x6240;&#x6709;&#x8FB9;&#x7684;&#x51FA;&#x5EA6;&#x9876;&#x70B9;&#x5728;&#x5165;&#x5EA6;&#x9876;&#x70B9;&#x4E4B;&#x524D;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x5165;&#x5EA6;&#x548C;&#x51FA;&#x5EA6;&#x89D2;&#x5EA6;&#x6765;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;&#x53EF;&#x4EE5;&#x8BA9;&#x5165;&#x5EA6;&#x6700;&#x5C0F;&#x7684;&#x6392;&#x5E8F;&#x5728;&#x524D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8BA9;&#x51FA;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x6392;&#x5E8F;&#x5728;&#x540E;&#xFF0C;&#x6392;&#x5E8F;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x8FB9;&#x90FD;&#x4E0D;&#x4F1A;&#x518D;&#x5F71;&#x54CD;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x6389;&#x3002;&#x53BB;&#x6389;&#x540E;&#x518D;&#x91CD;&#x65B0;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x76F4;&#x5230;&#x52A0;&#x5165;&#x6240;&#x6709;&#x9876;&#x70B9;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8FD8;&#x6709;&#x4E2A;&#x9690;&#x542B;&#x6761;&#x4EF6;&#xFF0C;&#x6311;&#x9009;&#x51FA;&#x3001;&#x5165;&#x5EA6;&#x6700;&#x5C0F;&#x7684;&#x9876;&#x70B9;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x6311;&#x9009;&#x51FA;&#x3001;&#x5165;&#x5EA6;&#x4E3A;0&#x7684;&#x9876;&#x70B9;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x56FE;&#x5FC5;&#x987B;&#x662F;&#x65E0;&#x73AF;&#x56FE;&#xFF0C;&#x6240;&#x4EE5;&#x80AF;&#x5B9A;&#x5B58;&#x5728;&#x51FA;&#x3001;&#x5165;&#x5EA6;&#x4E3A;0&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x51FA;&#x3001;&#x5165;&#x5EA6;&#x6700;&#x5C0F;&#x7684;&#x9876;&#x70B9;&#x5C31;&#x662F;&#x51FA;&#x3001;&#x5165;&#x5EA6;&#x4E3A;0&#x7684;&#x9876;&#x70B9;&#x3002;</p><p>&#x76F4;&#x89C9;&#x4E0A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x884C;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x7EC6;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x6309;&#x51FA;&#x5EA6;&#x6700;&#x5927;&#x6392;&#x5E8F;&#x548C;&#x6309;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x6392;&#x5E8F;&#x662F;&#x5426;&#x7B49;&#x4EF7;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E0D;&#x7B49;&#x4EF7;&#x7684;&#xFF0C;&#x6309;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x6392;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x591A;&#x4E2A;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x8FD9;&#x591A;&#x4E2A;&#x9876;&#x70B9;&#x6392;&#x5E8F;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4EFB;&#x610F;&#x6392;&#x5E8F;&#x3002;&#x800C;&#x6309;&#x51FA;&#x5EA6;&#x6700;&#x5927;&#x6392;&#x5E8F;&#xFF0C;&#x51FA;&#x73B0;&#x4E86;&#x591A;&#x4E2A;&#x5165;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x8FD9;&#x591A;&#x4E2A;&#x9876;&#x70B9;&#x6392;&#x5E8F;&#x662F;&#x6709;&#x5173;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x4EFB;&#x610F;&#x6392;&#x5E8F;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x53EA;&#x80FD;&#x6309;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x6392;&#x5E8F;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E2A;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x3002;&#x4E0B;&#x9762;&#x4EE5;&#x6311;&#x9009;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x7684;&#x8FB9;&#x4F5C;&#x4E3A;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x540C;&#x6837;&#x5730;&#xFF0C;&#x8FD8;&#x662F;&#x5148;&#x8BC1;&#x660E;&#x8FD9;&#x4E2A;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;</p><blockquote><p>&#x547D;&#x9898;&#xFF1A;&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#x7684;&#x9876;&#x70B9;v&#x6392;&#x5E8F;&#x5728;&#x524D;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF1A;S&#x4E3A;&#x56FE;&#x7684;&#x4E00;&#x4E2A;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;l&#x4E3A;&#x6B64;&#x6392;&#x5E8F;&#x7684;&#x9996;&#x4E2A;&#x9876;&#x70B9;&#x3002;</p><p>&#x8BC1;&#x660E;&#xFF1A;&#x5982;&#x679C;l=v&#xFF0C;&#x5219;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;&#x5982;&#x679C;l&#x4E0D;&#x7B49;&#x4E8E;v&#xFF0C;&#x5C06;l&#x9876;&#x70B9;&#x4ECE;S&#x4E2D;&#x53BB;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x52A0;&#x5165;&#x9876;&#x70B9;v&#x5F97;&#x5230;&#x65B0;&#x7684;&#x6392;&#x5E8F;S&#x2018;&#x3002;&#x56E0;&#x4E3A;S&#x53BB;&#x9664;l&#x4EE5;&#x540E;l&#x4EE5;&#x540E;&#x7684;&#x6392;&#x5E8F;&#x6CA1;&#x6709;&#x53D8;&#xFF0C;&#x4ECD;&#x4E3A;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;v&#x5165;&#x5EA6;&#x4E3A;&#x96F6;&#xFF0C;v&#x524D;&#x9762;&#x53EF;&#x4EE5;&#x6CA1;&#x6709;&#x9876;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;S&#x2019;&#x4E5F;&#x4E3A;&#x56FE;&#x7684;&#x4E00;&#x4E2A;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;TOPOLOGICAL-SORTING-GREEDY(g)  let inDegree be every verties inDegree Array  let stack be new Stack  let result be new Array  for v equal to every vertex in g    if inDegree[v] == 0      stack.push(v)  end  while stack.empty() == false    vertex v = stack.top()    stack.pop()    result.append(v)    for i equal to every vertex adjacent to v       inDegree[i] = inDegree[i] - 1      if inDegree[i] == 0        stack.push(i)    end  end  return result.reverse()</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><h2 id="&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;-Strongly-Connected-Components"><a href="#&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;-Strongly-Connected-Components" class="headerlink" title="&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;(Strongly-Connected-Components)"></a>&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;(Strongly-Connected-Components)</h2><p>&#x56FE;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x4E0E;&#x53E6;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x4E92;&#x76F8;&#x90FD;&#x6709;&#x8DEF;&#x5F84;&#x53EF;&#x4EE5;&#x62B5;&#x8FBE;&#xFF0C;&#x5C31;&#x8BF4;&#x8FD9;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x5F3A;&#x8FDE;&#x901A;&#x3002;&#x56FE;&#x4E2D;&#x6709;&#x591A;&#x4E2A;&#x9876;&#x70B9;&#x4E24;&#x4E24;&#x4E4B;&#x95F4;&#x90FD;&#x5F3A;&#x8FDE;&#x901A;&#xFF0C;&#x5219;&#x8FD9;&#x591A;&#x4E2A;&#x9876;&#x70B9;&#x6784;&#x6210;&#x56FE;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p>&#x6734;&#x7D20;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#xFF0C;&#x5047;&#x5982;&#x4ECE;&#x4E00;&#x4E2A;&#x9876;&#x70B9;A&#x53EF;&#x4EE5;&#x641C;&#x7D22;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x9876;&#x70B9;B&#xFF0C;&#x5982;&#x679C;&#x4ECE;B&#x9876;&#x70B9;&#x518D;&#x80FD;&#x641C;&#x7D22;&#x56DE;A&#x9876;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;A&#x3001;B&#x5C31;&#x5728;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x6837;&#x6BCF;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x8981;&#x8FDB;&#x884C;&#x4E24;&#x6B21;DFS&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x80AF;&#x5B9A;&#x4F1A;&#x5F88;&#x9AD8;&#x3002;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x5F15;&#x5165;&#x8F6C;&#x7F6E;&#x56FE;(&#x5C06;&#x6709;&#x5411;&#x8FB9;&#x7684;&#x65B9;&#x5411;&#x7FFB;&#x8F6C;)&#x7684;&#x6027;&#x8D28;&#x3002;&#x8FD9;&#x6837;&#x95EE;&#x9898;&#x5C31;&#x8F6C;&#x6362;&#x6210;&#x4E86;&#xFF0C;&#x4ECE;A&#x9876;&#x70B9;&#x641C;&#x7D22;&#x5230;B&#x9876;&#x70B9;&#xFF0C;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x518D;A&#x9876;&#x70B9;&#x8FD8;&#x80FD;&#x641C;&#x7D22;&#x5230;B&#x9876;&#x70B9;&#xFF0C;A&#x3001;B&#x9876;&#x70B9;&#x5C31;&#x5728;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x3002;&#x7528;&#x7B97;&#x6CD5;&#x8868;&#x8FF0;&#x51FA;&#x6765;&#x5C31;&#x662F;&#x5148;&#x4ECE;A&#x9876;&#x70B9;DFS&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#xFF0C;&#x518D;&#x4ECE;A&#x9876;&#x70B9;DFS&#xFF0C;&#x4E24;&#x6B21;DFS&#x90FD;&#x80FD;&#x641C;&#x7D22;&#x5230;B&#x9876;&#x70B9;&#x7684;&#x8BDD;&#xFF0C;B&#x9876;&#x70B9;&#x5C31;&#x4E0E;A&#x9876;&#x70B9;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x3002;&#x7136;&#x800C;&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x53EA;&#x80FD;&#x60F3;&#x5230;&#x8FD9;&#x91CC;&#x4E86;&#x3002;</p><p>&#x6709;&#x591A;&#x4E2A;&#x7B97;&#x6CD5;&#x88AB;&#x7814;&#x7A76;&#x51FA;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E0B;&#x9762;&#x5148;&#x4ECB;&#x7ECD;Kosaraju&#x7B97;&#x6CD5;&#x3002;</p><ul><li>Kosaraju</li></ul><p>Kosaraju&#x7B97;&#x6CD5;&#x4F7F;&#x7528;&#x4E86;DFS&#x6539;&#x826F;&#x7684;&#x6027;&#x8D28;&#x53BB;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x60F3;&#x6CD5;&#x5F88;&#x6709;&#x8DA3;&#x3002;Kosaraju&#x7B97;&#x6CD5;&#x73B0;&#x5C06;&#x56FE;&#x8FDB;&#x884C;DFS&#x6539;&#x826F;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#xFF0C;&#x518D;&#x8FDB;&#x884C;DFS&#x3002;&#x7B2C;&#x4E8C;&#x6B21;DFS&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x80FD;&#x591F;&#x641C;&#x7D22;&#x5230;&#x7684;&#x70B9;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x7B97;&#x6CD5;&#x6B63;&#x786E;&#x6027;&#x548C;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#x3002;</p><p>&#x901A;&#x8FC7;<strong><em>DFS&#x6539;&#x826F;&#x6027;&#x8D28;</em></strong>&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x5B9A;&#x7406;&#xFF0C;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x5982;&#x679C;&#x6709;&#x5230;&#x8FBE;&#x53E6;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x2019;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;C&#x2019;&#x6BD4;C&#x5148;&#x88AB;&#x641C;&#x7D22;&#x5B8C;&#xFF0C;&#x8FD9;&#x4E2A;&#x5B9A;&#x7406;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5982;&#x679C;C&#x4E2D;&#x6709;&#x8DEF;&#x5F84;&#x5230;C&#x2019;&#xFF0C;&#x90A3;&#x4E48;&#x6839;&#x636E;<strong><em>DFS&#x6539;&#x826F;&#x6027;&#x8D28;</em></strong>&#x4E00;&#x5B9A;&#x4F1A;&#x5148;&#x641C;&#x7D22;&#x5230;C&#xFF0C;&#x518D;&#x641C;&#x7D22;&#x5B8C;C&#x2019;&#xFF0C;&#x518D;&#x641C;&#x7D22;&#x5B8C;C&#x3002;&#x5C06;&#x8FD9;&#x4E2A;&#x5B9A;&#x7406;&#x505A;<strong><em>&#x5B9A;&#x7406;1</em></strong>&#x3002;</p><p><strong><em>&#x5B9A;&#x7406;1&#xFF1A;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x5982;&#x679C;&#x6709;&#x5230;&#x8FBE;&#x53E6;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x2019;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;C&#x2019;&#x6BD4;C&#x5148;&#x88AB;&#x641C;&#x7D22;&#x5B8C;&#x3002;</em></strong></p><p><strong><em>&#x5B9A;&#x7406;1</em></strong>&#x8FD8;&#x53EF;&#x4EE5;&#x518D;&#x8FDB;&#x884C;&#x63A8;&#x8BBA;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x6709;&#x5230;&#x8FBE;&#x53E6;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x2019;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#x540E;&#xFF0C;C&#x6BD4;C&#x2019;&#x5148;&#x88AB;&#x641C;&#x7D22;&#x5B8C;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x4E5F;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#x540E;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;C&#x5230;C&#x2019;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5B58;&#x5728;C&#x2019;&#x5230;C&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x4ECD;&#x662F;&#x5148;&#x641C;&#x7D22;C&#x518D;&#x641C;&#x7D22;C&#x2018;&#xFF0C;&#x6240;&#x4EE5;C&#x6BD4;C&#x2018;&#x5148;&#x88AB;&#x641C;&#x7D22;&#x5B8C;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x4F5C;&#x4E3A;<strong><em>&#x63A8;&#x8BBA;1</em></strong>&#x3002;</p><p><strong><em>&#x63A8;&#x8BBA;1&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x6709;&#x5230;&#x8FBE;&#x53E6;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;C&#x2019;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x5C06;&#x56FE;&#x8F6C;&#x7F6E;&#x540E;&#xFF0C;C&#x6BD4;C&#x2019;&#x5148;&#x88AB;&#x641C;&#x7D22;&#x5B8C;&#x3002;</em></strong><br><img src="http://o79rgqboc.bkt.clouddn.com/blog_Kosaraju.JPG" alt="blog_Kosaraju"></p><p>&#x4EE5;&#x4E0B;&#x4E3A;&#x7528;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x5BF9;&#x7B97;&#x6CD5;&#x6B63;&#x786E;&#x6027;&#x8FDB;&#x884C;&#x8BC1;&#x660E;&#x3002;</p><blockquote><p>&#x547D;&#x9898;&#xFF1A;&#x7B2C;&#x4E8C;&#x6B21;DFS&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x80FD;&#x591F;&#x641C;&#x7D22;&#x5230;&#x7684;&#x70B9;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF1A;n&#x4EE3;&#x8868;&#x56FE;&#x4E2D;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p>&#x8BC1;&#x660E;&#xFF1A;&#x5982;&#x679C;n=1&#xFF0C;&#x5219;&#x7B2C;&#x4E8C;&#x6B21;DFS&#x5C31;&#x662F;&#x641C;&#x7D22;&#x4E00;&#x904D;&#x6240;&#x6709;&#x9876;&#x70B9;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;&#x73B0;&#x5728;&#x5047;&#x8BBE;n=k&#x65F6;&#xFF0C;&#x547D;&#x9898;&#x6210;&#x7ACB;&#x3002;&#x73B0;&#x8BC1;&#x660E;n=k+1&#x65F6;&#xFF0C;&#x662F;&#x5426;&#x6210;&#x7ACB;&#x3002;&#x5047;&#x8BBE;&#x641C;&#x7D22;&#x5230;&#x7B2C;k+1&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x4E3A;u&#xFF0C;u&#x80AF;&#x5B9A;&#x80FD;&#x641C;&#x7D22;&#x5230;&#x6240;&#x6709;k+1&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x9876;&#x70B9;&#x3002;&#x5E76;&#x4E14;&#x6839;&#x636E;<strong><em>&#x63A8;&#x8BBA;1</em></strong>&#xFF0C;&#x6B64;&#x65F6;&#x88AB;&#x8F6C;&#x7F6E;&#x540E;&#x7684;&#x56FE;&#xFF0C;&#x6240;&#x6709;&#x4ECE;&#x7B2C;k+1&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x80FD;&#x5230;&#x8FBE;&#x7684;&#x5176;&#x4ED6;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x90FD;&#x5DF2;&#x7ECF;&#x88AB;&#x641C;&#x7D22;&#x8FC7;&#x4E86;&#x3002;&#x6240;&#x4EE5;u&#x53EA;&#x80FD;&#x641C;&#x7D22;&#x5230;&#x6240;&#x6709;&#x7B2C;k+1&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x5373;&#x7B2C;&#x4E8C;&#x6B21;DFS&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x53EA;&#x80FD;&#x591F;&#x641C;&#x7D22;&#x5230;&#x5305;&#x542B;&#x6B64;&#x9876;&#x70B9;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;KOSARAJU-STRONGLY-CONNECTED-COMPONENTS(g)  let visited be new Array  let stack be new Stack  for v equal to every vertex in g    if visited[v] == false      DFS-IMPROVE(v,visited,stack)  end  let gt = transpose of g  for v equal to every vertex in g    visited[v] = false  end  while stack.empty() == false    vertex v = stack.top()    stack.pop()    if visited[v] == false      DFS(v,visited)      print &apos;\n Found a Strongly Connected Components \n&apos;  endDFS(v,visited)  visited[v] = true  print v  for i equal to every vertex adjacent to v    if visited[i] == false      DFS(i,visited,stack)  end</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><p>Kosaraju&#x7B97;&#x6CD5;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E24;&#x6B21;DFS&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4E0D;&#x53EF;&#x4EE5;&#x53EA;&#x8FDB;&#x884C;&#x4E00;&#x6B21;DFS&#xFF0C;&#x8FB9;&#x904D;&#x5386;&#x8FB9;&#x627E;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF1F;Tarjan&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x7B97;&#x6CD5;&#x3002;</p><ul><li>Tarjan</li></ul><p>&#x540C;&#x6837;&#xFF0C;&#x8FD8;&#x662F;&#x8981;&#x57FA;&#x4E8E;DFS&#x641C;&#x7D22;&#x6027;&#x8D28;&#x6765;&#x601D;&#x8003;&#x95EE;&#x9898;&#x3002;DFS&#x521B;&#x5EFA;&#x51FA;&#x7684;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x6811;&#x4F1A;&#x5148;&#x88AB;&#x8BBF;&#x95EE;&#x6839;&#x8282;&#x70B9;&#x518D;&#x88AB;&#x8BBF;&#x95EE;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x3002;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF1F;&#x53EA;&#x6709;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x6709;&#x8FDE;&#x901A;&#x7956;&#x5148;&#x8282;&#x70B9;&#x7684;&#x8FB9;&#x7684;&#x65F6;&#x5019;&#x3002;&#x5982;&#x679C;&#x4ECE;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5176;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x90FD;&#x53EA;&#x6709;&#x6307;&#x5411;&#x81EA;&#x5DF1;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x7684;&#x8FB9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x662F;&#x660E;&#x663E;&#x6CA1;&#x6709;&#x6784;&#x6210;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x51FA;&#x73B0;&#x4E86;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x6307;&#x5411;&#x5176;&#x7956;&#x5148;&#x8282;&#x70B9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ECE;&#x88AB;&#x6307;&#x5411;&#x7684;&#x7956;&#x5148;&#x8282;&#x70B9;&#x4E00;&#x76F4;&#x641C;&#x7D22;&#x5230;&#x6307;&#x5411;&#x7684;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x6240;&#x7ECF;&#x8FC7;&#x6240;&#x6709;&#x9876;&#x70B9;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x591A;&#x4E2A;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x90FD;&#x6307;&#x5411;&#x4E86;&#x7956;&#x5148;&#x8282;&#x70B9;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x6700;&#x65E9;&#x88AB;&#x6307;&#x5411;&#x3001;&#x8BBF;&#x95EE;&#x7684;&#x7956;&#x5148;&#x8282;&#x70B9;&#x5230;&#x6700;&#x665A;&#x6307;&#x5411;&#x3001;&#x8BBF;&#x95EE;&#x7684;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x6784;&#x6210;&#x4E86;&#x201C;&#x6700;&#x5927;&#x201C;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x8FD9;&#x624D;&#x662F;&#x60F3;&#x8981;&#x627E;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x7956;&#x5148;&#x8282;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#xFF0C;&#x5C31;&#x7B97;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x627E;&#x5230;&#x591A;&#x4E2A;&#x4E92;&#x76F8;&#x5D4C;&#x5957;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8981;&#x8BB0;&#x5F55;&#x8BBF;&#x95EE;&#x987A;&#x5E8F;&#x5C31;&#x8981;&#x4E3A;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x88AB;&#x8BBF;&#x95EE;&#x987A;&#x5E8F;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x8BA9;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x9876;&#x70B9;&#x7F16;&#x53F7;&#x4E00;&#x81F4;&#x3002;&#x4E0A;&#x9762;&#x8BA8;&#x8BBA;&#x7684;&#x662F;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x600E;&#x4E48;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#x6784;&#x6210;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x600E;&#x4E48;&#x5904;&#x7406;&#xFF1F;&#x5728;&#x641C;&#x7D22;&#x8282;&#x70B9;&#x4E4B;&#x524D;&#xFF0C;&#x4E3A;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x4E0A;&#x88AB;&#x8BBF;&#x95EE;&#x7684;&#x987A;&#x5E8F;&#x7F16;&#x53F7;&#xFF0C;&#x8FD9;&#x6837;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x641C;&#x7D22;&#x5230;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#x6784;&#x6210;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_tarjan_strong_connected_components.JPG" alt="blog_tarjan"></p><p>&#x7B97;&#x6CD5;&#x8868;&#x8FF0;&#x4E3A;&#xFF0C;&#x4ECE;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x641C;&#x7D22;&#xFF0C;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x81EA;&#x5DF1;&#x4E3A;&#x4E00;&#x4E2A;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x53EA;&#x8981;&#x8282;&#x70B9;&#x6709;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#xFF0C;&#x5C31;&#x8981;&#x7B49;&#x5F85;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x90FD;&#x641C;&#x7D22;&#x5B8C;&#xFF0C;&#x518D;&#x66F4;&#x65B0;&#x81EA;&#x5DF1;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4FE1;&#x606F;&#x3002;&#x53EA;&#x8981;&#x8282;&#x70B9;&#x6709;&#x6307;&#x5411;&#x7956;&#x5148;&#x8282;&#x70B9;&#xFF0C;&#x4E5F;&#x8981;&#x66F4;&#x65B0;&#x81EA;&#x5DF1;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x5224;&#x65AD;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x6784;&#x6210;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x201D;&#x5927;&#x201C;&#x8FD8;&#x662F;&#x81EA;&#x5DF1;&#x6784;&#x6210;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x201D;&#x5927;&#x201C;&#xFF0C;&#x81EA;&#x5DF1;&#x5C5E;&#x4E8E;&#x6700;&#x201D;&#x5927;&#x201C;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x7B97;&#x6CD5;&#x627E;&#x51FA;&#x4E86;&#x6240;&#x6709;&#x9876;&#x70B9;&#x7684;&#x6240;&#x5C5E;&#x7684;&#x6700;&#x201C;&#x5927;&#x201D;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p>&#x6570;&#x7EC4;disc&#x8868;&#x793A;&#x9876;&#x70B9;&#x88AB;&#x8BBF;&#x95EE;&#x987A;&#x5E8F;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x6570;&#x7EC4;low&#x8868;&#x793A;&#x9876;&#x70B9;&#x6240;&#x5728;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7F16;&#x53F7;&#x3002;&#x6700;&#x540E;&#x5F53;&#x9876;&#x70B9;&#x5728;disc&#x548C;low&#x4E2D;&#x7F16;&#x53F7;&#x4E00;&#x81F4;&#x65F6;&#xFF0C;&#x4EE3;&#x8868;&#x9876;&#x70B9;&#x662F;&#x6240;&#x5728;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x88AB;&#x641C;&#x7D22;&#x5230;&#x7684;&#x9876;&#x70B9;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x8F93;&#x51FA;&#x6240;&#x5728;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x6240;&#x5305;&#x62EC;&#x7684;&#x9876;&#x70B9;&#x3002;</p><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;TARJAN-STRONGLY-CONNECTED-COMPONENTS(g)  let disc be new Array  let low be new Array  let stack be new Stack  let isInStack be new Array  for i from 1 to the number of vertex in g    disc [i] = -1    low [i] = -1  end  for u from 1 to the number of vertex in g     if disc[i] != -1      TARJAN-STRONGLY-CONNECTED-COMPONENTS-UTIL(u,disc,low,stack,isInStack)  endTARJAN-STRONGLY-CONNECTED-COMPONENTS-UTIL(u,disc,low,stack,isInStack)  let time be static  time = time + 1  disc[u] = low[u] = time  stack.push(u)  isInStack[u] = true  for v equal to every vertex adjacent to u    if disc[v] == -1      TARJAN-STRONGLY-CONNECTED-COMPONENTS-UTIL(v,disc,low,stack,isInStack)      low[u] = min(low[u],low[v])    else if isInStack[v] == true      low[u] = min(low[u],disc[v])  end  let w = 0    if low[u] == disc[u]      while stack.top() != u        w = stack.top()        isInStack[w] = false        stack.pop()        print w      end      w = stack.top()      isInStack[w] = false      stack.pop()      print w      print &apos;\n Found a Strongly Connected Components \n&apos;</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><h2 id="&#x56FE;&#x7684;&#x5272;&#x70B9;-Articulation-Points-&#x3001;&#x6865;-Bridge-&#x3001;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;-Biconnected-Components"><a href="#&#x56FE;&#x7684;&#x5272;&#x70B9;-Articulation-Points-&#x3001;&#x6865;-Bridge-&#x3001;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;-Biconnected-Components" class="headerlink" title="&#x56FE;&#x7684;&#x5272;&#x70B9;(Articulation Points)&#x3001;&#x6865;(Bridge)&#x3001;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;(Biconnected Components)"></a>&#x56FE;&#x7684;&#x5272;&#x70B9;(Articulation Points)&#x3001;&#x6865;(Bridge)&#x3001;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;(Biconnected Components)</h2><ul><li>&#x56FE;&#x7684;&#x5272;&#x70B9;(Articulation-Points)</li></ul><p>&#x56FE;&#x7684;&#x5272;&#x70B9;&#x4E5F;&#x53EB;&#x56FE;&#x7684;&#x5173;&#x8282;&#x70B9;&#xFF0C;&#x5B9A;&#x4E49;&#x4E3A;&#x65E0;&#x5411;&#x56FE;&#x4E2D;&#x5206;&#x5272;&#x4E24;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x70B9;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x53BB;&#x6389;&#x8FD9;&#x4E2A;&#x70B9;&#xFF0C;&#x56FE;&#x4E2D;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x6570;&#x589E;&#x52A0;&#x4E86;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5982;&#x679C;&#x6C42;&#x51FA;&#x4E86;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x540C;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E2D;&#x95F4;&#x7684;&#x9876;&#x70B9;&#x5C31;&#x662F;&#x5272;&#x70B9;&#x3002;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x67D0;&#x4E2A;&#x9876;&#x70B9;&#x4E0D;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x5272;&#x70B9;&#xFF1F;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x9876;&#x70B9;&#x6709;&#x8FDE;&#x63A5;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x7956;&#x5148;&#x9876;&#x70B9;&#x7684;&#x8FB9;&#xFF0C;&#x90A3;&#x4E48;&#x53BB;&#x6389;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x9876;&#x70B9;&#x548C;&#x7956;&#x5148;&#x9876;&#x70B9;&#x4ECD;&#x7136;&#x8FDE;&#x901A;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5BFB;&#x627E;&#x5272;&#x70B9;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x5BFB;&#x627E;&#x5B50;&#x5B59;&#x9876;&#x70B9;&#x6CA1;&#x6709;&#x8FDE;&#x63A5;&#x7956;&#x5148;&#x9876;&#x70B9;&#x7684;&#x9876;&#x70B9;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x6C42;&#x89E3;&#x8FC7;&#x7A0B;&#x7C7B;&#x4F3C;&#x4E8E;Tarjan&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6C42;&#x89E3;&#x8FC7;&#x7A0B;&#x3002;</p><p>&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6709;&#x4E2A;&#x4F8B;&#x5916;&#x5C31;&#x662F;&#x6839;&#x9876;&#x70B9;&#xFF0C;&#x5BF9;&#x4E00;&#x822C;&#x9876;&#x70B9;&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#x6839;&#x9876;&#x70B9;&#x884C;&#x5F97;&#x901A;&#x5417;&#xFF1F;&#x6839;&#x9876;&#x70B9;&#x80AF;&#x5B9A;&#x6CA1;&#x6709;&#x5B50;&#x5B59;&#x9876;&#x70B9;&#x6307;&#x5411;&#x7956;&#x5148;&#x9876;&#x70B9;&#xFF0C;&#x4F46;&#x662F;&#x6839;&#x9876;&#x70B9;&#x53EF;&#x4EE5;&#x662F;&#x5272;&#x70B9;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6839;&#x9876;&#x70B9;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x3002;&#x6839;&#x9876;&#x70B9;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x662F;&#x5272;&#x70B9;&#xFF1F;&#x5F53;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#xFF0C;&#x4E14;&#x4E4B;&#x95F4;&#x65E0;&#x6CD5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#x7684;&#x65F6;&#x5019;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5B58;&#x4E0D;&#x5B58;&#x5728;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#xFF0C;&#x4E14;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#xFF1F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5982;&#x679C;&#x4E92;&#x76F8;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x5230;&#x8FBE;&#xFF0C;&#x90A3;&#x5728;&#x6839;&#x9876;&#x70B9;&#x641C;&#x7D22;&#x7B2C;&#x4E00;&#x9897;&#x5B50;&#x6811;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x641C;&#x7D22;&#x5230;&#x53EF;&#x5230;&#x8FBE;&#x7684;&#x5B50;&#x6811;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x5B58;&#x5728;&#x591A;&#x9897;&#x5B50;&#x6811;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x591A;&#x9897;&#x5B50;&#x6811;&#x4E4B;&#x95F4;&#x4E00;&#x5B9A;&#x65E0;&#x6CD5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#x3002;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#xFF0C;&#x4E14;&#x4E4B;&#x95F4;&#x65E0;&#x6CD5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x53EA;&#x8981;&#x6839;&#x9876;&#x70B9;&#x6709;&#x591A;&#x9897;&#x5B50;&#x6811;&#xFF0C;&#x90A3;&#x4E48;&#x6839;&#x9876;&#x70B9;&#x5C31;&#x662F;&#x5272;&#x70B9;&#x3002;</p><p>&#x540C;&#x6837;&#x5730;&#xFF0C;&#x6570;&#x7EC4;disc&#x8868;&#x793A;&#x9876;&#x70B9;&#x88AB;&#x8BBF;&#x95EE;&#x987A;&#x5E8F;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x6570;&#x7EC4;low&#x8868;&#x793A;&#x9876;&#x70B9;&#x6240;&#x5728;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7F16;&#x53F7;&#x3002;&#x6570;&#x7EC4;parent&#x627E;&#x51FA;&#x6839;&#x9876;&#x70B9;&#x3002;</p><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;ARTICULATION-POINTS(g)  let disc be new Array  let low be new Array  let result be new Array  let parent be new Array  let visited be new Array  for i from 1 to the number of vertex in g    result [i] = false    visited [i] = false    parent [i] = -1  end  for u from 1 to the number of vertex in g     if visited[i] == false      ARTICULATION-POINTS-UTIL(u,disc,low,result,parent,visited)  end  for i from 1 to the number if vertex in g    if result[i] == true      print &apos;\n Found a Articulation Points i \n&apos;  endARTICULATION-POINTS-UTIL(u,disc,low,result,parent,visited)  let time be static  time = time + 1  let children = 0  disc[u] = low[u] = time  visited[u] = true  for v equal to every vertex adjacent to u    if visited[v] == false      children = children + 1      parent[v] = u      ARTICULATION-POINTS-UTIL(u,disc,low,result,parent,visited)      low[u] = min(low[u],low[v])      if parnet[u] == -1 and children &gt; 1        result[u] = true      if parent[u] != -1 and low[v] &gt;= disc[u]        result[u] = true    else if v != parent[u]      low[u] = min(low[u],disc[v])  end</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><ul><li>&#x6865;(Bridge)</li></ul><p>&#x6865;&#x5B9A;&#x4E49;&#x4E3A;&#x4E00;&#x6761;&#x8FB9;&#xFF0C;&#x4E14;&#x53BB;&#x6389;&#x8FD9;&#x4E2A;&#x8FB9;&#xFF0C;&#x56FE;&#x4E2D;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x6570;&#x589E;&#x52A0;&#x4E86;&#x3002;&#x7C7B;&#x4F3C;&#x4E8E;&#x5BFB;&#x627E;&#x5272;&#x70B9;&#xFF0C;&#x5BFB;&#x627E;&#x6865;&#x5C31;&#x662F;&#x5BFB;&#x627E;&#x8FD9;&#x6837;&#x4E00;&#x6761;&#xFF0C;&#x4E00;&#x7AEF;&#x7684;&#x9876;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x9876;&#x70B9;&#x6CA1;&#x6709;&#x8FDE;&#x63A5;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x548C;&#x5176;&#x7956;&#x5148;&#x9876;&#x70B9;&#x7684;&#x8FB9;&#x3002;&#x6C42;&#x89E3;&#x8FC7;&#x7A0B;&#x548C;&#x6C42;&#x5272;&#x70B9;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x3002;</p><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;BRIDGE(g)  let disc be new Array  let low be new Array  let parent be new Array  let visited be new Array  for i from 1 to the number of vertex in g    visited [i] = false    parent [i] = -1  end  for u from 1 to the number of vertex in g     if visited[i] == false      BRIDGE-UTIL(u,disc,low,parent,visited)  endBRIDGE-UTIL(u,disc,low,parent,visited)  let time be static  time = time + 1  disc[u] = low[u] = time  for v equal to every vertex adjacent to u    if visited[v] == false      parent[v] = u      BRIDGE-UTIL(u,disc,low,parent,visited)      low[u] = min(low[u],low[v])      if low[v] &gt; disc[u]        print &apos;\n Found a Bridge u-&gt;v \n&apos;    else if v != parent[u]      low[u] = min(low[u],disc[v])  end</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><ul><li>&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;(Biconnected-Components)</li></ul><p>&#x53CC;&#x8FDE;&#x901A;&#x56FE;&#x5B9A;&#x4E49;&#x4E3A;&#x6CA1;&#x6709;&#x5272;&#x70B9;&#x7684;&#x56FE;&#x3002;&#x53CC;&#x8FDE;&#x901A;&#x56FE;&#x7684;&#x6781;&#x5927;&#x5B50;&#x56FE;&#x5C31;&#x4E3A;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x5C31;&#x662F;&#x5728;&#x5272;&#x70B9;&#x5206;&#x5272;&#x6210;&#x591A;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x5904;&#xFF0C;&#x5171;&#x4EAB;&#x5272;&#x70B9;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x662F;&#x53BB;&#x6389;&#x5272;&#x70B9;&#x540E;&#x6784;&#x6210;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x52A0;&#x4E0A;&#x5272;&#x70B9;&#x548C;&#x5230;&#x8FBE;&#x5272;&#x70B9;&#x7684;&#x8FB9;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x53EF;&#x5206;&#x4E3A;&#x4E0D;&#x542B;&#x6709;&#x5272;&#x70B9;&#x3001;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#x3001;&#x4E24;&#x4E2A;&#x5272;&#x70B9;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x542B;&#x6709;&#x5272;&#x70B9;&#xFF0C;&#x8BF4;&#x660E;&#x56FE;&#x4E3A;&#x53CC;&#x8FDE;&#x901A;&#x56FE;&#x3002;&#x5BF9;&#x4E8E;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#xFF0C;&#x53EF;&#x80FD;&#x4E3A;&#x521D;&#x59CB;&#x641C;&#x7D22;&#x7684;&#x9876;&#x70B9;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6784;&#x6210;&#x7684;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x53EF;&#x80FD;&#x4E3A;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#x540E;&#x5230;&#x4E0D;&#x518D;&#x9047;&#x5230;&#x5272;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6784;&#x6210;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;&#x5BF9;&#x4E8E;&#x542B;&#x6709;&#x4E24;&#x4E2A;&#x5272;&#x70B9;&#xFF0C;&#x4E24;&#x4E2A;&#x5272;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x53CC;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x3002;</p><p>&#x6C42;&#x89E3;&#x6B64;&#x95EE;&#x9898;&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x6C42;&#x5272;&#x70B9;&#x7684;&#x7B97;&#x6CD5;&#x4E0A;&#x505A;&#x66F4;&#x6539;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x6309;&#x7167;&#x6C42;&#x5272;&#x70B9;&#x7684;&#x7B97;&#x6CD5;&#x6C42;&#x89E3;&#x5272;&#x70B9;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#xFF0C;&#x8F93;&#x51FA;&#x627E;&#x5230;&#x7684;&#x8FB9;&#xFF0C;&#x7136;&#x540E;&#x5220;&#x9664;&#x627E;&#x5230;&#x7684;&#x8FB9;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x518D;&#x53BB;&#x641C;&#x7D22;&#x4E0B;&#x4E00;&#x4E2A;&#x5272;&#x70B9;&#x3002;&#x6BCF;&#x641C;&#x7D22;&#x5B8C;&#x56FE;&#x67D0;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x53EF;&#x8FBE;&#x9876;&#x70B9;&#xFF0C;&#x8F93;&#x51FA;&#x627E;&#x5230;&#x7684;&#x8FB9;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x6DB5;&#x76D6;&#x4E86;&#x6240;&#x6709;&#x7684;&#x60C5;&#x51B5;&#x3002;</p><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;BICONNECTED-COMPONENTS(g)  let disc be new Array  let low be new Array  let stack be new Stack  let parent be new Array  for i from 1 to the number of vertex in g    disc [i] = -1    low [i] = -1    parent [i] = -1  end  for u from 1 to the number of vertex in g     if disc[i] == -1      BICONNECTED-COMPONENTS-UTIL(u,disc,low,stack,parent)    let flag = flase    while stack.empty() == false      flag = true      print stack.top().src -&gt; stack.top().des      stack.pop()    end    if flag == true      print &apos;\n Found a Bioconnected-Components \n&apos;  endBICONNECTED-COMPONENTS-UTIL(u,disc,low,stack,parent)  let time be static  time = time + 1  let children = 0  disc[u] = low[u] = time  for v equal to every vertex adjacent to u    if disc[v] == -1      children = children + 1      parent[v] = u      stack.push(u-&gt;v)      BICONNECTED-COMPONENTS-UTIL(u,disc,low,stack,parent)      low[u] = min(low[u],low[v])      if (parnet[u] == -1 and children &gt; 1) or (parent[u] != -1 and low[v] &gt;= disc[u])        while stack.top().src != u or stack.top().des != v          print stack.top().src -&gt; stack.top().des          stack.pop()        end        print stack.top().src -&gt; stack.top().des        stack.pop()        print &apos;\n Found a Bioconnected-Components \n&apos;    else if v != parent[u] and disc[v] &lt; low[u]      low[u] = min(low[u],disc[v])      stack.push(u-&gt;v)  end</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><h2 id="&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;-Minimum-Spanning-Tree"><a href="#&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;-Minimum-Spanning-Tree" class="headerlink" title="&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;(Minimum-Spanning-Tree)"></a>&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;(Minimum-Spanning-Tree)</h2><p>&#x751F;&#x6210;&#x6811;&#x662F;&#x6307;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x8FDE;&#x901A;&#x3001;&#x65E0;&#x5411;&#x3001;&#x6709;&#x6743;&#x7684;&#x56FE;&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x9876;&#x70B9;&#x6784;&#x6210;&#x7684;&#x4E00;&#x9897;&#x6811;&#x3002;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x9897;&#x751F;&#x6210;&#x6811;&#xFF0C;&#x800C;&#x751F;&#x6210;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#x5C31;&#x662F;&#x6811;&#x4E2D;&#x6240;&#x6709;&#x8FB9;&#x7684;&#x6743;&#x91CD;&#x7684;&#x548C;&#x3002;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5C31;&#x662F;&#x751F;&#x6210;&#x6811;&#x4E2D;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x7684;&#x3002;</p><p>&#x6734;&#x7D20;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x4ECE;&#x56FE;&#x4E2D;&#x9009;&#x62E9;&#x6700;&#x5C0F;&#x6743;&#x91CD;&#x7684;&#x8FB9;&#xFF0C;&#x76F4;&#x5230;&#x751F;&#x6210;&#x4E00;&#x9897;&#x6811;&#x3002;&#x770B;&#x901A;&#x7528;&#x7684;&#x7B97;&#x6CD5;&#x4E4B;&#x524D;&#xFF0C;&#x540C;&#x6837;&#x8981;&#x8BA8;&#x8BBA;&#x4E00;&#x4E0B;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x7684;&#x6027;&#x8D28;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x8FDE;&#x901A;&#x3001;&#x65E0;&#x5411;&#x3001;&#x6709;&#x6743;&#x56FE;&#x4E2D;&#xFF0C;&#x4E00;&#x5B9A;&#x6709;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;&#x5982;&#x679C;&#x56FE;&#x4E0D;&#x5305;&#x542B;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x6761;&#x8FB9;&#xFF0C;&#x90A3;&#x4E48;&#x56FE;&#x5C31;&#x662F;&#x4E0D;&#x8FDE;&#x901A;&#x7684;&#x4E86;&#xFF0C;&#x8FD9;&#x4E0E;&#x5DF2;&#x77E5;&#x8FDE;&#x901A;&#x56FE;&#x4E0D;&#x7B26;&#xFF0C;&#x6240;&#x4EE5;&#x56FE;&#x5FC5;&#x5305;&#x542B;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;A&#x4E3A;&#x67D0;&#x4E2A;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x7684;&#x5B50;&#x96C6;(&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x90FD;&#x662F;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x7684;&#x5B50;&#x96C6;)&#x3002;</p><p>&#x90A3;&#x4E48;&#xFF0C;&#x4E3A;A&#x4E00;&#x76F4;&#x6DFB;&#x52A0;&#x5BF9;&#x7684;&#x8FB9;&#xFF0C;A&#x6700;&#x540E;&#x5C31;&#x4F1A;&#x6210;&#x4E3A;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;&#x90A3;&#x4E48;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x95EE;&#x9898;&#x5C31;&#x8F6C;&#x6362;&#x6210;&#x4E3A;&#x4E86;&#xFF0C;&#x4E00;&#x76F4;&#x627E;&#x5230;&#x5BF9;&#x7684;&#x8FB9;&#xFF0C;&#x76F4;&#x5230;&#x6210;&#x4E3A;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;&#x8FD9;&#x4E2A;&#x5BF9;&#x7684;&#x8FB9;&#x53EF;&#x4EE5;&#x53EB;&#x505A;&#x5B89;&#x5168;&#x8FB9;&#x3002;</p><p>&#x5B89;&#x5168;&#x8FB9;&#x5982;&#x4F55;&#x5BFB;&#x627E;&#x663E;&#x7136;&#x5C31;&#x6210;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x5173;&#x952E;&#x70B9;&#x3002;</p><p>&#x518D;&#x5047;&#x8BBE;&#xFF0C;&#x56FE;&#x4E2D;&#x6240;&#x6709;&#x9876;&#x70B9;&#x4E3A;V&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x9876;&#x70B9;&#x5207;&#x5272;&#x6210;&#x4E24;&#x4E2A;&#x90E8;&#x5206;S&#x548C;V&#x51CF;&#x53BB;S&#x3002;&#x6240;&#x6709;&#x8FDE;&#x63A5;&#x8FD9;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x7684;&#x8FB9;&#xFF0C;&#x5F88;&#x5F62;&#x8C61;&#x7684;&#x53EB;&#x505A;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#xFF0C;&#x8FD9;&#x4E9B;&#x8FB9;&#x6A2A;&#x8DE8;&#x4E86;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x6210;&#x4E3A;&#x8FD9;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x7684;&#x6865;&#x6881;&#x3002;&#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x5207;&#x5272;&#xFF1F;&#x4F7F;A&#x4E0D;&#x5305;&#x542B;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x5207;&#x5272;&#x6709;&#x591A;&#x79CD;&#x5207;&#x6CD5;&#xFF0C;&#x5207;&#x5272;&#x540E;&#xFF0C;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x5C31;&#x4E3A;A&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x3002;&#x5C06;&#x8FD9;&#x4E2A;&#x4F5C;&#x4E3A;<strong><em>&#x5B9A;&#x7406;1</em></strong>&#x3002;<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_minmumSpanningTree.JPG" alt="blog_minmumSpanningTree"></p><p><strong><em>&#x5B9A;&#x7406;1&#xFF1A;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5C06;&#x6240;&#x6709;&#x9876;&#x70B9;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x7684;&#x5207;&#x5272;&#xFF0C;&#x4E14;&#x4F7F;&#x67D0;&#x4E2A;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;A&#x4E0D;&#x5305;&#x542B;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x3002;&#x5219;&#x6A2A;&#x8DE8;&#x6B64;&#x5207;&#x5272;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#xFF0C;&#x5C31;&#x662F;A&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x3002;</em></strong></p><p>&#x4EE5;&#x4E0B;&#x4E3A;&#x6B64;&#x5B9A;&#x7406;&#x7684;&#x8BC1;&#x660E;&#xFF0C;&#x8FD9;&#x4E2A;&#x5B9A;&#x7406;&#x7684;&#x57FA;&#x7840;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x8FDE;&#x901A;&#x6027;&#x3002;</p><blockquote><p>&#x547D;&#x9898;&#xFF1A;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x4E3A;A&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF1A;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x540E;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x4E3A;x&#xFF0C;&#x6709;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;T&#x5305;&#x542B;A&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5305;&#x542B;x&#x3002;</p><p>&#x8BC1;&#x660E;&#xFF1A;&#x65E2;&#x7136;T&#x4E0D;&#x5305;&#x542B;x&#xFF0C;&#x90A3;&#x4E48;T&#x5FC5;&#x987B;&#x5305;&#x542B;&#x53E6;&#x4E00;&#x6761;&#x8FDE;&#x63A5;x&#x4E24;&#x7AEF;&#x9876;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x6761;&#x8DEF;&#x5F84;&#x4E0A;&#x53C8;&#x5FC5;&#x987B;&#x6709;&#x6761;&#x8FB9;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x3002;&#x5047;&#x8BBE;&#x8FD9;&#x6761;&#x8FB9;&#x4E3A;y&#x3002;T&#x5C06;y&#x51CF;&#x53BB;&#x540E;&#xFF0C;x&#x4E24;&#x7AEF;&#x7684;&#x9876;&#x70B9;&#x5C31;&#x65E0;&#x6CD5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#x3002;&#x8FD9;&#x65F6;&#x5982;&#x679C;&#x518D;&#x52A0;&#x4E0A;x&#xFF0C;&#x90A3;&#x4E48;x&#x4E24;&#x7AEF;&#x7684;&#x9876;&#x70B9;&#x53C8;&#x53EF;&#x4EE5;&#x4E92;&#x76F8;&#x5230;&#x8FBE;&#xFF0C;&#x5E76;&#x4E14;&#x6784;&#x9020;&#x4E86;&#x53E6;&#x4E00;&#x9897;&#x751F;&#x6210;&#x6811;T&#x2019;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;x&#x7684;&#x4EE3;&#x4EF7;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;y&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x90A3;&#x4E48;T&#x2018;&#x7684;&#x4EE3;&#x4EF7;&#x4E5F;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;T&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x90A3;&#x4E48;T&#x2019;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;&#x90A3;&#x4E48;x&#x65E2;&#x4E0D;&#x5728;A&#x4E2D;&#xFF0C;x&#x53C8;&#x5728;&#x4E00;&#x9897;&#x5305;&#x542B;A&#x7684;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x4E2D;&#x3002;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x8BC1;&#x660E;&#x8FC7;&#x7A0B;&#x4F7F;&#x7528;&#x7684;&#x5C31;&#x662F;&#x7ECF;&#x5E38;&#x62FF;&#x6765;&#x8BC1;&#x660E;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x7684;&#x6280;&#x5DE7;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x95EE;&#x9898;&#x7B26;&#x5408;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x4E5F;&#x5C31;&#x89E3;&#x91CA;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0B;&#x9762;&#x5C06;&#x8981;&#x63D0;&#x5230;&#x7684;&#x4E24;&#x4E2A;&#x7B97;&#x6CD5;&#x90FD;&#x662F;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x3002;</p><p><strong><em>&#x5B9A;&#x7406;1</em></strong>&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x63A8;&#x8BBA;&#xFF0C;&#x65E2;&#x7136;&#x5207;&#x5272;&#x6709;&#x591A;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x53EF;&#x4E0D;&#x53EF;&#x4EE5;&#x5BF9;A&#x548C;&#x5176;&#x4F59;&#x7684;&#x9876;&#x70B9;&#x8FDB;&#x884C;&#x5207;&#x5272;&#xFF0C;&#x8BBE;B&#x4E3A;&#x5305;&#x62EC;A&#x548C;&#x6240;&#x6709;&#x9876;&#x70B9;&#x6784;&#x6210;&#x7684;&#x4E00;&#x4E2A;&#x68EE;&#x6797;&#xFF0C;C&#x662F;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;C&#x8FDE;&#x63A5;&#x5176;&#x4ED6;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x662F;A&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x3002;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x5F88;&#x597D;&#x8BC1;&#x660E;&#xFF0C;&#x56E0;&#x4E3A;A&#x662F;B&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x6309;&#x7167;C&#x53BB;&#x5207;&#x5272;&#x56FE;&#x5206;&#x6210;C&#x548C;B&#x51CF;&#x53BB;C&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x5207;&#x5272;A&#xFF0C;&#x5373;A&#x4E2D;&#x5FC5;&#x5B9A;&#x4E0D;&#x5305;&#x542B;&#x6A2A;&#x8DE8;&#x5207;&#x5272;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x6A2A;&#x8DE8;&#x8FD9;&#x4E2A;&#x5207;&#x5272;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x5C31;&#x662F;&#x5B89;&#x5168;&#x8FB9;&#xFF0C;&#x5373;C&#x8FDE;&#x63A5;&#x5176;&#x4ED6;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#xFF0C;&#x63A8;&#x8BBA;&#x6210;&#x7ACB;&#x3002;&#x5C06;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x4F5C;&#x4E3A;<strong><em>&#x63A8;&#x8BBA;1</em></strong>&#x3002;</p><p><strong><em>&#x63A8;&#x8BBA;1:&#x67D0;&#x4E2A;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;A&#x548C;&#x5176;&#x4ED6;&#x9876;&#x70B9;&#x6784;&#x6210;&#x7684;&#x68EE;&#x6797;&#x4E2D;&#xFF0C;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x8FDE;&#x63A5;&#x5176;&#x4ED6;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x90FD;&#x4E3A;A&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x3002;</em></strong></p><p>&#x5982;&#x679C;&#x4ECE;&#x6240;&#x6709;&#x4E0D;&#x5728;A&#x4E2D;&#x7684;&#x8FB9;&#x9009;&#x62E9;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x7684;&#x8FB9;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FB9;&#x4E00;&#x5B9A;&#x8FDE;&#x63A5;&#x7740;&#x67D0;&#x4E2A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x4E5F;&#x5C31;&#x5C06;&#x9009;&#x5B89;&#x5168;&#x8FB9;&#x7684;&#x8303;&#x56F4;&#x62D3;&#x5C55;&#x5230;&#x4EFB;&#x610F;&#x4E00;&#x6761;&#x4E0D;&#x5728;A&#x4E2D;&#x7684;&#x8FB9;&#x3002;&#x8FD9;&#x4E2A;&#x63A8;&#x8BBA;&#x6B63;&#x597D;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x7684;&#x4E09;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x7B97;&#x6CD5;Kruskal&#x3001;Prime&#x3001;Boruvka&#x3002;</p><ul><li>Kruskal</li></ul><p>&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x548C;Kruskal&#x5DF2;&#x7ECF;&#x5F88;&#x63A5;&#x8FD1;&#x4E86;&#x3002;Kruskal&#x7B97;&#x6CD5;&#x505A;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x76F4;&#x9009;&#x62E9;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x7684;&#x8FB9;&#xFF0C;&#x4E0D;&#x8FC7;&#xFF0C;&#x5982;&#x679C;&#x9009;&#x62E9;&#x8FD9;&#x4E2A;&#x8FB9;&#x540E;&#xFF0C;&#x65E0;&#x751F;&#x6210;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#xFF0C;&#x800C;&#x751F;&#x6210;&#x56FE;&#x4E86;&#x600E;&#x4E48;&#x529E;&#xFF1F;Kruskal&#x6BD4;&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x5DE7;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F;&#x4E0D;&#x9009;&#x62E9;&#x4F1A;&#x6210;&#x73AF;&#x7684;&#x8FB9;&#x3002;</p><p>Kruskal&#x5E38;&#x7528;&#x7684;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6210;&#x73AF;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;UnionFind(&#x5E76;&#x67E5;&#x96C6;)&#xFF0C;UnionFind&#x6709;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;Find&#x68C0;&#x67E5;&#x5143;&#x7D20;&#x6240;&#x5728;&#x96C6;&#x5408;&#x7684;&#x7F16;&#x53F7;&#xFF0C;Union&#x5C06;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x3002;</p><pre><code class="lang-c">KRUSKAL(g)  let edges be all the edges of g  sort(edges)  let uf be new UnionFind  let e = 0  let i = 0  let result be new Array  while e &lt; edges.length()    let edge = edges[i]    i = i + 1    if uf.find(edge.src) != uf.find(edge.des)      result.append(edge)      e = e + 1      uf.union(edge.src,edge.des)  end  return result</code></pre><script type="math/tex; mode=display">V表示顶点的个数，E表示边的个数，排序E个边加上E次UnionFind操作</script><script type="math/tex; mode=display">时间复杂度:O(E\log_{2}{E}+E\log_{2}{V})</script><ul><li>Prim</li></ul><p>&#x6709;&#x4E86;&#x63A8;&#x8BBA;1&#xFF0C;Prim&#x7B97;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#x7406;&#x89E3;&#x8D77;&#x6765;&#x5C31;&#x5F88;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x4E00;&#x76F4;&#x53EA;&#x5BF9;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x8FDB;&#x884C;&#x5207;&#x5272;&#xFF0C;&#x7136;&#x540E;&#x9009;&#x62E9;&#x51FA;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x4E0E;&#x5176;&#x4ED6;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x5C31;OK&#x4E86;&#x3002;Prim&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x4E00;&#x76F4;&#x9009;&#x62E9;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x4E0E;&#x5176;&#x4ED6;&#x9876;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x3002;</p><p>Prim&#x7B97;&#x6CD5;&#x7EF4;&#x6301;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x5806;&#xFF0C;&#x5B58;&#x50A8;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x4EE5;&#x5916;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x4E0E;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x4E34;&#x63A5;&#x7684;&#x9876;&#x70B9;&#x7684;&#x6743;&#x91CD;&#x662F;&#x5176;&#x4E34;&#x63A5;&#x8FB9;&#x7684;&#x503C;&#xFF0C;&#x5176;&#x4F59;&#x7684;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#x7684;&#x9876;&#x70B9;&#x6743;&#x91CD;&#x90FD;&#x662F;&#x65E0;&#x7A77;&#x3002;Prim&#x7B97;&#x6CD5;&#x521D;&#x59CB;&#x5C06;&#x8D77;&#x59CB;&#x9876;&#x70B9;&#x5728;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#x7684;&#x6743;&#x91CD;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5176;&#x4F59;&#x7684;&#x9876;&#x70B9;&#x7F6E;&#x4E3A;&#x65E0;&#x7A77;&#x3002;&#x7136;&#x540E;&#x4ECE;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#x4E00;&#x76F4;&#x53D6;&#x6743;&#x91CD;&#x6700;&#x5C0F;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x5373;&#x9009;&#x62E9;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x52A0;&#x5165;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#xFF0C;&#x5982;&#x679C;&#x53D6;&#x51FA;&#x7684;&#x9876;&#x70B9;&#x7684;&#x4E34;&#x63A5;&#x9876;&#x70B9;&#x4E0D;&#x5728;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x4E2D;&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A;&#x4E34;&#x63A5;&#x9876;&#x70B9;&#x5728;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#x7684;&#x6743;&#x91CD;&#x6BD4;&#x8FB9;&#x5927;&#xFF0C;&#x5219;&#x66F4;&#x65B0;&#x4E34;&#x63A5;&#x9876;&#x70B9;&#x5728;&#x6700;&#x5C0F;&#x5806;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x76F4;&#x5230;&#x4ECE;&#x6700;&#x5C0F;&#x5806;&#x4E2D;&#x53D6;&#x51FA;&#x6240;&#x6709;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;PRIM(g,s)  let heap be new MinHeap  let result be new Array  for i from 1 to the number of vertex in g    let vertex be new Vertex(i)    vertex.weight = INT_MAX    heap.insert(vertex)  end  heap.decrease(s,0)  while heap.empty() == false    vertex v = heap.top()    for u equal to every vertex adjacent to v      if heap.isNotInHeap(u) and v-&gt;u &lt; heap.getWeightOfNode(u)        result[u] = v        heap.decrease(u,v-&gt;u)    end    end  return result</code></pre><script type="math/tex; mode=display">V表示顶点的个数，E表示边的个数，对V个顶点和E条边进行decrease操作</script><script type="math/tex; mode=display">时间复杂度:O(E\log_{2}{V}+V\log_{2}{V})</script><ul><li>Boruvka</li></ul><p>Kruskal&#x662F;&#x6839;&#x636E;&#x6240;&#x6709;&#x8FB9;&#x4E2D;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x7684;&#x4E00;&#x7AEF;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x5206;&#x5272;&#xFF0C;Prim&#x6839;&#x636E;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x5B50;&#x6811;&#x7684;&#x5B50;&#x96C6;&#x5206;&#x5272;&#xFF0C;Boruvka&#x6839;&#x636E;&#x6240;&#x6709;&#x7684;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x5206;&#x5272;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x90FD;&#x662F;&#x57FA;&#x4E8E;<strong><em>&#x63A8;&#x8BBA;1</em></strong>&#x3002;Boruvka&#x7B97;&#x6CD5;&#x5C06;&#x6240;&#x6709;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E0E;&#x5176;&#x4ED6;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x9009;&#x62E9;&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8FD9;&#x4E9B;&#x8FB9;&#x4E2D;&#x672A;&#x52A0;&#x5165;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x5B50;&#x96C6;&#x7684;&#x52A0;&#x8FDB;&#x53BB;&#xFF0C;&#x4E00;&#x76F4;&#x5230;&#x751F;&#x6210;&#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x3002;</p><p>Boruvka&#x7B97;&#x6CD5;&#x540C;&#x6837;&#x4F7F;&#x7528;&#x4E86;UnionFind&#x53BB;&#x8BB0;&#x5F55;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x7528;cheapest&#x6570;&#x7EC4;&#x8BB0;&#x5F55;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x4E0E;&#x5176;&#x4ED6;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#x8FDE;&#x63A5;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x8FB9;&#x7684;&#x7F16;&#x53F7;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;Boruvka(g)  let uf be new UnionFind  let cheapest be new Array  let edges be all the edge of g  let numTree = the number of vertex in g  let result be new Array  for i from 1 to number of vertex in g    cheapest[i] = -1  end  while numTree &gt; 0    for i from 1 to the number of edge in g      let set1 = uf.find(edges[i].src)      let set2 = uf.find(edges[i].des)      if set1 == set2        continue      if cheapest[se1] == -1 or edges[cheapest[set1]].weight &gt; edges[i].weight        cheapest[set1] = i      if cheapest[set2] == -1 or edges[cheapest[set2]].weight &gt; edges[i].weight        cheapest[set2] = i    end    for i from 1 to the number of vertex in g      if cheapest[i] != -1        let set1 = uf.find(edges[cheapest[i]].src)        let set2 = uf.find(edges[cheapest[i]].des)        if set1 == set2          continue        result[edges[cheapest[i]].src] = edges[cheapest[i]].des         uf.union(set1,set2)        numTree = numTree - 1    end  end  return result</code></pre><script type="math/tex; mode=display">时间复杂度:O(E\log_{2}{V})，V表示顶点的个数，E表示边的个数</script><h2 id="&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;-Single-Source-Shortest-Paths"><a href="#&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;-Single-Source-Shortest-Paths" class="headerlink" title="&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;(Single-Source-Shortest-Paths)"></a>&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;(Single-Source-Shortest-Paths)</h2><p>&#x7ED9;&#x51FA;&#x4E00;&#x5F20;&#x8FDE;&#x901A;&#x3001;&#x6709;&#x5411;&#x56FE;&#xFF0C;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x9876;&#x70B9;s&#x5230;&#x5176;&#x4ED6;&#x6240;&#x6709;&#x9876;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x56FE;&#x4E2D;&#x5B58;&#x5728;&#x8D1F;&#x73AF;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x56E0;&#x4E3A;&#x5B58;&#x5728;&#x8D1F;&#x73AF;&#x5C31;&#x53EF;&#x4EE5;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x8D1F;&#x73AF;&#x5F97;&#x5230;&#x66F4;&#x77ED;&#x7684;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x770B;&#x901A;&#x7528;&#x7684;&#x7B97;&#x6CD5;&#x4E4B;&#x524D;&#xFF0C;&#x540C;&#x6837;&#x8981;&#x8BA8;&#x8BBA;&#x4E00;&#x4E0B;&#x95EE;&#x9898;&#x7684;&#x6027;&#x8D28;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;&#x5B58;&#x5728;&#x4E00;&#x6761;&#x9876;&#x70B9;s&#x5230;&#x9876;&#x70B9;v&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;i&#x3001;j&#x4E3A;&#x8DEF;&#x5F84;&#x4E0A;&#x7684;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x3002;&#x90A3;&#x4E48;&#x5728;&#x8FD9;&#x6761;s&#x5230;v&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E0A;&#xFF0C;i&#x5230;j&#x7684;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x662F;i&#x5230;j&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF1F;&#x662F;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;i&#x5230;j&#x7684;&#x66F4;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x5B58;&#x5728;&#x4E00;&#x6761;s&#x5230;v&#x7684;&#x66F4;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E0E;&#x5047;&#x8BBE;&#x4E0D;&#x7B26;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x4E00;&#x6761;&#x4ECE;s&#x5230;v&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x6761;&#x8DEF;&#x5F84;&#x4E0A;&#x4EFB;&#x610F;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#x90FD;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x5177;&#x6709;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x89E3;&#x51B3;&#x6B64;&#x95EE;&#x9898;&#x7684;&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x6C42;&#x51FA;&#x6240;&#x6709;&#x9876;&#x70B9;s&#x5230;&#x9876;&#x70B9;v&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x7136;&#x540E;&#x53D6;&#x6700;&#x5C0F;&#x503C;&#x3002;&#x90A3;&#x4E48;&#x8981;&#x662F;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x5C31;&#x8981;&#x4E3A;v&#x70B9;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;&#x4F30;&#x8BA1;&#x503C;d&#xFF0C;&#x5E76;&#x8BBE;&#x8D77;&#x59CB;&#x4E3A;&#x65E0;&#x7A77;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5230;&#x8FBE;v&#x7684;&#x8DEF;&#x5F84;&#x5C0F;&#x4E8E;&#x8FD9;&#x4E2A;&#x4F30;&#x8BA1;&#x503C;&#xFF0C;&#x66F4;&#x65B0;&#x8FD9;&#x4E2A;&#x4F30;&#x8BA1;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x8BB0;&#x5F55;v&#x7684;&#x73B0;&#x9636;&#x6BB5;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x3002;&#x8FD9;&#x6B65;&#x64CD;&#x4F5C;&#x53EB;&#x505A;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;(relax)&#x3002;&#x5047;&#x8BBE;u&#x4E3A;&#x5C0F;&#x4E8E;&#x4F30;&#x8BA1;&#x503C;&#x8DEF;&#x5F84;&#x4E0A;&#x7684;&#x4E0A;&#x4E2A;&#x9876;&#x70B9;&#x3002;</p><pre><code class="lang-c">RELAX(u,v,result)  if v.d &gt; u.d + u-&gt;v    v.d = u.d + u-&gt;v    result[v] = u</code></pre><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_relax.JPG" alt="blog_relax"></p><p>&#x90A3;&#x4E48;&#xFF0C;&#x7B97;&#x6CD5;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x76F4;&#x677E;&#x5F1B;&#x5230;&#x8FBE;v&#x9876;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4ECE;&#x65E0;&#x7A77;&#x76F4;&#x5230;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6C42;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7684;&#x7B97;&#x6CD5;&#x90FD;&#x8981;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x53BB;&#x6C42;&#x89E3;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x7B97;&#x6CD5;&#x53EA;&#x80FD;&#x5C31;&#x662F;&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x987A;&#x5E8F;&#x4E0D;&#x540C;&#x6216;&#x8005;&#x6B21;&#x6570;&#x4E0D;&#x540C;&#x3002;&#x90A3;&#x4E48;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x4F1A;&#x4E0D;&#x4F1A;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x505A;&#x8FC7;&#x5934;&#x4E86;&#xFF0C;&#x5C06;v&#x7684;&#x4F30;&#x8BA1;&#x503C;&#x677E;&#x5F1B;&#x7684;&#x6BD4;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x8FD8;&#x5C0F;&#xFF1F;&#x4E0D;&#x4F1A;&#xFF0C;&#x5728;&#x7B97;&#x6CD5;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#xFF0C;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x9876;&#x70B9;&#xFF0C;&#x4E00;&#x76F4;&#x5BF9;&#x9876;&#x70B9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x9876;&#x70B9;&#x7684;&#x9884;&#x4F30;&#x503C;&#x4E0D;&#x4F1A;&#x4F4E;&#x4E8E;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x4EE5;&#x4E0B;&#x7528;&#x7ED3;&#x6784;&#x8BC1;&#x660E;&#x6CD5;&#x8BC1;&#x660E;&#x3002;</p><blockquote><p>&#x5047;&#x8BBE;&#xFF1A;u&#x4EE3;&#x8868;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;v&#x7684;&#x9876;&#x70B9;&#xFF0C;s-&gt;v&#x4EE3;&#x8868;s&#x5230;v&#x7684;&#x8FB9;&#xFF0C;s~&gt;v&#x4EE3;&#x8868;s&#x5230;v&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x547D;&#x9898;&#xFF1A;&#x5BF9;&#x5230;&#x8FBE;v&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x6709;v.d &gt;= s~&gt;v</p><p>&#x8BC1;&#x660E;&#xFF1A;<br>&#x5BF9;&#x4E8E;v=s&#x7684;&#x60C5;&#x51B5;&#xFF0C;v.d=0 s~v&#x5373;s~s&#x4E5F;&#x4E3A;0&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;<br>&#x5047;&#x8BBE;&#x5BF9;&#x4E8E;&#x9876;&#x70B9;u&#xFF0C;u.d &gt;= s~&gt;u&#x6210;&#x7ACB;&#x3002;<br>&#x6709;s~&gt;v &lt;= s~&gt;u + u-&gt;v&#xFF0C;&#x56E0;&#x4E3A;s~&gt;v&#x662F;&#x4E00;&#x6761;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x4E00;&#x6761;&#x7ECF;&#x8FC7;u&#x5230;&#x8FBE;v&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5FC5;&#x5C0F;&#x4E8E;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;<br>s~&gt;v &lt;= u.d + u-&gt;v<br>&#x56E0;&#x4E3A;&#x7ECF;&#x8FC7;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;v.d = u.d + u-&gt;v&#xFF0C;&#x6240;&#x4EE5;v.d &gt;= s~&gt;v&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p>&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x53EA;&#x80FD;&#x540C;&#x65F6;&#x5BF9;&#x4E00;&#x6761;&#x8FB9;&#x8D77;&#x4F5C;&#x7528;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;n&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x53EA;&#x80FD;&#x4ECE;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;n-1&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x95EE;&#x9898;&#x662F;&#x4E2A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6BCF;&#x6B21;&#x9012;&#x589E;&#x4E00;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x3002;</p><p><strong><em>&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6027;&#x8D28;&#xFF1A;&#x6B64;&#x95EE;&#x9898;&#x662F;&#x4E2A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6BCF;&#x6B21;&#x957F;&#x5EA6;&#x9012;&#x589E;&#x4E00;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x3002;</em></strong></p><p>&#x5728;&#x4ECB;&#x7ECD;&#x901A;&#x7528;&#x7B97;&#x6CD5;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x4ECB;&#x7ECD;&#x4E00;&#x79CD;&#x4E13;&#x5BF9;&#x4E8E;&#x6709;&#x5411;&#x65E0;&#x73AF;&#x56FE;&#x5F88;&#x5DE7;&#x7684;&#x7B97;&#x6CD5;&#x3002;</p><ul><li>&#x6709;&#x5411;&#x65E0;&#x73AF;&#x56FE;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;(DAG-Shortest-Paths)</li></ul><p>&#x5BF9;&#x4E8E;&#x6709;&#x5411;&#x65E0;&#x73AF;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x5BF9;&#x56FE;&#x8FDB;&#x884C;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x7684;&#x987A;&#x5E8F;&#x5BF9;&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x4F5C;&#x4E3A;&#x51FA;&#x5EA6;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#x3002;&#x4EE5;&#x4E0B;&#x8BC1;&#x660E;&#x7B97;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;</p><blockquote><p>&#x5047;&#x8BBE;v&#x4E3A;&#x5BF9;&#x56FE;&#x62D3;&#x6251;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x67D0;&#x4E2A;&#x9876;&#x70B9;&#x3002;&#x5F53;&#x5BF9;v&#x4F5C;&#x4E3A;&#x51FA;&#x5EA6;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x524D;&#xFF0C;&#x6240;&#x6709;&#x80FD;&#x5230;&#x8FBE;v&#x7684;&#x8DEF;&#x5F84;&#x90FD;&#x5DF2;&#x7ECF;&#x505A;&#x8FC7;&#x4E86;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x6B64;&#x65F6;&#x5DF2;&#x7ECF;&#x627E;&#x5230;&#x4E86;&#x5230;&#x8FBE;v&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5F53;&#x5BF9;&#x6240;&#x6709;&#x9876;&#x70B9;&#x4F5C;&#x4E3A;&#x51FA;&#x5EA6;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x6240;&#x6709;&#x9876;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5C31;&#x5DF2;&#x7ECF;&#x88AB;&#x627E;&#x5230;&#x3002;&#x7B97;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#x5F97;&#x5230;&#x8BC1;&#x660E;&#x3002;</p></blockquote><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;DAG-SHORTEST-PATHS(g)  let sorted = TOPOLOGICAL-SORTING-GREEDY(g)  let result be new Array  for u equal to every vertex in sorted    for v equal to every vertex adjacent to u       if v.d &gt; u.d + u-&gt;v        RELAX(u,v,result)    end  end  return result</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V+E)，V表示顶点的个数，E表示边的个数</script><p>&#x63A5;&#x4E0B;&#x6765;&#x4ECB;&#x7ECD;&#x4E24;&#x79CD;&#x901A;&#x7528;&#x7684;&#x7B97;&#x6CD5;Bellman-Ford&#x548C;Dijkstra&#x3002;Bellman-Ford&#x548C;Dijkstra&#x6709;&#x4EC0;&#x4E48;&#x8054;&#x7CFB;&#x5462;&#xFF1F;Bellman-Ford&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x6709;&#x8D1F;&#x6743;&#x91CD;&#x56FE;&#x7684;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x4FA6;&#x6D4B;&#x51FA;&#x56FE;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8D1F;&#x73AF;&#x3002;Dijkstra&#x53EA;&#x80FD;&#x89E3;&#x51B3;&#x6CA1;&#x6709;&#x8D1F;&#x6743;&#x91CD;&#x8FB9;&#x7684;&#x56FE;&#x7684;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x95EE;&#x9898;&#x3002;Bellman-Ford&#x662F;&#x8FDB;&#x884C;&#x5FC5;&#x987B;&#x7684;&#x6700;&#x5C11;&#x6B21;&#x6570;&#x7684;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x3002;&#x800C;Dijkstra&#x53D1;&#x73B0;&#xFF0C;&#x53EA;&#x8981;&#x6CA1;&#x6709;&#x8D1F;&#x6743;&#x91CD;&#x8FB9;&#xFF0C;&#x8FD8;&#x80FD;&#x8FDB;&#x884C;&#x66F4;&#x5C11;&#x7684;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p><ul><li>Bellman-Ford</li></ul><p>Bellman-Ford&#x662F;&#x6700;&#x901A;&#x7528;&#x7684;&#x89E3;&#x51B3;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7B97;&#x6CD5;&#xFF0C;&#x521D;&#x59CB;&#x5C06;&#x6240;&#x6709;&#x9876;&#x70B9;&#x4F30;&#x8BA1;&#x503C;&#x8BBE;&#x4E3A;&#x65E0;&#x7A77;&#xFF0C;&#x5C06;&#x6E90;&#x70B9;&#x8BBE;&#x4E3A;&#x96F6;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5BF9;&#x6240;&#x6709;&#x8FB9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x4E2A;&#x6B65;&#x9AA4;&#x4F5C;&#x4E3A;&#x5185;&#x90E8;&#x5FAA;&#x73AF;&#x3002;&#x518D;&#x5C06;&#x8FD9;&#x4E2A;&#x6B65;&#x9AA4;&#x505A;&#x56FE;&#x7684;&#x9876;&#x70B9;&#x4E2A;&#x6570;&#x51CF;&#x4E00;&#x6B21;&#x3002;</p><p>Bellman-Ford&#x7684;&#x6B63;&#x786E;&#x6027;&#x4E0D;&#x96BE;&#x8BC1;&#x660E;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x968F;&#x7740;Bellman-Ford&#x7B97;&#x6CD5;&#x5185;&#x90E8;&#x7684;&#x5FAA;&#x73AF;&#xFF0C;Bellman-Ford&#x627E;&#x5230;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7684;&#x957F;&#x5EA6;&#x4E5F;&#x5728;&#x589E;&#x52A0;&#x3002;&#x9996;&#x5148;&#x8BC1;&#x660E;&#x5185;&#x90E8;&#x5FAA;&#x73AF;&#x5728;&#x5FAA;&#x73AF;&#x5230;&#x7B2C;n&#x6B21;&#x65F6;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x6240;&#x6709;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;n&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x6211;&#x4EEC;&#x7528;&#x7ED3;&#x6784;&#x8BC1;&#x660E;&#x6CD5;&#x3002;&#x5728;&#x4EE5;&#x4E0B;&#x8BC1;&#x660E;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;Bellman-Ford&#x867D;&#x7136;&#x4E0D;&#x662F;&#x7ECF;&#x5178;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x539F;&#x7406;&#x662F;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6027;&#x8D28;&#x7684;&#x3002;</p><blockquote><p>&#x8BC1;&#x660E;&#xFF1A;</p><p>&#x5BF9;&#x4E8E;n=0&#x65F6;&#xFF0C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E3A;0&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6240;&#x6709;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E3A;n-1&#x7684;&#x8DEF;&#x5F84;&#x5DF2;&#x7ECF;&#x88AB;&#x627E;&#x5230;&#x3002;&#x56E0;&#x4E3A;&#x6839;&#x636E;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6027;&#x8D28;&#xFF0C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;n&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;n-1&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x7684;&#x3002;&#x56E0;&#x4E3A;Bellman-Ford&#x7B97;&#x6CD5;&#x4F1A;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6240;&#x6709;&#x957F;&#x4E3A;n&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4F1A;&#x4ECE;&#x76F8;&#x5E94;&#x7684;&#x957F;&#x4E3A;n-1&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x627E;&#x5230;&#x3002;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x53EA;&#x8981;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E0A;&#x4E0D;&#x5B58;&#x5728;&#x8D1F;&#x73AF;&#xFF0C;&#x90A3;&#x4E48;&#x6240;&#x6709;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5C31;&#x5FC5;&#x5C0F;&#x4E8E;V-1&#x3002;&#x6240;&#x4EE5;&#xFF0C;Bellman-Ford&#x5185;&#x90E8;&#x5FAA;&#x73AF;&#x6267;&#x884C;V-1&#x6B21;&#xFF0C;&#x80FD;&#x627E;&#x5230;&#x6700;&#x957F;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x80FD;&#x627E;&#x5230;&#x6240;&#x6709;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;Bellman-Ford&#x6B63;&#x786E;&#x6027;&#x8BC1;&#x6BD5;&#x3002;</p></blockquote><p>Bellman-Ford&#x5B9E;&#x73B0;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;flag&#x4F4D;&#xFF0C;&#x63D0;&#x524D;&#x7701;&#x53BB;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x5FAA;&#x73AF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;BELLMAN-FORD(g,s)  let edges be all the edge of g  let result be new Array  for i from 1 to the number of vertex of g    result[i] = INT_MAX  end  result[s] = 0  for i from 1 to the number of vertex of g minus 1    let flag = false    for j from 1 to the numnber of edge of g      let edge = edges[j]      if result[edge.src] != INT_MAX and edge.src &gt; edge.des + edge.weight        RELAX(u,v,result)        flag = true    end    if flag == false      break  end  return result</code></pre><script type="math/tex; mode=display">时间复杂度:O(V \cdot E)，V表示顶点的个数，E表示边的个数</script><p>&#x4E3A;&#x4EC0;&#x4E48;Bellman-Ford&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x4FA6;&#x6D4B;&#x51FA;&#x6709;&#x8D1F;&#x73AF;&#xFF1F;&#x7B97;&#x6CD5;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x5BF9;&#x56FE;&#x7684;&#x6240;&#x6709;&#x8FB9;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6C42;&#x5F97;&#x7684;&#x503C;&#x6539;&#x53D8;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x8D1F;&#x73AF;&#x3002;&#x8FD9;&#x4E2A;&#x8BC1;&#x660E;&#x770B;&#x4E00;&#x4E0B;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x7684;&#x5B9A;&#x4E49;&#x5C31;&#x884C;&#x4E86;&#x3002;&#x6839;&#x636E;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x9876;&#x70B9;&#x7684;&#x4F30;&#x8BA1;&#x5728;&#x7B49;&#x4E8E;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x540E;&#x4E0D;&#x4F1A;&#x518D;&#x6539;&#x53D8;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x6539;&#x53D8;&#x4E86;&#x5C31;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x8D1F;&#x73AF;&#xFF0C;&#x4ECE;&#x800C;&#x6CA1;&#x6709;&#x5F97;&#x5230;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;</p><ul><li>Dijkstra</li></ul><p>Dijkstra&#x662F;&#x4E2A;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x6734;&#x7D20;&#x7684;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;&#x65E2;&#x7136;&#x6CA1;&#x6709;&#x8D1F;&#x6743;&#x8FB9;&#xFF0C;&#x9009;&#x51FA;&#x5F53;&#x524D;&#x9636;&#x6BB5;&#x6700;&#x77ED;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E2A;&#x8DEF;&#x5F84;&#x5C31;&#x5E94;&#x8BE5;&#x662F;&#x5230;&#x8FBE;&#x8FD9;&#x4E2A;&#x8DEF;&#x5F84;&#x7EC8;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;</p><p>Dijkstra&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x521D;&#x59CB;&#x5C06;&#x6240;&#x6709;&#x9876;&#x70B9;&#x4F30;&#x8BA1;&#x503C;&#x8BBE;&#x4E3A;&#x65E0;&#x7A77;&#xFF0C;&#x5C06;&#x6E90;&#x70B9;&#x8BBE;&#x4E3A;&#x96F6;&#x3002;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x96C6;&#x5408;S&#x4EE3;&#x8868;&#x5DF2;&#x7ECF;&#x627E;&#x5230;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x9876;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x96C6;&#x5408;S&#x5916;&#x6240;&#x6709;&#x9876;&#x70B9;&#xFF0C;&#x9009;&#x62E9;&#x6709;&#x6700;&#x5C0F;&#x7684;&#x4F30;&#x8BA1;&#x503C;&#x7684;&#x9876;&#x70B9;&#x52A0;&#x5165;&#x5230;&#x96C6;&#x5408;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x5728;S&#x4E2D;&#x7684;&#x4E34;&#x63A5;&#x9876;&#x70B9;&#x505A;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x76F4;&#x5230;&#x6240;&#x6709;&#x9876;&#x70B9;&#x90FD;&#x5728;&#x96C6;&#x5408;S&#x4E2D;&#x3002;</p><p>Dijkstra&#x7684;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#x7684;&#x53CD;&#x8BC1;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x8BC1;&#x51FA;&#x3002;</p><blockquote><p>&#x5047;&#x8BBE;&#xFF0C;&#x73B0;&#x9636;&#x6BB5;&#x8981;&#x9009;&#x4ECE;s&#x5230;&#x67D0;&#x4E2A;&#x9876;&#x70B9;u&#x7684;&#x8DEF;&#x5F84;&#x4F5C;&#x4E3A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x52A0;&#x5165;&#x5230;&#x96C6;&#x5408;S&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x9009;&#x62E9;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x3002;&#x6709;&#x53E6;&#x4E00;&#x6761;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4ECE;s&#x5230;&#x8FBE;u&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x6761;&#x8DEF;&#x5F84;&#x548C;&#x539F;&#x9009;&#x62E9;&#x7684;&#x8DEF;&#x5F84;&#x80AF;&#x5B9A;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x7ECF;&#x8FC7;&#x4E0D;&#x540C;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x5047;&#x8BBE;&#x8FD9;&#x6761;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E0A;&#x5230;&#x8FBE;u&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#x4E3A;k&#xFF0C;&#x65E2;&#x7136;&#x8FD9;&#x662F;&#x4E00;&#x6761;&#x4ECE;s&#x5230;&#x8FBE;u&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x90A3;&#x4E48;&#x4ECE;s&#x5230;k&#x80AF;&#x5B9A;&#x6BD4;&#x4ECE;s&#x5230;v&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x7B97;&#x6CD5;&#x4F1A;&#x5148;&#x9009;&#x62E9;&#x4ECE;s&#x5230;k&#xFF0C;&#x7136;&#x540E;&#x9009;&#x62E9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x4E0D;&#x4F1A;&#x9009;&#x62E9;&#x5047;&#x8BBE;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E0E;&#x5047;&#x8BBE;&#x77DB;&#x76FE;&#xFF0C;&#x5047;&#x8BBE;&#x4E0D;&#x6210;&#x7ACB;&#xFF0C;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x6027;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p>&#x4EE5;&#x4E0B;&#x662F;&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x4E0A;&#x7684;&#x8BC1;&#x660E;&#xFF0C;&#x5C1D;&#x8BD5;&#x4ECE;&#x5B9E;&#x9645;&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#x53BB;&#x8BC1;&#x660E;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x6709;&#x70B9;clumsy(&#x7B28;&#x91CD;)&#xFF0C;&#x6838;&#x5FC3;&#x7684;&#x60F3;&#x6CD5;&#x5176;&#x5B9E;&#x548C;&#x4E0A;&#x9762;&#x7B80;&#x5355;&#x7684;&#x53CD;&#x8BC1;&#x6CD5;&#x4E00;&#x81F4;&#x3002;</p><blockquote><p>&#x547D;&#x9898;&#xFF1A;&#x9009;&#x62E9;&#x6709;&#x6700;&#x5C0F;&#x4F30;&#x8BA1;&#x503C;&#x7684;&#x9876;&#x70B9;&#x52A0;&#x5165;&#x96C6;&#x5408;S&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x4F30;&#x8BA1;&#x503C;&#x5FC5;&#x5B9A;&#x662F;&#x8FD9;&#x4E2A;&#x9876;&#x70B9;&#x7684;&#x6700;&#x5C0F;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x540C;&#x6837;&#x4F7F;&#x7528;&#x53CD;&#x8BC1;&#x6CD5;&#x6765;&#x8BC1;&#xFF0C;&#x5E76;&#x4E14;&#x5173;&#x6CE8;&#x5DF2;&#x7ECF;&#x9009;&#x62E9;&#x4E86;&#x6700;&#x5C0F;&#x9884;&#x4F30;&#x503C;&#x7684;&#x9876;&#x70B9;&#x4F46;&#x8FD8;&#x6CA1;&#x52A0;&#x5165;&#x9876;&#x70B9;S&#x65F6;&#x7684;&#x60C5;&#x5F62;&#x3002;</p><p>&#x5047;&#x5982;&#x9009;&#x62E9;&#x4E86;&#x9876;&#x70B9;u&#xFF0C;&#x8FD9;&#x65F6;&#xFF0C;&#x5C06;&#x4ECE;s&#x5230;u&#x4F5C;&#x4E3A;&#x6700;&#x5C0F;&#x6761;&#x8DEF;&#x5F84;&#x52A0;&#x5165;&#x5230;S&#x4E2D;&#xFF0C;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x60C5;&#x51B5;&#x4E00;&#xFF0C;&#x9009;&#x62E9;&#x7684;&#x4ECE;s&#x5230;u&#x7684;&#x8DEF;&#x5F84;&#x5C31;&#x662F;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x90A3;&#x4E48;&#x547D;&#x9898;&#x5DF2;&#x7ECF;&#x5F97;&#x8BC1;&#x3002;&#x60C5;&#x51B5;&#x4E8C;&#xFF0C;&#x9009;&#x62E9;&#x7684;&#x4ECE;s&#x5230;u&#x7684;&#x8DEF;&#x5F84;&#x4E0D;&#x662F;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x5B58;&#x5728;u.d&gt;s~&gt;u&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x9876;&#x70B9;x&#xFF0C;&#x4F7F;&#x5F97;x&#x5728;&#x96C6;&#x5408;S&#x4E2D;&#xFF0C;&#x5E76;&#x5728;&#x5BF9;x&#x8FDB;&#x884C;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x627E;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x9876;&#x70B9;y&#xFF0C;&#x4F7F;&#x5F97;y&#x4E0D;&#x5728;&#x96C6;&#x5408;&#x4E2D;&#x4E14;y&#x7684;&#x4F30;&#x8BA1;&#x503C;&#x5C31;&#x7B49;&#x4E8E;s&#x5230;y&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5373;s~&gt;y&#x3002;x&#x53EF;&#x4EE5;&#x4E0E;s&#x91CD;&#x5408;&#xFF0C;y&#x53EF;&#x4EE5;&#x4E0E;u&#x91CD;&#x5408;&#x3002;</p><p>&#x90A3;&#x4E48;&#x6709;y.d = s~&gt;y<br>&#x56E0;&#x4E3A;&#x4ECE;s&#x5230;y&#x662F;&#x4ECE;s&#x5230;u&#x7684;&#x5B50;&#x8DEF;&#x5F84;&#xFF0C;&#x6709;s~&gt;u &gt;= s~&gt;y<br>&#x5F97;&#x51FA;s~&gt;u &gt;= y.d<br>&#x56E0;&#x4E3A;&#x9009;&#x62E9;&#x4E86;&#x9876;&#x70B9;u&#xFF0C;&#x6709;u.d &lt;= y.d<br>&#x5F97;&#x51FA;s~&gt;u &gt;= u.d<br>&#x8FD9;&#x4E0E;&#x5047;&#x8BBE;&#x77DB;&#x76FE;&#xFF0C;&#x6240;&#x4EE5;&#x5047;&#x8BBE;&#x4E0D;&#x6210;&#x7ACB;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p>&#x5B9E;&#x73B0;&#x548C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E0E;Prim&#x7B97;&#x6CD5;&#x7C7B;&#x4F3C;&#xFF0C;&#x96C6;&#x5408;S&#x7528;&#x6700;&#x5C0F;&#x5806;&#x5B9E;&#x73B0;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;DIJKSTRA(g,s)  let heap be new MinHeap  let result be new Array  for i from 1 to the number of vertex in g    let vertex be new Vertex(i)    vertex.d = INT_MAX    heap.insert(vertex)  end  heap.decrease(s,0)  while heap.empty() == false    vertex u = heap.top()    for v equal to every vertex adjacent to u      if heap.isNotInHeap(v) and u.d v.d &gt; u.d + u-&gt;v        RELAX(u,v,result)        heap.decrease(v,v.d)    end    end  return result</code></pre><script type="math/tex; mode=display">V表示顶点的个数，E表示边的个数，对V个顶点和E条边进行decrease操作</script><script type="math/tex; mode=display">时间复杂度:O(E\log_{2}{V}+V\log_{2}{V})</script><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x8FD0;&#x6C14;&#x597D;&#xFF0C;Bellman-Ford&#x4E0D;&#x9700;&#x8981;V&#x6B21;&#x5FAA;&#x73AF;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6240;&#x6709;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x4F46;&#x662F;&#x8FD0;&#x6C14;&#x4E0D;&#x597D;&#xFF0C;Bellman-Ford&#x8981;&#x7ECF;&#x8FC7;&#x6700;&#x5C11;V&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x4E0A;&#x6587;&#x8BF4;&#x5230;&#x7684;&#xFF0C;Bellman-Ford&#x662F;&#x8FDB;&#x884C;&#x5FC5;&#x987B;&#x7684;&#x6700;&#x5C11;&#x6B21;&#x6570;&#x7684;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x3002;&#x800C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x8D1F;&#x6743;&#x91CD;&#x8FB9;&#xFF0C;Dijkstra&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x66F4;&#x5C11;&#x6B21;&#x7684;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#xFF0C;&#x81F3;&#x591A;&#x5BF9;&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x677E;&#x5F1B;&#x64CD;&#x4F5C;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;Bellman-Ford&#x4E0E;Dijkstra&#x7684;&#x8054;&#x7CFB;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x4E0E;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x8054;&#x7CFB;&#x3002;Bellman-Ford&#x548C;Dijkstra&#x7B97;&#x6CD5;&#x672C;&#x8D28;&#x90FD;&#x662F;<strong><em>&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6027;&#x8D28;</em></strong>&#x3002;</p><h2 id="&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;-All-Pair-Shortest-Paths"><a href="#&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;-All-Pair-Shortest-Paths" class="headerlink" title="&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;(All-Pair-Shortest-Paths)"></a>&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;(All-Pair-Shortest-Paths)</h2><p>&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5C31;&#x662F;&#x5C06;&#x56FE;&#x4E2D;&#x4EFB;&#x610F;&#x4E24;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6C42;&#x51FA;&#x6765;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4EE3;&#x8868;&#x6A2A;&#x5750;&#x6807;&#x4F5C;&#x4E3A;&#x6807;&#x53F7;&#x7684;&#x9876;&#x70B9;&#x5230;&#x7EB5;&#x5750;&#x6807;&#x4F5C;&#x4E3A;&#x6807;&#x53F7;&#x7684;&#x9876;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x6240;&#x6709;&#x9876;&#x70B9;&#x8FD0;&#x884C;&#x4E00;&#x6B21;Bellman-Ford&#x7B97;&#x6CD5;&#x5F97;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x592A;&#x9AD8;&#x4E86;&#x3002;&#x5C1D;&#x8BD5;&#x53BB;&#x627E;&#x5230;&#x66F4;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><p>&#x65E2;&#x7136;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x662F;&#x4E2A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x9012;&#x589E;&#x4E00;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#xFF0C;&#x5C1D;&#x8BD5;&#x5BF9;&#x5168;&#x5BF9;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x6027;&#x8D28;&#xFF0C;&#x7136;&#x540E;&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x964D;&#x4F4E;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6709;n&#x4E2A;&#x9876;&#x70B9;&#xFF0C;<script type="math/tex">dp_{ij}</script>&#x4EE3;&#x8868;&#x4ECE;&#x9876;&#x70B9;<script type="math/tex">i</script>&#x5230;&#x9876;&#x70B9;<script type="math/tex">j</script>&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x5047;&#x8BBE;&#x8FD9;&#x6761;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x4E3A;<script type="math/tex">m</script>&#xFF0C;&#x4E14;<script type="math/tex">k</script>&#x4E3A;&#x4EFB;&#x610F;&#x9876;&#x70B9;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#xFF0C;<script type="math/tex">dp_{ij}</script>&#x662F;&#x7531;&#x957F;&#x5EA6;&#x4E3A;<script type="math/tex">m-1</script>&#x7684;<script type="math/tex">dp_{ik}</script>&#x52A0;&#x4E0A;<script type="math/tex">k</script>-&gt;<script type="math/tex">j</script>&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x7684;&#x3002;</p><script type="math/tex; mode=display">则状态转移公式为：dp^m_{i,j}=\begin{equation}  \left\{               \begin{array}{lr}               0 & i=j \\                \min\limits_{1\leq k\leq n}(dp^{m-1}_{i,k}+k->j) & i\not= j\\               \end{array}  \right.  \end{equation} \\ i、j、k、m取值范围都为[1,n]，则时间复杂度为Θ(n^4)</script><p>&#x770B;&#x6765;&#x5373;&#x4F7F;&#x5728;&#x5355;&#x6E90;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x6027;&#x8D28;&#x4E0A;&#x8FDB;&#x884C;&#x6C42;&#x89E3;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x4ECD;&#x7136;&#x5F88;&#x9AD8;&#x3002;</p><p>&#x5C1D;&#x8BD5;&#x4E0D;&#x4ECE;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x5EA6;&#x89D2;&#x5EA6;&#x8003;&#x8651;&#x52A8;&#x6001;&#x89C4;&#x5212;&#xFF0C;&#x4ECE;&#x9876;&#x70B9;&#x89D2;&#x5EA6;&#x53BB;&#x8003;&#x8651;&#x52A8;&#x6001;&#x89C4;&#x5212;&#xFF0C;&#x5F15;&#x51FA;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x7B97;&#x6CD5;Floyd-Warshall&#x3002;</p><ul><li>Floyd-Warshall</li></ul><p>&#x597D;&#xFF0C;&#x4ECE;&#x9876;&#x70B9;&#x7684;&#x89D2;&#x5EA6;&#x53BB;&#x601D;&#x8003;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x4ECE;&#x9876;&#x70B9;<script type="math/tex">i</script>&#x5230;&#x9876;&#x70B9;<script type="math/tex">j</script>&#x8981;&#x7ECF;&#x8FC7;&#x5176;&#x4ED6;&#x9876;&#x70B9;&#xFF0C;&#x5047;&#x8BBE;&#x7ECF;&#x8FC7;&#x7684;&#x9876;&#x70B9;&#x4E3A;<script type="math/tex">k</script>&#x3002;&#x7136;&#x540E;&#x6839;&#x636E;&#x89E3;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x7ECF;&#x9A8C;&#xFF0C;&#x731C;&#x60F3;<script type="math/tex">dp_{ij}</script>&#x4E0E;<script type="math/tex">dp_{ik}</script>&#x548C;<script type="math/tex">dp_{kj}</script>&#x600E;&#x4E48;&#x80FD;&#x6CBE;&#x5230;&#x8FB9;&#xFF1F;&#x5047;&#x8BBE;&#x4ECE;<script type="math/tex">i</script>&#x5230;<script type="math/tex">j</script>&#x53EA;&#x9700;&#x8981;&#x7ECF;&#x8FC7;<script type="math/tex">[1,k]</script>&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x9876;&#x70B9;&#x3002;&#x5982;&#x679C;&#x4ECE;<script type="math/tex">i</script>&#x5230;j&#x7ECF;&#x8FC7;<script type="math/tex">k</script>&#xFF0C;&#x90A3;&#x4E48;<script type="math/tex">dp_{ik}</script>&#x5C31;&#x4EE3;&#x8868;&#x4ECE;<script type="math/tex">i</script>&#x5230;<script type="math/tex">k</script>&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;<script type="math/tex">dp_{kj}</script>&#x5C31;&#x4EE3;&#x8868;&#x4ECE;<script type="math/tex">k</script>&#x5230;<script type="math/tex">j</script>&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;<script type="math/tex">dp_{ij}</script>&#x5C31;&#x7B49;&#x4E8E;&#x4ECE;<script type="math/tex">dp_{ik}</script>&#x548C;<script type="math/tex">dp_{kj}</script>&#x8F6C;&#x79FB;&#x8FC7;&#x53BB;&#xFF0C;&#x800C;<script type="math/tex">dp_{ik}</script>&#x548C;<script type="math/tex">dp_{kj}</script>&#x90FD;&#x4E0D;&#x7ECF;&#x8FC7;<script type="math/tex">k</script>&#xFF0C;&#x90FD;&#x53EA;&#x9700;&#x7ECF;&#x8FC7;<script type="math/tex">[1,k-1]</script>&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x9876;&#x70B9;&#x3002;&#x5982;&#x679C;&#x4ECE;<script type="math/tex">i</script>&#x5230;<script type="math/tex">j</script>&#x4E0D;&#x7ECF;&#x8FC7;<script type="math/tex">k</script>&#xFF0C;<script type="math/tex">dp_{ij}</script>&#x5C31;&#x7B49;&#x4E8E;&#x4ECE;<script type="math/tex">i</script>&#x5230;<script type="math/tex">j</script>&#x53EA;&#x9700;&#x8981;&#x7ECF;&#x8FC7;<script type="math/tex">[i,k-1]</script>&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x9876;&#x70B9;&#x65F6;&#x7684;<script type="math/tex">dp_{ij}</script>&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_flyodWarshall.JPG" alt="blog_flyodWarshall"></p><script type="math/tex; mode=display">则状态转移公式为：dp^k_{i,j}=\begin{equation}  \left\{               \begin{array}{lr}               i->j & k=0 \\                \min(dp^{k-1}_{i,j},dp^{k-1}_{i,k}+dp^{k-1}_{k,j}) & k\not= 0\\               \end{array}  \right.  \end{equation}</script><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;FLYOD-WARSHALL(g)  let dp be new Table  for i from 1 to the number of vertex in g    for j from 1 to the number of vertex in g      dp[i][j] = g[i][j]    end  end  for k from 1 to the number of vertex in g    for i from 1 to the number of vertex in g      for j from 1 to the number of vertex in g        if dp[i][k] + dp[k][j] &lt; dp[i][j]          dp[i][j] = dp[i][k] + dp[k][j]      end    end  end  return dp</code></pre><script type="math/tex; mode=display">时间复杂度:Θ(V^3)，V表示顶点的个数</script><ul><li>Johnson</li></ul><p>&#x5BF9;&#x4E8E;&#x7A00;&#x758F;&#x56FE;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x6709;&#x529E;&#x6CD5;&#x964D;&#x4F4E;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x76F4;&#x89C2;&#x4E0A;&#x770B;&#xFF0C;&#x5BF9;&#x4E8E;&#x7A00;&#x758F;&#x56FE;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E2A;&#x9876;&#x70B9;&#x8FD0;&#x884C;Dijkstra&#x7B97;&#x6CD5;&#x662F;&#x5FEB;&#x8FC7;Floyd-Warshall&#x7B97;&#x6CD5;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x8981;&#x6C42;&#x56FE;&#x4E2D;&#x4E0D;&#x80FD;&#x6709;&#x8D1F;&#x6743;&#x8FB9;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x53EF;&#x4E0D;&#x53EF;&#x4EE5;&#x5C06;&#x6709;&#x8D1F;&#x6743;&#x8FB9;&#x7684;&#x56FE;&#x8F6C;&#x5316;&#x4E3A;&#x6CA1;&#x6709;&#x8D1F;&#x6743;&#x8FB9;&#x7684;&#x56FE;&#x3002;Johnson&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x7684;&#x8FB9;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x8D4B;&#x6743;&#x91CD;(reweight)&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x6240;&#x6709;&#x9876;&#x70B9;&#x8FD0;&#x884C;Dijkstra&#x7B97;&#x6CD5;&#x3002;&#x90A3;&#x600E;&#x4E48;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x8D4B;&#x6743;&#x91CD;&#x5462;&#xFF1F;&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x662F;&#x627E;&#x51FA;&#x6240;&#x6709;&#x7684;&#x8FB9;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x6240;&#x6709;&#x8FB9;&#x589E;&#x52A0;&#x8FD9;&#x4E2A;&#x503C;&#x3002;&#x5F88;&#x53EF;&#x60DC;&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x884C;&#x3002;&#x8003;&#x8651;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x60C5;&#x51B5;&#xFF0C;&#x9876;&#x70B9;a&#x5230;b&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x6709;3&#x6761;&#x8FB9;&#xFF0C;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x4E3A;4&#x3002;&#x6709;a&#x5230;b&#x53E6;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x53EA;&#x7ECF;&#x8FC7;&#x4E00;&#x6761;&#x8FB9;&#xFF0C;&#x8DEF;&#x5F84;&#x6743;&#x91CD;&#x4E3A;5&#x3002;&#x5982;&#x679C;&#x5BF9;&#x6240;&#x6709;&#x8FB9;&#x589E;&#x52A0;1&#x6743;&#x91CD;&#xFF0C;&#x90A3;&#x4E48;&#x9876;&#x70B9;a&#x5230;&#x9876;&#x70B9;b&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5C31;&#x6539;&#x53D8;&#x4E86;&#x3002;&#x91CD;&#x65B0;&#x8D4B;&#x6743;&#x91CD;&#x6539;&#x53D8;&#x4E86;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x662F;&#x660E;&#x663E;&#x6709;&#x95EE;&#x9898;&#x7684;&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x91CD;&#x65B0;&#x8D4B;&#x6743;&#x91CD;&#x6709;&#x4E24;&#x70B9;&#x8981;&#x6C42;&#xFF1A;</p><p>1.&#x5BF9;&#x8D77;&#x70B9;&#x548C;&#x7EC8;&#x70B9;&#x76F8;&#x540C;&#x7684;&#x8DEF;&#x5F84;&#x6539;&#x53D8;&#x540C;&#x6837;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x4FDD;&#x6301;&#x539F;&#x6765;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7ED3;&#x679C;&#x3002;</p><p>2.&#x6240;&#x6709;&#x8FB9;&#x91CD;&#x65B0;&#x8D4B;&#x6743;&#x4EE5;&#x540E;&#x4E0D;&#x5B58;&#x5728;&#x8D1F;&#x6743;&#x8FB9;&#x3002;</p><p>Johnson&#x7B97;&#x6CD5;&#x5148;&#x5BF9;&#x9876;&#x70B9;&#x91CD;&#x65B0;&#x8D4B;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8FB9;&#x7684;&#x91CD;&#x65B0;&#x8D4B;&#x503C;&#x7531;&#x4E24;&#x7AEF;&#x9876;&#x70B9;&#x7684;&#x91CD;&#x65B0;&#x8D4B;&#x7684;&#x503C;&#x5F97;&#x51FA;&#x3002;&#x5047;&#x8BBE;u&#x548C;v&#x4E3A;&#x76F8;&#x90BB;&#x7684;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#x3002;</p><script type="math/tex; mode=display">定义w'()函数为重赋权重后的值，w()函数为原值,h()函数为对某个顶点重新赋的值</script><script type="math/tex; mode=display">w'(u,v)=w(u,v)+h(u)-h(v)</script><p>&#x8FD9;&#x6837;&#x5B9A;&#x4E49;<script type="math/tex">w'()</script>&#x51FD;&#x6570;&#x4EE5;&#x540E;&#xFF0C;&#x5BF9;&#x8DEF;&#x5F84;&#x91CD;&#x65B0;&#x8D4B;&#x7684;&#x503C;&#x5F71;&#x54CD;&#x7684;&#x53EA;&#x6709;&#x8D77;&#x70B9;&#x548C;&#x7EC8;&#x70B9;&#x4E24;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x4E2D;&#x95F4;&#x9876;&#x70B9;&#x91CD;&#x8D4B;&#x7684;&#x503C;&#x90FD;&#x88AB;&#x6D88;&#x6389;&#x4E86;&#x3002;&#x7B49;&#x4EF7;&#x4E8E;&#x4FDD;&#x6301;&#x539F;&#x6765;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x7ED3;&#x679C;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x600E;&#x4E48;&#x4FDD;&#x8BC1;&#x7B2C;&#x4E8C;&#x70B9;&#xFF1F;Johnson&#x7B97;&#x6CD5;&#x4F1A;&#x4E3A;&#x56FE;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x9876;&#x70B9;<script type="math/tex">s</script>&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x56FE;&#x8FD0;&#x884C;&#x4E00;&#x6B21;Bellman-Ford&#x7B97;&#x6CD5;&#x3002;&#x5F97;&#x51FA;&#x65B0;&#x589E;&#x7684;&#x9876;&#x70B9;s&#x4E0E;&#x6240;&#x6709;&#x539F;&#x9876;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E2A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x5C31;&#x662F;<script type="math/tex">h()</script>&#x51FD;&#x6570;&#x7684;&#x503C;&#x3002;&#x4EE5;&#x4E0B;&#x4E3A;&#x7B2C;&#x4E8C;&#x70B9;&#x7684;&#x6B63;&#x786E;&#x6027;&#x8BC1;&#x660E;&#x3002; </p><blockquote><p><script type="math/tex">h(u)</script>&#x4EE3;&#x8868;<script type="math/tex">s~>u</script>&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;<script type="math/tex">h(v)</script>&#x4EE3;&#x8868;<script type="math/tex">s~>v</script>&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x65E2;&#x7136;<script type="math/tex">h(v)</script>&#x4E3A;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x90A3;&#x4E48;<script type="math/tex">h(u)</script>&#x52A0;&#x4E0A;<script type="math/tex">w(u,v)</script>&#x5FC5;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;<script type="math/tex">h(v)</script>&#x3002;&#x5373;<script type="math/tex">w'(u,v)</script>&#x5927;&#x4E8E;&#x7B49;&#x4E8E;<script type="math/tex">0</script>&#xFF0C;&#x6B63;&#x786E;&#x6027;&#x5F97;&#x8BC1;&#x3002;</p></blockquote><p>&#x800C;&#x4E14;&#x5728;&#x8FD0;&#x884C;Bellman-Ford&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6B63;&#x597D;&#x53EF;&#x4EE5;&#x4FA6;&#x6D4B;&#x51FA;&#x56FE;&#x4E2D;&#x662F;&#x5426;&#x6709;&#x8D1F;&#x73AF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;JOHNSON(g)  let s be new Vertex  g.insert(s)  if BELLMAN-FORD(g,s) == flase    there is a negative cycle in graph  else    for v equal to every vertex in g      h(v) = min(v~&gt;s)    end    for (u,v) equal to every edge in graph      w&#x2019;(u,v) = w(u,v) + h(u) - h(v)    end    let result be new Table    for u equal to every vertex in g      DIJSKTRA(g,u)      for v equal to every vertex in g        result[u][v] = min(u~&gt;v) + h(v) - h(u)      end    end  return result</code></pre><script type="math/tex; mode=display">时间复杂度:O(V\cdot E\log_{2}{V}+V^2\log_{2}{V}+V\cdot E)，V表示顶点的个数，E表示边的个数</script><p><br></p><blockquote><p>&#x8BC1;&#x660E;&#x4E86;&#x8FD9;&#x4E48;&#x591A;&#x7684;&#x7B97;&#x6CD5;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8BC1;&#x660E;&#x662F;&#x6709;&#x6280;&#x5DE7;&#x7684;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x53EA;&#x6709;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x53CD;&#x8BC1;&#x6CD5;&#x3001;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x3001;Cut-And-Paste&#x6CD5;&#x3002;</p><p>&#x7ECF;&#x8FC7;&#x56FE;&#x8BBA;&#x7684;&#x63A2;&#x8BA8;&#xFF0C;&#x4FBF;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x7B97;&#x6CD5;&#x4E0E;&#x6570;&#x5B66;&#x4E4B;&#x95F4;&#x7D27;&#x5BC6;&#x7684;&#x8054;&#x7CFB;&#x3002;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x8981;&#x5BF9;&#x95EE;&#x9898;&#x672C;&#x8EAB;&#x7684;&#x7279;&#x5F81;&#x3001;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x603B;&#x7ED3;&#x6216;&#x8005;&#x63D0;&#x70BC;&#x3002;&#x6709;&#x65F6;&#x8981;&#x5BF9;&#x95EE;&#x9898;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x8F6C;&#x5316;&#x3002;&#x7136;&#x540E;&#x6839;&#x636E;&#x95EE;&#x9898;&#x7684;&#x7279;&#x5F81;&#x3001;&#x6027;&#x8D28;&#x63A8;&#x5BFC;&#x51FA;&#x5B9A;&#x7406;&#x3002;&#x518D;&#x5C06;&#x5B9A;&#x7406;&#x62D3;&#x5C55;&#xFF0C;&#x63D0;&#x51FA;&#x63A8;&#x8BBA;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x7B97;&#x6CD5;&#x5C31;&#x5728;&#x706F;&#x706B;&#x9611;&#x73CA;&#x5904;&#x4E86;&#x3002;</p><p>&#x8FD9;&#x611F;&#x89C9;&#x5C31;&#x50CF;&#xFF0C;&#x4E0D;&#x662F;&#x4F60;&#x627E;&#x5230;&#x4E86;&#x5408;&#x9002;&#x7684;&#x7B97;&#x6CD5;&#x3002;&#x800C;&#x662F;&#x5408;&#x9002;&#x7684;&#x7B97;&#x6CD5;&#x627E;&#x5230;&#x4E86;&#x4F60;&#x3002;</p></blockquote>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法升腾</title>
      <link href="/%E7%AE%97%E6%B3%95%E5%8D%87%E8%85%BE/"/>
      <url>/%E7%AE%97%E6%B3%95%E5%8D%87%E8%85%BE/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x70C8;&#x7130;&#x5347;&#x817E;</p></blockquote><p>&#x672C;&#x7BC7;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#xFF0C;&#x5206;&#x6CBB;&#x3001;&#x56DE;&#x6EAF;&#x3001;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3001;&#x8D2A;&#x5FC3;&#x3002;</p><a id="more"></a><p><br></p><h2 id="&#x5206;&#x6CBB;"><a href="#&#x5206;&#x6CBB;" class="headerlink" title="&#x5206;&#x6CBB;"></a>&#x5206;&#x6CBB;</h2><p>&#x5206;&#x6CBB;&#x601D;&#x8DEF;&#xFF1A;</p><ul><li>&#x5206;&#x89E3;(Divide)&#xFF1A;&#x5C06;&#x539F;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x6210;&#x8BB8;&#x591A;&#x76F8;&#x4F3C;&#x7684;&#x3001;&#x89C4;&#x6A21;&#x66F4;&#x5C0F;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x3002;</li><li>&#x89E3;&#x51B3;(Conquer)&#xFF1A;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#x5212;&#x5206;&#x540E;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x3002;</li><li>&#x5408;&#x5E76;(Combine)&#xFF1A;&#x5C06;&#x6240;&#x6709;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5408;&#x5E76;&#x6210;&#x539F;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x3002;</li></ul><p>&#x5206;&#x6CBB;&#x7684;&#x4F5C;&#x7528;&#xFF1A;&#x5927;&#x90E8;&#x5206;&#x66B4;&#x529B;&#x6CD5;(brute-force)&#x91C7;&#x7528;&#x5206;&#x6CBB;&#x601D;&#x60F3;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x590D;&#x6742;&#x5EA6;</p><p>&#x5206;&#x6CBB;&#x548C;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x8FD8;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x6BD4;&#x5982;&#x6811;&#x7684;&#x904D;&#x5386;&#x548C;&#x6811;&#x7684;&#x904D;&#x5386;&#x53D8;&#x79CD;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x5206;&#x6CBB;&#x7B97;&#x6CD5;&#x3002;</p><p>&#x5206;&#x6CBB;&#x7684;&#x6700;&#x5178;&#x578B;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x662F;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x3001;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x7684;&#x53D8;&#x79CD;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x9006;&#x5E8F;&#x5BF9;&#x3001;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x5206;&#x6CBB;&#x90FD;&#x662F;&#x5C06;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x6210;&#x4E24;&#x4E2A;&#x89C4;&#x6A21;&#x76F8;&#x8FD1;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x60F3;&#x4E00;&#x4E0B;&#x9012;&#x5F52;&#x6811;&#x5C31;&#x77E5;&#x9053;&#xFF0C;&#x5206;&#x89E3;&#x6210;&#x4E24;&#x4E2A;&#x89C4;&#x6A21;&#x76F8;&#x8FD1;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x6BD4;&#x5206;&#x89E3;&#x6210;&#x4E24;&#x4E2A;&#x89C4;&#x6A21;&#x8D70;&#x6781;&#x7AEF;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x590D;&#x6742;&#x5EA6;&#x8981;&#x4F4E;&#x3002;</p><ul><li>&#x4E58;&#x65B9;&#x95EE;&#x9898;(Pow)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;x&#xFF0C;&#x6C42;x&#x7684;n&#x9636;&#x6570;&#x3002;</p><p>&#x6734;&#x7D20;&#x601D;&#x60F3;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x4E2A;for&#x5FAA;&#x73AF;&#x8FDE;&#x4E58;n&#x4E2A;x&#x5C31;&#x53EF;&#x4EE5;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">T(i)=\sum_{i=1}^{n}1=Θ(n)</script><p>&#x8FD0;&#x7528;&#x5206;&#x6CBB;&#x601D;&#x60F3;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;x&#x60F3;&#x4E0D;&#x51FA;&#x53EF;&#x4EE5;&#x5206;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;n&#x60F3;&#x4E00;&#x60F3;&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x3002;&#x5C06;x&#x7684;n&#x6B21;&#x65B9;&#xFF0C;&#x5206;&#x89E3;&#x6210;2&#x4E2A;x&#x7684;$\frac{n}{2}$&#x6B21;&#x65B9;&#xFF0C;2&#x4E2A;&#x540C;&#x6837;&#x7684;&#x6B21;&#x65B9;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x4E00;&#x6B21;&#x8BA1;&#x7B97;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><script type="math/tex; mode=display">则x^n=\begin{equation}  \left\{               \begin{array}{lr}               x^{\frac{n}{2}}\cdot x^{\frac{n}{2}} & 如果n为偶数 \\               x^{\frac{n-1}{2}}\cdot x^{\frac{n-1}{2}} & 如果n为奇数\\               \end{array}  \right.  \end{equation}</script><p>&#x5206;&#x89E3;&#x540E;&#xFF0C;&#x9012;&#x5F52;&#x7684;&#x89E3;&#x51B3;<script type="math/tex">\frac{n}{2}</script>&#x7684;&#x95EE;&#x9898;&#x3002;&#x7136;&#x540E;&#x5224;&#x65AD;&#x4E00;&#x4E0B;&#x5947;&#x3001;&#x5076;&#x6570;&#x5C06;&#x7ED3;&#x679C;&#x5408;&#x5E76;&#x8D77;&#x6765;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x89E3;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;POW(x,n)  if n == 0    return 1  let result = POW(x, n/2)   result = result * result  if n&#x4E3A;&#x5947;&#x6570;    result = result * x  return result</code></pre><script type="math/tex; mode=display">时间复杂度：T(n)=T(\frac{n}{2})+Θ(1)=Θ(\log_{2}{n})</script><ul><li>&#x6574;&#x6570;&#x4E58;&#x6CD5;(Integer-Multiply)</li></ul><p>&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;n&#x4F4D;&#x7684;&#x6574;&#x6570;A&#x548C;B&#xFF0C;&#x6C42;&#x4ED6;&#x4EEC;&#x7684;&#x4E58;&#x79EF;C&#x3002;</p><p>&#x6734;&#x7D20;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x540C;&#x5341;&#x8FDB;&#x5236;&#x8BA1;&#x7B97;&#x4E58;&#x6CD5;&#x4E00;&#x6837;&#xFF0C;&#x4ECE;&#x4F4E;&#x4F4D;&#x5230;&#x9AD8;&#x4F4D;&#xFF0C;&#x4E00;&#x4F4D;&#x4E00;&#x4F4D;&#x4E58;&#xFF0C;&#x7136;&#x540E;&#x76F8;&#x52A0;&#x3002;&#x6BD4;&#x5982;11010101&#x4E58;&#x4EE5;01111101&#xFF1A;</p><pre><code class="lang-c">                1 1 0 1 0 1 0 1             &#xD7;  0 1 1 1 1 1 0 1             --------------------                1 1 0 1 0 1 0 1              0 0 0 0 0 0 0 0            1 1 0 1 0 1 0 1          1 1 0 1 0 1 0 1        1 1 0 1 0 1 0 1      1 1 0 1 0 1 0 1    1 1 0 1 0 1 0 1  0 0 0 0 0 0 0 0 -------------------------------- 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1</code></pre><script type="math/tex; mode=display">时间复杂度：T(i)=\sum_{i=1}^{n}\sum_{j=1}^{n}1=Θ(n^2)</script><p>&#x5206;&#x6CBB;&#x601D;&#x60F3;&#xFF0C;&#x5C06;&#x6574;&#x6570;&#x5206;&#x89E3;&#x6210;<script type="math/tex">\frac{n}{2}</script>&#x9AD8;&#x4F4D;&#x548C;<script type="math/tex">\frac{n}{2}</script>&#x4F4E;&#x4F4D;&#x3002;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#x5206;&#x89E3;&#x4E3A;4&#x4E2A;<script type="math/tex">\frac{n}{2}</script>&#x4F4D;&#x6574;&#x6570;&#x3002;&#x4EE5;11010101&#x548C;01111101&#x4E3A;&#x4F8B;&#xFF1A;</p><pre><code class="lang-c"> 1101  0101      0111  1101 |-a-| |-b-|     |-c-| |-d-|</code></pre><p>&#x8FD9;&#x6837;&#xFF0C;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#x76F8;&#x4E58;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x8BA1;&#x7B97;4&#x4E2A;<script type="math/tex">\frac{n}{2}</script>&#x4F4D;&#x6574;&#x6570;&#x76F8;&#x4E58;&#x3002;&#x518D;&#x5BF9;&#x8FD9;4&#x4E2A;<script type="math/tex">\frac{n}{2}</script>&#x4F4D;&#x6574;&#x6570;&#x76F8;&#x4E58;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#x3002;&#x6700;&#x540E;&#x5C06;4&#x4E2A;<script type="math/tex">\frac{n}{2}</script>&#x4F4D;&#x6574;&#x6570;&#x5408;&#x5E76;&#x8D77;&#x6765;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x89E3;&#x3002;</p><script type="math/tex; mode=display">合并：A*B=(a\cdot c)<<\frac{n}{2}+(a\cdot d+b\cdot c)<<\frac{n}{4}+b\cdot d</script><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;:INTEGER-MULTIPLY(A,B,n)  if n == 1    return A * B  else    let e = MULTIPLY(A&#x7684;&#x524D;n/2&#x4F4D;,B&#x7684;&#x524D;n/2&#x4F4D;,n/2)    let f = MULTIPLY(A&#x7684;&#x524D;n/2&#x4F4D;,B&#x7684;&#x540E;n/2&#x4F4D;,n/2)    let g = MULTIPLY(A&#x7684;&#x540E;n/2&#x4F4D;,B&#x7684;&#x524D;n/2&#x4F4D;,n/2)    let h = MULTIPLY(A&#x7684;&#x540E;n/2&#x4F4D;,B&#x7684;&#x540E;n/2&#x4F4D;,n/2)  return e &lt;&lt; n/2 + (f + g) &lt;&lt; n/4 + h</code></pre><script type="math/tex; mode=display">时间复杂度：T(n) =4T(\frac{n}{2})+Θ(n)</script><p>&#x7136;&#x800C;&#x5C06;&#x66B4;&#x529B;&#x8DDF;&#x6539;&#x4E3A;&#x5206;&#x6CBB;&#x6CA1;&#x6709;&#x8282;&#x7701;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5F00;&#x5934;&#x8BB2;&#x7684;&#x5927;&#x90E8;&#x5206;&#x7B97;&#x6CD5;&#x66F4;&#x6539;&#x4E3A;&#x5206;&#x6CBB;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x7531;&#x4E0A;&#x9762;&#x7684;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8981;&#x60F3;&#x964D;&#x4F4E;&#x590D;&#x6742;&#x5EA6;&#x53EA;&#x80FD;&#x4ECE;4&#x4E0A;&#x505A;&#x624B;&#x811A;&#xFF0C;&#x6539;&#x53D8;&#x5176;&#x4ED6;&#x53C2;&#x6570;&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#x5B9E;&#x8D28;&#x4E0A;&#x7684;&#x6539;&#x53D8;&#x3002;</p><p>Karatsuba&#x653E;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x4E0A;&#x9762;&#x516C;&#x5F0F;&#x4E2D;&#x7684;4&#x53D8;&#x6210;3&#x3002;</p><script type="math/tex; mode=display">将合并中的(a\cdot d+b\cdot c)转化为(a\cdot c + b\cdot d-(a-b)\cdot(c-d))</script><p>&#x8FD9;&#x6837;&#x53EA;&#x9700;&#x8981;&#x6C42;3&#x4E2A;&#x6574;&#x6570;&#x7684;&#x4E58;&#x79EF;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x89E3;&#x3002;</p><script type="math/tex; mode=display">时间复杂变为：T(n)=3T(\frac{n}{2})+Θ(n)=Θ(n^{\log_{2}{3}})</script><p>&#x867D;&#x7136;&#x6700;&#x540E;&#x6CA1;&#x6709;&#x964D;&#x4F4E;&#x4E00;&#x4E2A;&#x7B49;&#x7EA7;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x8FD0;&#x884C;&#x4E2D;&#xFF0C;&#x8FD8;&#x662F;&#x51CF;&#x5C11;&#x4E86;&#x5F88;&#x591A;&#x8FD0;&#x7B97;&#x65F6;&#x95F4;&#x3002;</p><ul><li>&#x77E9;&#x9635;&#x4E58;&#x6CD5;(Square-Matrix-Multiply)</li></ul><p>&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;<script type="math/tex">n\cdot n</script>&#x7684;&#x77E9;&#x9635;A&#x548C;B&#xFF0C;&#x6C42;&#x4ED6;&#x4EEC;&#x7684;&#x4E58;&#x79EF;&#x77E9;&#x9635;C&#x3002;&#x6839;&#x636E;&#x77E9;&#x9635;&#x4E58;&#x79EF;&#x516C;&#x5F0F;&#xFF0C;&#x5BF9;&#x4E8E;<script type="math/tex">A(a_{ij})</script>&#x548C;B<script type="math/tex">(b_{ij})</script>&#xFF0C;&#x6709;&#xFF1A;</p><script type="math/tex; mode=display">c_{ij}=\sum_{k=1}^{n}a_{ik}\cdot b_{kj}</script><p>&#x6734;&#x7D20;&#x601D;&#x60F3;&#x5C31;&#x662F;3&#x5C42;for&#x5FAA;&#x73AF;&#xFF0C;&#x5F97;&#x51FA;&#x7684;&#x77E9;&#x9635;C&#x7684;&#x884C;&#x6570;&#x4E3A;A&#x7684;&#x884C;&#x6570;&#xFF0C;C&#x7684;&#x5217;&#x6570;&#x4E3A;B&#x7684;&#x5217;&#x6570;&#xFF0C;C&#x6BCF;&#x4E2A;&#x503C;&#x4E3A;A&#x7684;&#x5BF9;&#x5E94;&#x5217;&#x4E58;&#x4EE5;B&#x7684;&#x5BF9;&#x5E94;&#x884C;&#x3002;</p><script type="math/tex; mode=display">时间复杂度T(i)=\sum_{i=1}^{n}\sum_{j=1}^{n}\sum_{k=1}^{n}1=Θ(n^3)</script><p>&#x5206;&#x6CBB;&#x601D;&#x60F3;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5F88;&#x96BE;&#x60F3;&#x5230;&#x5982;&#x4F55;&#x5206;&#x89E3;&#x3002;&#x5C06;&#x77E9;&#x9635;&#x5206;&#x89E3;&#x6210;4&#x4E2A;<script type="math/tex">\frac{n}{2}</script>&#x7684;&#x77E9;&#x9635;&#x5757;(block)&#xFF0C;&#x4E0B;&#x5F0F;&#x7528;&#x5B57;&#x6BCD;&#x8868;&#x793A;&#x5B83;&#x4EEC;&#x3002;</p><script type="math/tex; mode=display">矩阵C=矩阵A\cdot矩阵B转化为：</script><script type="math/tex; mode=display">\left[                 \begin{matrix}   r & s \\   i & u \\  \end{matrix}  \right]=\left[                 \begin{matrix}   a & b \\   c & d \\  \end{matrix}  \right] \cdot \left[                 \begin{matrix}   e & f \\   g & h \\  \end{matrix}  \right]</script><p>&#x800C;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x5757;&#x7684;&#x503C;&#x7B49;&#x4E8E;2&#x5BF9;&#x77E9;&#x9635;&#x5757;&#x7684;&#x4E58;&#x79EF;&#xFF0C;&#x6BD4;&#x5982;r&#xFF0C;<script type="math/tex">r=a\cdot e+b\cdot g</script>&#x3002;&#x5176;&#x4ED6;&#x77E9;&#x9635;&#x5757;&#x4E5F;&#x7C7B;&#x4F3C;&#xFF1A;<script type="math/tex">s=a\cdot f+b\cdot h，t=c\cdot e+d\cdot g，u=c\cdot f+d\cdot h</script>&#x3002;</p><p>&#x5728;&#x5C06;&#x4E24;&#x4E2A;&#x77E9;&#x9635;&#x4E58;&#x79EF;&#x5206;&#x89E3;&#x6210;8&#x5BF9;&#x77E9;&#x9635;&#x5757;&#x4E58;&#x79EF;&#x540E;&#xFF0C;&#x6BCF;&#x5BF9;&#x77E9;&#x9635;&#x5757;&#x4E58;&#x79EF;&#x53C8;&#x53EF;&#x4EE5;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#x3002;&#x6700;&#x540E;&#x5C06;8&#x5BF9;&#x77E9;&#x9635;&#x5757;&#x4E58;&#x79EF;&#x7684;&#x7ED3;&#x679C;&#x5408;&#x5E76;&#x8D77;&#x6765;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x89E3;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;SQUARE-MATRIX-MULTIPLY-RECURSIVE(A,B)  n = A.rows  let C = new n * n Matrix  if n == 1    C = (1)  else    r = SQUARE-MATRIX-MULTIPLY-RECURSIVE(a,e) + SQUARE-MATRIX-MULTIPLY-RECURSIVE(b,g)    s = SQUARE-MATRIX-MULTIPLY-RECURSIVE(a,f) + SQUARE-MATRIX-MULTIPLY-RECURSIVE(b,h)    t = SQUARE-MATRIX-MULTIPLY-RECURSIVE(c,e) + SQUARE-MATRIX-MULTIPLY-RECURSIVE(d,g)    u = SQUARE-MATRIX-MULTIPLY-RECURSIVE(c,f) + SQUARE-MATRIX-MULTIPLY-RECURSIVE(d,h)    combine(r,s,t,u)  return C</code></pre><script type="math/tex; mode=display">时间复杂度：T(n)=8T(\frac{n}{2})+Θ(n^2)，根据主定理T(n)=Θ(n^3)</script><p>&#x7C7B;&#x4F3C;&#x6574;&#x6570;&#x4E58;&#x6CD5;&#xFF0C;&#x5C06;&#x66B4;&#x529B;&#x8DDF;&#x6539;&#x4E3A;&#x5206;&#x6CBB;&#x6CA1;&#x6709;&#x8282;&#x7701;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x7528;&#x540C;&#x6837;&#x7684;&#x601D;&#x60F3;&#x53BB;&#x964D;&#x4F4E;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x5728;&#x4E0A;&#x9762;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E2D;&#x7684;8&#x505A;&#x624B;&#x811A;&#x3002;</p><p>Strassen&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x4E0A;&#x9762;&#x516C;&#x5F0F;&#x4E2D;&#x7684;8&#x60F3;&#x529E;&#x6CD5;&#x53D8;&#x6210;7&#x3002;</p><pre><code class="lang-c">&#x5047;&#x8BBE;:p1 = a(f-h)p2 = (a+b)*hp3 = (c+d)*ep4 = d(g-e)p5 = (a+d)*(e+h)p6 = (b-d)*(g+h)p7 = (a-c)*(e+f)r = p5+p4-p2+p6s = p1+p2t = p3+p4u = p5+p1-p3-p7</code></pre><p>&#x8FD9;&#x4E9B;&#x5047;&#x8BBE;&#x53EF;&#x4EE5;&#x4EE3;&#x5165;&#x8BC1;&#x660E;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x505A;&#x4E86;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x53EA;&#x7528;&#x5047;&#x8BBE;7&#x4E2A;&#x77E9;&#x9635;&#x5757;&#x7684;&#x4E58;&#x79EF;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x53EA;&#x6C42;7&#x4E2A;&#x77E9;&#x9635;&#x5757;&#x7684;&#x4E58;&#x79EF;&#x5C31;&#x53EF;&#x4EE5;&#x6C42;&#x51FA;&#x89E3;&#x3002;</p><script type="math/tex; mode=display">时间复杂度变为：T(n)=7T(\frac{n}{2})+Θ(n^2)=Θ(n^{\log_{2}{7}})</script><p>&#x4E0E;&#x6574;&#x6570;&#x4E58;&#x6CD5;&#x4E00;&#x6837;&#xFF0C;&#x867D;&#x7136;&#x6700;&#x540E;&#x6CA1;&#x6709;&#x964D;&#x4F4E;&#x4E00;&#x4E2A;&#x7B49;&#x7EA7;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x8FD0;&#x884C;&#x4E2D;&#xFF0C;&#x8FD8;&#x662F;&#x51CF;&#x5C11;&#x4E86;&#x5F88;&#x591A;&#x8FD0;&#x7B97;&#x65F6;&#x95F4;&#x3002;</p><ul><li>&#x6700;&#x63A5;&#x8FD1;&#x70B9;&#x5BF9;(Closest-Pair-Of-Points)</li></ul><p>&#x7ED9;&#x51FA;n&#x4E2A;&#x70B9;&#xFF0C;&#x6C42;n&#x4E2A;&#x70B9;&#x4E2D;&#x70B9;&#x5BF9;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x3002;</p><p>&#x80CC;&#x666F;&#xFF1A;&#x6C42;&#x4E24;&#x70B9;p&#x3001;q&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x4E3A;</p><script type="math/tex; mode=display">DistanceOfPoints=\sqrt{(p_x-q_x)^2+(p_y-q_y)^2}</script><p>&#x6734;&#x7D20;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x6C42;&#x6240;&#x6709;&#x70B9;&#x5BF9;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x7136;&#x540E;&#x5F97;&#x51FA;&#x6700;&#x5C0F;&#x503C;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;BRUTE-FORCE(points,n)  let min = MAX_FLOAT  for i from 1 to n    for j from i+1 to n      if DistanceOfPoints(points[i],points[j]) &lt; min        min = DistanceOfPoints(points[i],points[j])    end  end  return min</code></pre><script type="math/tex; mode=display">时间复杂度：T(i)=\sum_{i=1}^{n}\sum_{j=i+1}^{n}=O(n^2)</script><p>&#x5206;&#x6CBB;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x5C06;n&#x4E2A;&#x70B9;&#x5148;&#x6309;x&#x5750;&#x6807;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x4ECE;x&#x5750;&#x6807;&#x5C06;&#x70B9;&#x5206;&#x89E3;&#x6210;&#x4E24;&#x90E8;&#x5206;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_Closest-Pair-of-Points-1.JPG" alt="Closest-Pair-of-Points-1"></p><p>&#x800C;&#x6BCF;&#x4E2A;&#x90E8;&#x5206;&#x53C8;&#x53EF;&#x4EE5;&#x9012;&#x5F52;&#x89E3;&#x51B3;&#xFF0C;&#x76F4;&#x5230;&#x5206;&#x89E3;&#x5230;3&#x4E2A;&#x70B9;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6BD4;&#x5BF9;&#x627E;&#x51FA;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x3002;&#x5408;&#x5E76;&#x7684;&#x8FC7;&#x7A0B;&#x4F1A;&#x590D;&#x6742;&#x70B9;&#xFF0C;<script type="math/tex">P_L</script>&#x4E0E;<script type="math/tex">P_R</script>&#x4E24;&#x90E8;&#x5206;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x5E76;&#x4E0D;&#x662F;&#x6574;&#x4F53;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#xFF0C;&#x8FD8;&#x6709;&#x53EF;&#x80FD;&#x5B58;&#x5728;<script type="math/tex">P_L</script>&#x4E2D;&#x7684;&#x70B9;&#x8DDD;<script type="math/tex">P_R</script>&#x4E2D;&#x7684;&#x70B9;&#x5C0F;&#x4E8E;&#x4E24;&#x90E8;&#x5206;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x3002; </p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_Closest-Pair-of-Points-2.JPG" alt="Closest-Pair-of-Points-2"></p><p>&#x5047;&#x8BBE;&#x4E24;&#x90E8;&#x5206;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x4E3A;d&#xFF0C;&#x90A3;&#x4E48;&#x8FD8;&#x8981;&#x6C42;&#x6240;&#x6709;&#x8DDD;&#x5206;&#x5272;&#x7EBF;d&#x5185;&#x7684;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;CLOSEST-PAIR-OF-POINTS(points,n)  if n &lt;= 3    return BRUTE-FORCE(points,n)  let mid = n / 2  Point midPoint = points[mid]  let dl = CLOSEST-PAIR-OF-POINTS(points,mid)    let dr = CLOSEST-PAIR-OF-POINTS(points+mid,n-mid)    let d = min(dl,dr)    let strip be new Array  let j = 0  for i from 1 to n    if abs(points[i].x - midPoint.x) &lt;= d      append points[i] to strip      ++j  end  return min(d,STRIP-CLOSET(strip,j,d))STRIP-CLOSET(strip,n,d)  let min = d  qsort(strip)  for i from 1 to n    for j from i+1 to n and strip[i].y - strip[j].y &lt; min      if DistanceOfPoints(strip[i],strip[j]) &lt; min        min = DistanceOfPoints(strip[i], strip[j])    end  end  return min</code></pre><p>&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x8FD8;&#x6709;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;STRIP-CLOSET&#x91CC;&#x9762;&#x6709;&#x4E2A;&#x53CC;&#x5C42;for&#x5FAA;&#x73AF;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5185;&#x5C42;&#x5FAA;&#x73AF;&#x6700;&#x591A;&#x6267;&#x884C;6&#x6B21;&#x3002;</p><p>&#x4EE5;&#x4E0B;&#x662F;&#x51E0;&#x4F55;&#x8BC1;&#x660E;&#xFF1A;</p><blockquote><p>&#x505A;&#x70B9;p&#x7684;y&#x5750;&#x6807;&#x7684;&#x5E73;&#x884C;&#x7EBF;&#xFF0C;&#x4EE5;&#x6784;&#x9020;&#x51FA;&#x5BBD;&#x4E3A;d&#xFF0C;&#x957F;&#x4E3A;2d&#x7684;&#x533A;&#x57DF;R&#xFF0C;&#x4F7F;&#x5F97;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x8DDD;&#x70B9;p&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;d&#x7684;&#x70B9;&#x90FD;&#x5728;&#x5176;&#x4E2D;&#x3002;</p><p>&#x518D;&#x5C06;&#x533A;&#x57DF;R&#x5212;&#x5206;&#x6210;6&#x4E2A;&#x7B49;&#x5927;&#x5C0F;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x5185;&#x7684;&#x6700;&#x5927;&#x70B9;&#x8DDD;&#x79BB;&#x4E3A;5d/6&#x3002;&#x5DF2;&#x77E5;&#x6240;&#x6709;&#x533A;&#x57DF;R&#x4E2D;&#x7684;&#x70B9;&#x4E4B;&#x95F4;&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;d&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;6&#x4E2A;&#x7B49;&#x5927;&#x5C0F;&#x7684;&#x533A;&#x57DF;&#x90FD;&#x6700;&#x591A;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x70B9;&#x3002;&#x56E0;&#x4E3A;&#x8DDD;&#x70B9;p&#x8DDD;&#x79BB;&#x5C0F;&#x4E8E;d&#x7684;&#x70B9;&#x90FD;&#x5728;&#x533A;&#x57DF;R&#x4E2D;&#xFF0C;&#x533A;&#x57DF;R&#x5305;&#x542B;&#x7684;&#x70B9;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;6&#x4E2A;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x8DDD;&#x70B9;p&#x5C0F;&#x4E8E;d&#x7684;&#x70B9;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;6&#x4E2A;&#x3002;&#x5373;&#x5185;&#x5C42;&#x5FAA;&#x73AF;&#x6700;&#x591A;&#x6267;&#x884C;6&#x6B21;&#x3002;</p></blockquote><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_Closest-Pair-of-Points-3.JPG" alt="&#x6700;&#x8FD1;&#x70B9;&#x5BF9;&#x95EE;&#x9898;"></p><script type="math/tex; mode=display">时间复杂度：T(n)=2T(\frac{n}{2})+n+\log_{2}{n}+n=O(n\log_{2}{n}\log_{2}{n})</script><h2 id="&#x72B6;&#x6001;&#x8F6C;&#x79FB;"><a href="#&#x72B6;&#x6001;&#x8F6C;&#x79FB;" class="headerlink" title="&#x72B6;&#x6001;&#x8F6C;&#x79FB;"></a>&#x72B6;&#x6001;&#x8F6C;&#x79FB;</h2><p>&#x4ECE;&#x672C;&#x8D28;&#x4E0A;&#x8BB2;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#xFF0C;&#x662F;&#x5148;&#x628A;&#x95EE;&#x9898;&#x8868;&#x8FF0;&#x6210;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF0C;&#x72B6;&#x6001;&#x5C31;&#x662F;&#x62BD;&#x8C61;&#x5316;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x3002;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x8F6C;&#x79FB;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF0C;&#x76F4;&#x5230;&#x67D0;&#x4E2A;&#x6240;&#x6C42;&#x72B6;&#x6001;&#x3002;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;&#x5B58;&#x50A8;&#x4E86;&#x591A;&#x5C11;&#x72B6;&#x6001;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;&#x8FDB;&#x884C;&#x4E86;&#x591A;&#x5C11;&#x6B21;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x62FF;&#x7ECF;&#x5178;&#x7684;&#x673A;&#x5668;&#x4EBA;&#x8D70;&#x683C;&#x5B50;&#x4E3E;&#x4F8B;&#xFF0C;&#x673A;&#x5668;&#x4EBA;&#x4E00;&#x5F00;&#x59CB;&#x5728;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x662F;&#x4E2A;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x53EF;&#x4EE5;&#x5411;&#x53F3;&#x3001;&#x5411;&#x4E0B;&#x8D70;&#xFF0C;&#x90A3;&#x4E48;&#x5411;&#x53F3;&#x548C;&#x5411;&#x4E0B;&#x8D70;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x8F6C;&#x79FB;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x6C42;&#x5230;&#x8FBE;&#x53F3;&#x4E0B;&#x89D2;&#x6700;&#x5C11;&#x8D70;&#x591A;&#x5C11;&#x6B65;&#xFF0C;&#x90A3;&#x4E48;&#x53F3;&#x4E0B;&#x89D2;&#x5C31;&#x662F;&#x6240;&#x6C42;&#x72B6;&#x6001;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x4ECE;&#x4E0D;&#x540C;&#x65F6;&#x523B;&#x5C06;&#x72B6;&#x6001;&#x5212;&#x5206;&#x9636;&#x6BB5;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x673A;&#x5668;&#x4EBA;&#x4ECE;&#x5DE6;&#x4E0A;&#x89D2;&#x8D70;&#x7684;&#x5411;&#x53F3;&#x548C;&#x5411;&#x4E0B;&#x7684;&#x72B6;&#x6001;&#x90FD;&#x662F;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x9636;&#x6BB5;&#xFF0C;&#x8D70;&#x5230;&#x65B0;&#x683C;&#x5B50;&#x540E;&#xFF0C;&#x518D;&#x5411;&#x53F3;&#x5411;&#x4E0B;&#x8D70;&#x7684;&#x72B6;&#x6001;&#x53C8;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x9636;&#x6BB5;&#x3002;&#x9636;&#x6BB5;&#x4E5F;&#x5C31;&#x5305;&#x62EC;&#x4E86;&#x6B64;&#x65F6;&#x523B;&#x4E0B;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x72B6;&#x6001;&#x3002;</p><p>&#x6C42;&#x89E3;&#x95EE;&#x9898;&#x5C31;&#x8868;&#x8FF0;&#x6210;&#x524D;&#x4E00;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5230;&#x540E;&#x4E00;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6C42;&#x9636;&#x6BB5;&#x3002;&#x5C06;&#x95EE;&#x9898;&#x8868;&#x8FF0;&#x6210;&#x4E86;&#x72B6;&#x6001;&#x548C;&#x9636;&#x6BB5;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x66F4;&#x52A0;&#x4ECE;&#x672C;&#x8D28;&#x4E0A;&#x7406;&#x89E3;&#x641C;&#x7D22;&#x3001;&#x52A8;&#x89C4;&#x3001;&#x8D2A;&#x5FC3;&#x4E86;&#x3002;</p><p>&#x8FD8;&#x62FF;&#x673A;&#x5668;&#x4EBA;&#x8D70;&#x683C;&#x5B50;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x53EF;&#x4EE5;&#x5411;&#x4E0A;&#x3001;&#x5411;&#x4E0B;&#x3001;&#x5411;&#x5DE6;&#x3001;&#x5411;&#x53F3;&#x8D70;&#xFF0C;&#x6C42;&#x5230;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;&#x6C42;&#x89E3;&#xFF0C;&#x8981;&#x5C06;&#x6240;&#x6709;&#x6709;&#x53EF;&#x80FD;&#x7684;&#x8DEF;&#x5F84;&#x90FD;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#xFF0C;&#x524D;&#x9762;&#x9636;&#x6BB5;&#x8FDB;&#x884C;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5BF9;&#x540E;&#x9762;&#x6240;&#x6709;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x90FD;&#x6709;&#x5F71;&#x54CD;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x8DEF;&#x5F84;&#x4E0D;&#x540C;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4ECE;&#x524D;&#x9762;&#x67D0;&#x4E2A;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x9700;&#x8981;&#x4F9D;&#x6B21;&#x8F6C;&#x79FB;&#x5230;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x518D;&#x8F6C;&#x79FB;&#x5230;&#x6240;&#x6C42;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x641C;&#x7D22;&#xFF0C;&#x5305;&#x62EC;&#x6DF1;&#x641C;&#x548C;&#x5E7F;&#x641C;&#x3002;<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x641C;&#x7D22;&#x72B6;&#x6001;&#x8F6C;&#x79FB;.JPG" alt="&#x641C;&#x7D22;&#x72B6;&#x6001;&#x8F6C;&#x79FB;"><br>&#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#x6709;&#x963B;&#x788D;&#x7269;&#xFF0C;&#x673A;&#x5668;&#x4EBA;&#x8D70;&#x8FC7;&#x51E0;&#x6B65;&#x540E;&#xFF0C;&#x65E0;&#x8BBA;&#x600E;&#x4E48;&#x8D70;&#x4E5F;&#x5230;&#x4E0D;&#x4E86;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x8FD9;&#x65F6;&#x673A;&#x5668;&#x4EBA;&#x5C31;&#x8981;&#x56DE;&#x9000;&#x5230;&#x4E0A;&#x4E00;&#x6B65;&#xFF0C;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x8D70;&#x6CD5;&#x53BB;&#x6C42;&#x89E3;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x56DE;&#x6EAF;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x56DE;&#x9000;&#x72B6;&#x6001;&#x3002;<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x56DE;&#x6EAF;&#x72B6;&#x6001;&#x8F6C;&#x79FB;.JPG" alt="&#x56DE;&#x6EAF;&#x72B6;&#x6001;&#x8F6C;&#x79FB;"><br>&#x5982;&#x679C;&#x673A;&#x5668;&#x4EBA;&#x53EA;&#x80FD;&#x5411;&#x53F3;&#x3001;&#x5411;&#x4E0B;&#x8D70;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8D70;&#x5230;&#x67D0;&#x4E2A;&#x683C;&#x5B50;&#x53EA;&#x80FD;&#x4ECE;&#x4E0A;&#x9762;&#x683C;&#x5B50;&#x8D70;&#x8FC7;&#x6765;&#x6216;&#x8005;&#x4ECE;&#x53F3;&#x8FB9;&#x683C;&#x5B50;&#x8D70;&#x8FC7;&#x6765;&#xFF0C;&#x4F60;&#x4E0D;&#x9700;&#x8981;&#x6C42;&#x89E3;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#xFF0C;&#x53EA;&#x8981;&#x4ECE;&#x5230;&#x5DE6;&#x8FB9;&#x683C;&#x5B50;&#x7684;&#x8DEF;&#x5F84;&#x548C;&#x5230;&#x4E0A;&#x9762;&#x683C;&#x5B50;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E24;&#x6761;&#x8DEF;&#x5F84;&#x4E2D;&#x9009;&#x62E9;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6B64;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x53EA;&#x53D7;&#x5230;&#x4E0A;&#x67D0;&#x4E2A;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x5176;&#x4ED6;&#x4EE5;&#x524D;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x90FD;&#x5DF2;&#x7ECF;&#x8F6C;&#x79FB;&#x597D;&#x4E86;&#xFF0C;&#x4F60;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x4EE5;&#x524D;&#x6240;&#x6709;&#x9636;&#x6BB5;&#x5982;&#x4F55;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x3002;&#x5373;&#x6B64;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x4ECE;&#x4E0A;&#x67D0;&#x4E2A;&#x9636;&#x6BB5;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x4E0D;&#x9700;&#x518D;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#xFF0C;&#x4E5F;&#x53EB;&#x4F5C;&#x65E0;&#x540E;&#x503E;&#x6027;&#x3002;&#x800C;&#x6B64;&#x9636;&#x6BB5;&#x6700;&#x4F18;&#x72B6;&#x6001;&#x53EF;&#x4EE5;&#x4ECE;&#x524D;&#x9762;&#x67D0;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x6700;&#x4F18;&#x72B6;&#x6001;&#x83B7;&#x5F97;&#x53EB;&#x505A;&#x6700;&#x4F18;&#x5B50;&#x7ED3;&#x6784;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x52A8;&#x6001;&#x89C4;&#x5212;&#x72B6;&#x6001;&#x8F6C;&#x79FB;.JPG" alt="&#x52A8;&#x6001;&#x89C4;&#x5212;&#x72B6;&#x6001;&#x8F6C;&#x79FB;"><br>&#x8D2A;&#x5FC3;&#x5C31;&#x662F;&#x5728;&#x52A8;&#x89C4;&#x4E0A;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x9650;&#x5236;&#xFF0C;&#x6B64;&#x9636;&#x6BB5;&#x7684;&#x6700;&#x4F18;&#x72B6;&#x6001;&#x53EA;&#x80FD;&#x7531;&#x4E0A;&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x6700;&#x4F18;&#x72B6;&#x6001;&#x5F97;&#x5230;&#x3002;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x80FD;&#x7528;&#x8D2A;&#x5FC3;&#x89E3;&#x51B3;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x4E00;&#x5B9A;&#x80FD;&#x7528;&#x52A8;&#x89C4;&#x89E3;&#x51B3;&#xFF0C;&#x4E0D;&#x8FC7;&#x53EF;&#x80FD;&#x8981;&#x9EBB;&#x70E6;&#x7684;&#x591A;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5C06;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#x8868;&#x8FF0;&#x6210;&#x72B6;&#x6001;&#x548C;&#x9636;&#x6BB5;&#x540E;&#xFF0C;&#x4E0D;&#x540C;&#x7B97;&#x6CD5;&#x7684;&#x533A;&#x522B;&#x5C31;&#x5728;&#x4E8E;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7684;&#x7279;&#x5F81;&#x3002;<br><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x8D2A;&#x5FC3;&#x72B6;&#x6001;&#x8F6C;&#x79FB;.JPG" alt="&#x8D2A;&#x5FC3;&#x72B6;&#x6001;&#x8F6C;&#x79FB;"></p><h2 id="&#x56DE;&#x6EAF;"><a href="#&#x56DE;&#x6EAF;" class="headerlink" title="&#x56DE;&#x6EAF;"></a>&#x56DE;&#x6EAF;</h2><p>&#x56DE;&#x6EAF;=&#x6DF1;&#x641C;+&#x754C;&#x9650;&#x6761;&#x4EF6;&#x6216;&#x8005;&#x8BF4;&#x6536;&#x655B;&#x6761;&#x4EF6;&#x3002;&#x56DE;&#x6EAF;&#x662F;&#x5EFA;&#x7ACB;&#x5728;&#x6DF1;&#x641C;&#x4E4B;&#x4E0A;&#x7684;&#xFF0C;&#x56DE;&#x6EAF;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x5C31;&#x662F;&#x5728;&#x6DF1;&#x641C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x57FA;&#x7840;&#x4E0A;&#x518D;&#x52A0;&#x4E0A;&#x56DE;&#x9000;&#x5230;&#x4E0A;&#x6B65;&#x72B6;&#x6001;&#x3002;&#x56DE;&#x6EAF;&#x4F1A;&#x8868;&#x73B0;&#x51FA;&#x679D;&#x526A;&#xFF0C;&#x4F46;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E0D;&#x662F;&#x56DE;&#x6EAF;&#x7684;&#x672C;&#x8D28;&#x3002;&#x56DE;&#x6EAF;&#x9047;&#x5230;&#x754C;&#x9650;&#x6761;&#x4EF6;&#x5C31;&#x4F1A;&#x89E6;&#x53D1;&#x72B6;&#x6001;&#x56DE;&#x9000;&#x3002;&#x5373;&#x6C42;&#x89E3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x72B6;&#x6001;&#x56DE;&#x9000;&#x53D1;&#x751F;&#x5728;&#x5F53;&#x524D;&#x6C42;&#x89E3;&#x5931;&#x8D25;&#x4EE5;&#x540E;&#x3002;</p><pre><code class="lang-c">&#x56DE;&#x6EAF;&#x591A;&#x89E3;&#x6A21;&#x677F;&#xFF1A;FindSolution(n,other params)  if find a soltion    solutionCount++    return  for val from first to last    if isValid(val,n)      appendValue(val,n)      FindSolution(n+1,other params)      removeValue(val,n)  end&#x56DE;&#x6EAF;&#x5355;&#x89E3;&#x6A21;&#x677F;&#xFF1A;FindSolution(n,other params)  if find a soltion    return true  for val from first to last    if isValid(val,n)      appendValue(val,n)      if FindSolution(n+1,other params)        return true      removeValue(val,n)   end  return false</code></pre><ul><li>&#x9A91;&#x58EB;&#x5DE1;&#x6E38;(Knight&#x2019;s-Tour)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;n&#x4E58;&#x4EE5;n&#x7684;&#x68CB;&#x76D8;&#xFF0C;&#x4E00;&#x53EA;&#x56FD;&#x9645;&#x8C61;&#x68CB;&#x7684;&#x9A91;&#x58EB;&#x4ECE;&#x5DE6;&#x4E0B;&#x89D2;&#x3002;&#x9A91;&#x58EB;&#x53EF;&#x4EE5;&#x6A2A;&#x5411;&#x8DF3;&#x52A8;&#x4E00;&#x683C;&#x7EB5;&#x5411;&#x8DF3;&#x52A8;&#x4E24;&#x683C;&#xFF0C;&#x6216;&#x8005;&#x6A2A;&#x5411;&#x8DF3;&#x52A8;&#x4E00;&#x683C;&#x7EB5;&#x5411;&#x8DF3;&#x52A8;&#x4E24;&#x683C;&#x3002;&#x6C42;&#x9A91;&#x58EB;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x8DF3;&#x5230;&#x6240;&#x6709;&#x683C;&#x5B50;&#x3002;</p><p>&#x9A91;&#x58EB;&#x6BCF;&#x6B65;&#x6709;&#x516B;&#x79CD;&#x8DF3;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x9A91;&#x58EB;&#x4E00;&#x76F4;&#x5411;&#x672A;&#x5230;&#x8FBE;&#x8FC7;&#x7684;&#x683C;&#x5B50;&#x8DF3;&#xFF0C;&#x76F4;&#x5230;&#x8DF3;&#x5B8C;&#x6240;&#x6709;&#x80FD;&#x5230;&#x8FBE;&#x7684;&#x683C;&#x5B50;&#x3002;&#x5982;&#x679C;&#x80FD;&#x8FBE;&#x5230;&#x7684;&#x683C;&#x5B50;&#x4E0D;&#x662F;&#x5168;&#x90E8;&#x7684;&#x683C;&#x5B50;&#xFF0C;&#x8FD9;&#x65F6;&#xFF0C;&#x56DE;&#x9000;&#x72B6;&#x6001;&#x8FD8;&#x53EF;&#x4EE5;&#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x6B65;&#x7EE7;&#x7EED;&#x6C42;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x56DE;&#x6EAF;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x6C42;&#x89E3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;xMove&#x8868;&#x793A;&#x6A2A;&#x5411;&#x80FD;&#x591F;&#x79FB;&#x52A8;&#x7684;&#x65B9;&#x5411;&#x3002;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;yMove&#x8868;&#x793A;&#x7EB5;&#x5411;&#x80FD;&#x591F;&#x79FB;&#x52A8;&#x7684;&#x65B9;&#x5411;&#x3002;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;table&#x8868;&#x793A;&#x8DF3;&#x5230;&#x8FC7;&#x7684;&#x683C;&#x5B50;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;KNIGHTS-TOUR(x,y,xMove,yMove,table,n,count)  if count == n    return true  for i from 1 to 8    let next_x = x + xMove[i]    let next_y = y + yMove[i]    if validPos(next_x,next_y,table,n)      table[next_x][next_y] = 1      if KNIGHTS-TOUR(next_x,next_y,xMove,yMove,table,n,count+1)        return true      table[next_x][next_y] = -1  end  return falsevalidPos(x,y,table,n)  if x &gt; 0 &amp;&amp; x &lt; n &amp;&amp; y &gt; 0 &amp;&amp; y &lt; n &amp;&amp; table[x][y] == -1    return true  return false</code></pre><ul><li>N&#x7687;&#x540E;&#x95EE;&#x9898;(N-Queens)</li></ul><p>&#x6C42;&#x51FA;&#x4E00;&#x4E2A;n&#x4E58;&#x4EE5;n&#x7684;&#x68CB;&#x76D8;&#xFF0C;&#x5728;&#x68CB;&#x76D8;&#x4E0A;&#x653E;n&#x4E2A;&#x7687;&#x540E;&#x3002;&#x7687;&#x540E;&#x4F1A;&#x5403;&#x6389;&#x540C;&#x4E00;&#x884C;&#x3001;&#x540C;&#x4E00;&#x5217;&#x3001;&#x540C;&#x4E00;&#x659C;&#x7EBF;&#x7684;&#x5176;&#x4ED6;&#x7687;&#x540E;&#x3002;&#x6C42;&#x6709;&#x591A;&#x5C11;&#x79CD;&#x653E;&#x6CD5;&#x3002;</p><p>&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x4E2D;&#x67D0;&#x4E00;&#x5217;&#x653E;&#x4E00;&#x4E2A;&#x7687;&#x540E;&#xFF0C;&#x7136;&#x540E;&#x5230;&#x4E0B;&#x4E00;&#x884C;&#x4E0D;&#x4F1A;&#x88AB;&#x5403;&#x6389;&#x7684;&#x4F4D;&#x7F6E;&#x653E;&#x4E00;&#x4E2A;&#x7687;&#x540E;&#xFF0C;&#x76F4;&#x5230;&#x653E;&#x5230;&#x6700;&#x540E;&#x4E00;&#x884C;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x56DE;&#x9000;&#x72B6;&#x6001;&#x8FD8;&#x53EF;&#x4EE5;&#x5728;&#x6700;&#x540E;&#x4E00;&#x884C;&#x7EE7;&#x7EED;&#x6C42;&#x5176;&#x4ED6;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x56DE;&#x6EAF;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x6C42;&#x89E3;&#x7684;&#x65F6;&#x5019;&#x6709;&#x4E9B;&#x7F16;&#x7A0B;&#x6280;&#x5DE7;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;queens&#x8868;&#x793A;&#x5DF2;&#x653E;&#x7684;&#x7687;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;N-Queens(queens,total,irow,n)  if irow == n    total = total + 1    return  for i from 1 to n    if validPos(queens,irow,i)      add i to queens      N-Queens(queens,total,irow+1,n)      remove last element from queens  endvalidPos(queens,irow,icol)  if irow &lt; queens.length    return false  for i from 1 to queens.length    if queens[i] == icol || abs(irow-i) == abs(icol-queens[i])      return false  end  return true</code></pre><ul><li>&#x6C49;&#x5BC6;&#x987F;&#x56DE;&#x8DEF;(Hamiltonian-Cycle)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x5F20;&#x65E0;&#x5411;&#x56FE;&#xFF0C;&#x6C49;&#x5BC6;&#x987F;&#x56DE;&#x8DEF;&#x5B9A;&#x4E49;&#x4E3A;&#x4EC5;&#x904D;&#x5386;&#x6240;&#x6709;&#x8282;&#x70B9;&#x4E00;&#x6B21;&#x5F62;&#x6210;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x52A0;&#x4E0A;&#x8DEF;&#x5F84;&#x7684;&#x9996;&#x8282;&#x70B9;&#x548C;&#x5C3E;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x7684;&#x8FB9;&#x3002;&#x6C42;&#x7ED9;&#x51FA;&#x7684;&#x56FE;&#x662F;&#x5426;&#x5B58;&#x5728;&#x6C49;&#x5BC6;&#x987F;&#x56DE;&#x8DEF;&#x3002;</p><p>&#x4ECE;&#x4EFB;&#x610F;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x904D;&#x5386;&#x5176;&#x4E34;&#x63A5;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x4E0D;&#x904D;&#x5386;&#x91CD;&#x590D;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x76F4;&#x5230;&#x904D;&#x5386;&#x6240;&#x6709;&#x8282;&#x70B9;&#x5C31;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x904D;&#x5386;&#x6240;&#x6709;&#x8282;&#x70B9;&#x4E00;&#x6B21;&#x5F62;&#x6210;&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x8FDE;&#x63A5;&#x9996;&#x5C3E;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x56DE;&#x9000;&#x72B6;&#x6001;&#x8FD8;&#x53EF;&#x4EE5;&#x5728;&#x8DEF;&#x5F84;&#x4E0A;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x8282;&#x70B9;&#x7EE7;&#x7EED;&#x6C42;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x56DE;&#x6EAF;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x6C42;&#x89E3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7528;path&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#x8868;&#x793A;&#x904D;&#x5386;&#x7ECF;&#x8FC7;&#x7684;&#x8282;&#x70B9;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;HAMILTONIAN-CYCLE(graph,path,n,pos)  if pos == n    if graph[path[0]][path[pos-1]] == 1      return true    else       return false  for v from 1 to n    if validPos(graph,path,v,pos)      path[pos] = v      if HAMILTONIAN-CYCLE(graph,path,n,pos+1) == true        return true      path[pos] = -1  end  return falsevalidPos(graph,path,v,pos)  if graph[pos-1][v] == 0    return false  for i from 1 to pos    if path[i] == v      return false  end  return true</code></pre><ul><li>&#x56FE;&#x7684;&#x7740;&#x8272;&#x95EE;&#x9898;(M-Coloring Problem)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x5F20;&#x65E0;&#x5411;&#x56FE;&#x548C;m&#x79CD;&#x989C;&#x8272;&#xFF0C;&#x5411;&#x56FE;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x7740;&#x8272;&#xFF0C;&#x7740;&#x8272;&#x8981;&#x6C42;&#x4E3A;&#x4E34;&#x63A5;&#x7684;&#x8282;&#x70B9;&#x4E0D;&#x80FD;&#x7740;&#x4E0A;&#x540C;&#x79CD;&#x989C;&#x8272;&#xFF0C;&#x6C42;m&#x79CD;&#x989C;&#x8272;&#x662F;&#x5426;&#x80FD;&#x6EE1;&#x8DB3;&#x7740;&#x8272;&#x8981;&#x6C42;&#x3002;</p><p>&#x6328;&#x4E2A;&#x7ED9;&#x8282;&#x70B9;&#x7740;&#x8272;&#xFF0C;&#x7ED9;&#x8282;&#x70B9;&#x7740;&#x8272;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7740;&#x975E;&#x4E34;&#x63A5;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x8282;&#x70B9;&#x90FD;&#x88AB;&#x7740;&#x4E0A;&#x989C;&#x8272;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x6240;&#x6709;&#x989C;&#x8272;&#x90FD;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x7740;&#x8272;&#x8981;&#x6C42;&#xFF0C;&#x56DE;&#x9000;&#x72B6;&#x6001;&#x8FD8;&#x53EF;&#x4EE5;&#x5728;&#x4E0A;&#x4E2A;&#x8282;&#x70B9;&#x66F4;&#x6362;&#x7740;&#x7684;&#x989C;&#x8272;&#x7EE7;&#x7EED;&#x6C42;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x56DE;&#x6EAF;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x6C42;&#x89E3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;colors&#x8868;&#x793A;&#x8282;&#x70B9;&#x5DF2;&#x7740;&#x7684;&#x989C;&#x8272;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;M-COLORING-PROBLEM(graph,colors,m,n,v)  if v == n    return true  for c from 1 to m    if validPos(graph,colors,c,v,n)      colors[v] = c      if M-COLORS-PROBLEM(graph,colors,m,n,v+1)        return true      colors[v] = -1  end  return falsevalidPos(graph,colors,c,v,n)  for i from 1 to n    if graph[v][i] &amp;&amp; c == colors[i]      return false  end  return true</code></pre><h2 id="&#x52A8;&#x6001;&#x89C4;&#x5212;"><a href="#&#x52A8;&#x6001;&#x89C4;&#x5212;" class="headerlink" title="&#x52A8;&#x6001;&#x89C4;&#x5212;"></a>&#x52A8;&#x6001;&#x89C4;&#x5212;</h2><p>&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6709;&#x591A;&#x79CD;&#x7406;&#x89E3;&#x65B9;&#x5F0F;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x5C31;&#x662F;&#x5C06;&#x539F;&#x95EE;&#x9898;&#x5212;&#x5206;&#x5230;&#x89C4;&#x6A21;&#x6700;&#x5C0F;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x6C42;&#x89E3;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5B50;&#x95EE;&#x9898;&#x6700;&#x4F18;&#x89E3;&#x8BB0;&#x4E0B;&#x6765;&#xFF0C;&#x589E;&#x5927;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x76F4;&#x9012;&#x63A8;&#x5230;&#x539F;&#x95EE;&#x9898;&#x3002;&#x52A8;&#x89C4;&#x5206;&#x4E3A;top-down and memoization&#x548C;bottom-up&#x6C42;&#x89E3;&#x65B9;&#x5F0F;&#x3002;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x82F1;&#x6587;&#x540D;&#x5B57;&#x53EB;&#x505A;Dynamic Programming&#xFF0C;&#x7FFB;&#x8BD1;&#x6210;&#x4E2D;&#x6587;&#x66F4;&#x5E94;&#x8BE5;&#x7FFB;&#x8BD1;&#x6210;&#x52A8;&#x6001;&#x683C;&#x5B50;&#x6CD5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x683C;&#x5B50;&#x5C31;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x5907;&#x5FD8;&#xFF0C;&#x7F13;&#x5B58;&#x6C42;&#x89E3;&#x8FC7;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x7136;&#x540E;&#x8282;&#x7701;&#x91CD;&#x590D;&#x6C42;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x6211;&#x4E00;&#x76F4;&#x7406;&#x89E3;&#x5212;&#x5206;&#x5B50;&#x95EE;&#x9898;+&#x5907;&#x5FD8;&#x662F;&#x52A8;&#x89C4;&#x7684;&#x6838;&#x5FC3;&#x3002;</p><p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4E0A;&#x9762;&#x6240;&#x8BB2;&#x5230;&#x7684;&#x90FD;&#x662F;&#x624B;&#x6BB5;&#xFF0C;&#x6CA1;&#x4ECE;&#x672C;&#x8D28;&#x4E0A;&#x7406;&#x89E3;&#x52A8;&#x89C4;&#x3002;&#x8FD8;&#x662F;&#x8981;&#x4ECE;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x53BB;&#x7406;&#x89E3;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002;&#x7406;&#x89E3;&#x52A8;&#x89C4;&#x5B9E;&#x9645;&#x4E0A;&#x6709;&#x4E24;&#x79CD;&#x89D2;&#x5EA6;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x5212;&#x5206;&#x9636;&#x6BB5;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x4E0D;&#x5212;&#x5206;&#x9636;&#x6BB5;&#x3002;&#x5206;&#x9636;&#x6BB5;&#x662F;&#x4E3A;&#x4E86;&#x66F4;&#x660E;&#x786E;&#x7684;&#x8868;&#x8FBE;&#x51FA;&#x65E0;&#x540E;&#x503E;&#x6027;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5206;&#x9636;&#x6BB5;&#xFF0C;&#x540E;&#x65E0;&#x6548;&#x6027;&#x7684;&#x4FE1;&#x606F;&#x5C31;&#x8981;&#x653E;&#x5230;&#x6BCF;&#x4E2A;&#x72B6;&#x6001;&#x4E2D;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x6240;&#x6709;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x95EE;&#x9898;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x6240;&#x6709;&#x72B6;&#x6001;&#x8F6C;&#x5316;&#x4E3A;&#x4E00;&#x5F20;&#x56FE;&#x3002;&#x6C42;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x6C42;&#x521D;&#x59CB;&#x72B6;&#x6001;&#x548C;&#x6700;&#x7EC8;&#x72B6;&#x6001;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x5C31;&#x5C06;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x6210;&#x4E86;&#x6C42;&#x56FE;&#x7684;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002;Youtube&#x4E0A;&#x7B97;&#x5BFC;&#x7684;&#x8BFE;&#x4E0A;&#x548C;&#x666E;&#x6797;&#x65AF;&#x987F;&#x7684;&#x8BFE;&#x4EF6;&#x4E0A;&#x90FD;&#x63D0;&#x5230;&#x4E86;&#x8FD9;&#x79CD;&#x7406;&#x89E3;&#x65B9;&#x5F0F;&#x3002;&#x4E0A;&#x9762;&#x4E24;&#x79CD;&#x7406;&#x89E3;&#x65B9;&#x5F0F;&#x90FD;&#x6CA1;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x504F;&#x5411;&#x4ECE;&#x7B2C;&#x4E00;&#x79CD;&#x7406;&#x89E3;&#xFF0C;&#x8FD9;&#x6837;&#x66F4;&#x65B9;&#x4FBF;&#x7406;&#x89E3;&#x641C;&#x7D22;&#x548C;&#x8D2A;&#x5FC3;&#x3002;</p><p>&#x7406;&#x89E3;&#x4E86;&#x52A8;&#x89C4;&#x540E;&#xFF0C;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x80FD;&#x627E;&#x5230;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x662F;&#x5426;&#x80FD;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x627E;&#x51FA;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#x5C31;&#x80FD;&#x901A;&#x8FC7;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6C42;&#x51FA;&#x89E3;&#x4E86;&#x3002;&#x7136;&#x800C;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x8FD8;&#x662F;&#x86EE;&#x56F0;&#x96BE;&#x7684;&#x3002;&#x5BF9;&#x4E8E;&#x6211;&#x8FD9;&#x79CD;&#x667A;&#x5546;&#x6349;&#x6025;&#x7684;&#x540C;&#x5B66;&#xFF0C;&#x53EA;&#x80FD;&#x591A;&#x591A;&#x7EC3;&#x4E60;&#x4E86;&#x3002;</p><ul><li>&#x6700;&#x957F;&#x5B50;&#x5E8F;&#x5217;&#x95EE;&#x9898;(LCS)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;m&#x7684;&#x5B57;&#x7B26;&#x4E32;x&#xFF0C;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x5B57;&#x7B26;&#x4E32;y&#xFF0C;&#x6C42;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6700;&#x957F;&#x516C;&#x5171;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6709;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;x&#x4E3A;ABCBDAB&#xFF0C;y&#x4E3A;BDCABA&#x3002;&#x73B0;&#x5728;x&#x4E2D;&#x524D;3&#x4E2A;&#x5B57;&#x6BCD;ABC&#x548C;y&#x4E2D;&#x524D;3&#x4E2A;&#x5B57;&#x6BCD;BDC&#x5BFB;&#x627E;LCS&#xFF0C;&#x8FD9;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x72B6;&#x6001;A&#xFF0C;x&#x4E2D;&#x524D;2&#x4E2A;&#x5B57;&#x6BCD;&#x548C;y&#x4E2D;&#x524D;2&#x4E2A;&#x5B57;&#x6BCD;&#x5BFB;&#x627E;LCS&#x4E3A;&#x72B6;&#x6001;B&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x7B2C;3&#x4E2A;&#x5B57;&#x6BCD;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x524D;3&#x4E2A;&#x5B57;&#x6BCD;&#x7684;LCS&#x5C31;&#x7B49;&#x4E8E;&#x524D;2&#x4E2A;&#x5B57;&#x6BCD;&#x7684;LCS&#x52A0;&#x4E00;&#xFF0C;&#x4E5F;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;A&#x53EF;&#x4EE5;&#x4ECE;&#x524D;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;B&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x5176;&#x4ED6;&#x5B57;&#x6BCD;&#x5BFB;&#x627E;LCS&#xFF0C;&#x4E5F;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x7B26;&#x5408;&#x52A8;&#x89C4;&#x7684;&#x7279;&#x5F81;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{ij}=</script>&#x6700;&#x957F;&#x516C;&#x5171;&#x5B50;&#x5E8F;&#x5217;<script type="math/tex">(x[1....i]y[1....j])</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{ij}</script>&#x4E3A;x&#x4E0B;&#x6807;&#x4E3A;i&#xFF0C;y&#x4E0B;&#x6807;&#x4E3A;j&#x65F6;&#x7684;&#x6700;&#x957F;&#x516C;&#x5171;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i,j]=\begin{equation}  \left\{               \begin{array}{lr}               dp[i-1][j-1]+1 & x[i]=y[i] \\             max(dp[i-1][j],dp[i][j-1]) & x[i]\not= y[i]\\               \end{array}  \right.  \end{equation}</script><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;LCS(x,y)  let m = x.length  let n = y.length  let dp[m][n] be new Tables  for i from 1 to m    dp[i][0] = 0  end  for j from 1 to n    dp[0][j] = 0  end  for i from 1 to m    for j from 1 to n      if x[i] == y[j]        dp[i][j] = dp[i-1][j-1] + 1      else        dp[i][j] =  max(dp[i-1][j],dp[i][j-1])    end  end  return dp[m][n]</code></pre><script type="math/tex; mode=display">时间复杂度：Θ(m*n)</script><ul><li>&#x77E9;&#x9635;&#x4E58;&#x6CD5;&#x94FE;(Matrix-Chain-Multiplication)</li></ul><p>&#x80CC;&#x666F;&#xFF1A;&#x591A;&#x4E2A;&#x77E9;&#x9635;&#x76F8;&#x4E58;&#xFF0C;&#x6839;&#x636E;&#x7ED3;&#x5408;&#x5F8B;&#x53EF;&#x4EE5;&#x968F;&#x610F;&#x4EA4;&#x6362;&#x4E58;&#x6CD5;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x8BA1;&#x7B97;&#x4EE3;&#x4EF7;&#x5374;&#x4E0D;&#x540C;&#x3002;</p><pre><code class="lang-c">&#x6BD4;&#x5982;&#x77E9;&#x9635;ABC&#x94FE;&#x4E58;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x987A;&#x5E8F;(AB)C = A(BC)&#x5047;&#x8BBE;A&#x4E3A;  10 &#xD7; 30 , B&#x4E3A; 30 &#xD7; 5 , C &#x4E3A; 5 &#xD7; 60(AB)C = (10&#xD7;30&#xD7;5) + (10&#xD7;5&#xD7;60) = 1500 + 3000 = 4500 &#x6B21;&#x8FD0;&#x7B97;A(BC) = (30&#xD7;5&#xD7;60) + (10&#xD7;30&#xD7;60) = 9000 + 18000 = 27000 &#x6B21;&#x8FD0;&#x7B97;&#x53EF;&#x89C1;&#xFF0C;&#x4E0D;&#x540C;&#x987A;&#x5E8F;&#xFF0C;&#x8BA1;&#x7B97;&#x4EE3;&#x4EF7;&#x76F8;&#x5DEE;&#x5F88;&#x5927;&#xFF0C;&#x5C3D;&#x7BA1;&#x6570;&#x5B66;&#x4E0A;&#x7B49;&#x4EF7;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E0A;&#x5E76;&#x4E0D;&#x7B49;&#x4EF7;&#x3002;</code></pre><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;<script type="math/tex">p</script>&#xFF0C;&#x4EE3;&#x8868;&#x77E9;&#x9635;<script type="math/tex">A_1</script>&#x4E00;&#x76F4;&#x94FE;&#x4E58;&#x5230;<script type="math/tex">A_n</script>&#xFF0C;&#x5143;&#x7D20;<script type="math/tex">p[i-1]</script>&#x4EE3;&#x8868;&#x77E9;&#x9635;<script type="math/tex">Ai</script>&#x7684;&#x884C;&#x6570;&#xFF0C;&#x5143;&#x7D20;<script type="math/tex">p[i]</script>&#x4EE3;&#x8868;&#x77E9;&#x9635;<script type="math/tex">A_i</script>&#x7684;&#x5217;&#x6570;&#xFF0C;&#x6C42;&#x51FA;&#x6700;&#x5C0F;&#x7684;&#x94FE;&#x4E58;&#x4EE3;&#x4EF7;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;<script type="math/tex">i</script>&#x8868;&#x793A;&#x591A;&#x4E2A;&#x77E9;&#x9635;&#x76F8;&#x4E58;&#x5F00;&#x59CB;&#x77E9;&#x9635;&#x7684;&#x6807;&#x53F7;&#xFF0C;<script type="math/tex">j</script>&#x8868;&#x793A;&#x7ED3;&#x675F;&#x77E9;&#x9635;&#x7684;&#x6807;&#x53F7;&#xFF0C;&#x73B0;&#x5728;<script type="math/tex">A_iA_j</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x4E3A;&#x72B6;&#x6001;<script type="math/tex">A</script>&#xFF0C;&#x800C;<script type="math/tex">A_iA_j</script>&#x4E4B;&#x95F4;&#x5FC5;&#x5B9A;&#x6709;&#x62EC;&#x53F7;&#xFF0C;&#x90A3;&#x4E48;<script type="math/tex">A_iA_j</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x627E;&#x4F7F;<script type="math/tex">A_iA_j</script>&#x4E4B;&#x95F4;&#x94FE;&#x4E58;&#x8D77;&#x6765;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x62EC;&#x53F7;&#x4F4D;&#x7F6E;&#x3002;&#x518D;&#x8BBE;<script type="math/tex">k</script>&#x4E3A;&#x653E;&#x62EC;&#x53F7;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8981;&#x8BA1;&#x7B97;<script type="math/tex">A_iA_k</script>&#x4E58;&#x4EE5;<script type="math/tex">A_{k+1}A_j</script>&#xFF0C;&#x800C;<script type="math/tex">A_iA_k</script>&#x548C;<script type="math/tex">A_{k+1}A_j</script>&#x4E0D;&#x5C31;&#x662F;&#x524D;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x561B;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;<script type="math/tex">A</script>&#x76F4;&#x63A5;&#x4ECE;&#x4EE5;&#x524D;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x5176;&#x4ED6;<script type="math/tex">A_mA_n</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x52A8;&#x89C4;&#x4E0D;&#x5C31;&#x89E3;&#x8D77;&#x6765;&#x4E86;&#x561B;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{ij}=</script>&#x77E9;&#x9635;&#x94FE;&#x4E58;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;<script type="math/tex">(A_i.....A_j)</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{ij}</script>&#x4E3A;<script type="math/tex">A_i</script>&#x94FE;&#x4E58;&#x5230;<script type="math/tex">A_j</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i,j]=\begin{equation}  \left\{               \begin{array}{lr}               0 & i=j \\               min(dp[i,k]+dp[k+1,j]+p_{i+1}p_kp_j)，对于k属于[i,j) & i< j\\             \end{array}  \right.  \end{equation}</script><p>&#x5728;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x8981;&#x7528;&#x5230;&#x4E2A;&#x6280;&#x5DE7;&#x3002;&#x56E0;&#x4E3A;&#x6700;&#x540E;&#x8981;&#x6C42;&#x51FA;dp[1][n]&#xFF0C;&#x8981;&#x4EE5;i&#x5230;j&#x957F;&#x5EA6;&#x9012;&#x589E;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;MATRIX-CHAIN-MULTIPLICATION(p)  let dp[n][n] be new Tables  for i from 1 to n    dp[i][i] = 1  end  for L from 2 to n    for i from 1 to n-L+1      let j = i+L-1      for k from i to j-1        dp[i][j] = min(dp[i][k]+dp[k+1][j]+p[i-1]*p[j]*p[k])      end    end  end  return dp[1][n]</code></pre><script type="math/tex; mode=display">时间复杂度：O(n^3)</script><ul><li>&#x6700;&#x4F18;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;(Optimal-BST)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5DF2;&#x6392;&#x5E8F;&#x7684;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;<script type="math/tex">p</script>&#xFF0C;&#x4EE3;&#x8868;&#x4E00;&#x7EC4;&#x641C;&#x7D22;&#x7801;&#xFF0C;&#x4E00;&#x4E2A;&#x5DF2;&#x6392;&#x5E8F;&#x7684;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;<script type="math/tex">q</script>&#xFF0C;&#x4EE3;&#x8868;&#x8FD9;&#x7EC4;&#x641C;&#x7D22;&#x7801;&#x7684;&#x641C;&#x7D22;&#x4EE3;&#x4EF7;&#x3002;&#x6C42;&#x5EFA;&#x7ACB;&#x4E00;&#x9897;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x4F7F;&#x5176;&#x641C;&#x7D22;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x3002;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x8282;&#x70B9;&#x7684;&#x641C;&#x7D22;&#x4EE3;&#x4EF7;&#x4E3A;&#x8282;&#x70B9;&#x7684;&#x9AD8;&#x4E58;&#x4EE5;&#x641C;&#x7D22;&#x7801;&#x7684;&#x641C;&#x7D22;&#x4EE3;&#x4EF7;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;<script type="math/tex">i</script>&#x8868;&#x793A;&#x6570;&#x7EC4;&#x4E2D;&#x5EFA;&#x7ACB;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x5F00;&#x59CB;&#x5143;&#x7D20;&#x7684;&#x6807;&#x53F7;&#xFF0C;<script type="math/tex">j</script>&#x8868;&#x793A;&#x6570;&#x7EC4;&#x4E2D;&#x5EFA;&#x7ACB;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7ED3;&#x675F;&#x5143;&#x7D20;&#x7684;&#x6807;&#x53F7;&#xFF0C;<script type="math/tex">i</script>&#x5230;<script type="math/tex">j</script>&#x7EC4;&#x6210;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x4E3A;&#x72B6;&#x6001;<script type="math/tex">A</script>&#x3002;&#x6C42;&#x4E00;&#x9897;&#x4E8C;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x5C31;&#x662F;&#x6C42;&#x6839;&#x8282;&#x70B9;&#x7684;&#x4EE3;&#x4EF7;&#x52A0;&#x4E0A;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#x52A0;&#x4E0A;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x3002;&#x56E0;&#x4E3A;<script type="math/tex">p</script>&#x548C;<script type="math/tex">q</script>&#x5DF2;&#x6392;&#x5E8F;&#xFF0C;&#x6C42;<script type="math/tex">p_{ij}</script>&#x5EFA;&#x7ACB;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x5C31;&#x662F;&#x6C42;<script type="math/tex">i</script>&#x5230;<script type="math/tex">j</script>&#x4E2D;&#x8C01;&#x4F5C;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x4F7F;&#x5F97;&#x6839;&#x8282;&#x70B9;&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x52A0;&#x4E0A;<script type="math/tex">i</script>&#x5230;&#x6839;&#x8282;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x52A0;&#x4E0A;&#x6839;&#x8282;&#x70B9;&#x5230;<script type="math/tex">j</script>&#x7EC4;&#x6210;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x3002;&#x5047;&#x8BBE;&#xFF0C;&#x6839;&#x8282;&#x70B9;&#x4E3A;<script type="math/tex">k</script>&#xFF0C;&#x5DE6;&#x5B50;&#x6811;&#x5C31;&#x4E3A;<script type="math/tex">p_{ik}</script>&#xFF0C;&#x53F3;&#x5B50;&#x6811;&#x4E3A;<script type="math/tex">p_{kj}</script>&#x3002;<script type="math/tex">p_{ik}</script>&#x548C;<script type="math/tex">p_{kj}</script>&#x5C31;&#x662F;&#x524D;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;<script type="math/tex">A</script>&#x76F4;&#x63A5;&#x4ECE;&#x4EE5;&#x524D;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x5176;&#x4ED6;<script type="math/tex">p_i</script>&#x5230;<script type="math/tex">p_j</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x52A8;&#x89C4;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{ij}=</script>&#x5EFA;&#x7ACB;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;<script type="math/tex">(p_i.....p_j)</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{ij}</script>&#x4E3A;&#x4ECE;<script type="math/tex">p_i</script>&#x5230;<script type="math/tex">p_j</script>&#x6240;&#x6709;&#x5143;&#x7D20;&#x5EFA;&#x7ACB;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i,j]=\sum_{k=i}^{j}q_k+min(dp[i,r-1]+dp[r+1,j])对于r在[i,j]</script><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6700;&#x4F18;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x548C;&#x77E9;&#x9635;&#x4E58;&#x6CD5;&#x94FE;&#x89E3;&#x6CD5;&#x5F88;&#x50CF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;OPTIMAL-BST(p,q,n)  let dp[n][n] be new Tables  for i from 1 to n    dp[i][i] = q[i]  end  for L from 2 to n    for i from 1 to n-L+1      let j = i+L-1      dp[i][j] = MAX_INTEGER      for r from i to j        let cost = dp[i][r-1] + dp[r+1][j] + Sum Of Q From i to j        if dp[i][j] &lt; cost          dp[i][j] = cost      end    end  end  return dp[1][n]</code></pre><script type="math/tex; mode=display">时间复杂度：O(n^3)</script><ul><li>&#x6700;&#x957F;&#x56DE;&#x6587;&#x5B50;&#x5E8F;&#x5217;(LPS)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x5B57;&#x7B26;&#x4E32;x&#xFF0C;&#x6C42;&#x8FD9;&#x4E2A;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6700;&#x957F;&#x56DE;&#x6587;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6709;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;x&#x4E3A;BBABCBCAB&#x3002;</p><p>&#x73B0;&#x5728;&#x5B50;&#x4E32;A&#x4E3A;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B57;&#x6BCD;&#x5F00;&#x59CB;&#x5230;&#x7B2C;&#x4E94;&#x4E2A;&#x5B57;&#x6BCD;&#xFF0C;&#x5176;LPS&#x4E3A;3&#xFF0C;&#x4E3A;&#x72B6;&#x6001;A&#x3002;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x7B49;&#x4E8E;&#x7B2C;&#x516D;&#x4E2A;&#x5B57;&#x6BCD;&#xFF0C;&#x90A3;&#x4E48;&#x5B50;&#x4E32;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x5230;&#x7B2C;&#x516D;&#x4E2A;&#x5B57;&#x6BCD;&#x7684;LPS&#xFF0C;&#x4E3A;&#x5B50;&#x4E32;A&#x7684;LPS&#x52A0;&#x4E0A;2&#xFF0C;&#x6B64;&#x4E3A;&#x72B6;&#x6001;B&#x3002;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;B&#x4ECE;&#x72B6;&#x6001;A&#x76F4;&#x63A5;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CA1;&#x6709;&#x66F4;&#x6539;&#x522B;&#x7684;&#x5B50;&#x4E32;&#x7684;LPS&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x52A8;&#x89C4;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{ij}=</script>&#x6700;&#x957F;&#x56DE;&#x6587;&#x5B50;&#x5E8F;&#x5217;<script type="math/tex">(x[i....j])</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{ij}</script>&#x4E3A;x&#x7684;&#x4E0B;&#x6807;&#x4ECE;i&#x5230;j&#x7684;&#x5B50;&#x4E32;&#x7684;&#x6700;&#x957F;&#x56DE;&#x6587;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i,j]=\begin{equation}  \left\{               \begin{array}{lr}               dp[i+1][j-1] & x[i]=[j] \\               max(dp[i][j-1]，dp[i+1][j])，对于k属于[i,j) & x[i]\not= x[j]\\               \end{array}  \right.  \end{equation}</script><p>LPS&#x548C;LCS&#x5F88;&#x50CF;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;LPS&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x539F;&#x4E32;&#x4E0E;&#x7FFB;&#x8F6C;&#x540E;&#x7684;&#x4E32;&#x7684;LCS&#x95EE;&#x9898;&#x3002;</p><p>&#x6B64;&#x95EE;&#x9898;&#x540C;&#x6837;&#x8981;&#x4EE5;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x5FAA;&#x73AF;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;LPS(x,n)    let dp[n][n] be new Tables  for i from 1 to n    dp[i][i] = 1  end  for L from 2 to n    for i from 1 to n-L+1      let j = i+L-1      if x[i] == x[j]        dp[i][j] = dp[i+1][j-1] + 2      else        dp[i][j] = max(dp[i][j-1], dp[i+1][j])    end  end  return dp[1][n]</code></pre><script type="math/tex; mode=display">时间复杂度：O(n^2)</script><ul><li>&#x6700;&#x957F;&#x589E;&#x957F;&#x5B50;&#x5E8F;&#x5217;(LIS)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x6570;&#x7EC4;x&#xFF0C;&#x6C42;&#x6570;&#x7EC4;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x589E;&#x957F;&#x5B50;&#x5E8F;&#x5217;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6709;&#x6570;&#x7EC4;10&#x3001;22&#x3001;9&#x3001;33&#x3001;21&#x3001;58&#x3001;80&#x3001;90&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x8F6C;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x6C42;&#x524D;&#x51E0;&#x4E2A;&#x6570;&#x5B57;&#x7684;LIS&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5305;&#x62EC;&#x5728;LIS&#x4E2D;&#x5C31;&#x597D;&#x6C42;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5305;&#x542B;&#x5C31;&#x96BE;&#x6C42;&#x4E86;&#x3002;&#x800C;&#x6574;&#x4E2A;&#x6570;&#x7EC4;&#x7684;LIS&#x80AF;&#x5B9A;&#x662F;&#x4EE5;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x7ED3;&#x5C3E;&#x7684;&#x3002;&#x90A3;&#x539F;&#x95EE;&#x9898;&#x5C31;&#x8F6C;&#x5316;&#x6210;&#x5148;&#x6C42;&#x89E3;&#x4EE5;&#x6240;&#x6709;&#x6570;&#x5B57;&#x7ED3;&#x5C3E;&#x7684;LIS&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x4E2D;&#x6311;&#x6700;&#x5927;&#x7684;LIS&#x3002;&#x7ECF;&#x8FC7;&#x8F6C;&#x5316;&#x540E;&#xFF0C;&#x524D;4&#x4E2A;&#x6570;&#x5B57;&#x7684;LIS&#x4E3A;4&#xFF0C;&#x4E3A;&#x72B6;&#x6001;A&#x3002;&#x524D;&#x9762;4&#x4E2A;&#x6570;&#x5B57;&#x7684;LIS&#xFF0C;&#x5C31;&#x7B49;&#x4E8E;&#x524D;&#x9762;&#x67D0;&#x4E2A;&#x5C0F;&#x4E8E;&#x7B2C;&#x56DB;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x6570;&#x7684;LIS&#x52A0;1&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x7684;LIS&#x4E3A;&#x72B6;&#x6001;B&#x3002;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;A&#x7531;&#x72B6;&#x6001;B&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CA1;&#x6709;&#x6539;&#x53D8;&#x5176;&#x4ED6;&#x6570;&#x5B57;&#x7684;LIS&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x52A8;&#x89C4;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{i}=</script>&#x6700;&#x957F;&#x589E;&#x957F;&#x5B50;&#x5E8F;&#x5217;<script type="math/tex">(x[i])</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{i}</script>&#x4E3A;&#x4EE5;<script type="math/tex">i</script>&#x4E0B;&#x6807;&#x5143;&#x7D20;&#x7ED3;&#x5C3E;&#x7684;&#x6700;&#x957F;&#x589E;&#x957F;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i]=\begin{equation}  \left\{               \begin{array}{lr}               max(1+dp[k]) & 存在k，使k<i且x[k]<x[i] \\               1 & 不存在k，使k<i且x[k]<x[i]\\               \end{array}  \right.  \end{equation}</script><p>LIS&#x8FD8;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x6210;&#x539F;&#x6570;&#x7EC4;&#x548C;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x6570;&#x7EC4;&#x7684;LCS&#x95EE;&#x9898;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;LIS(x,n)  let dp[n] be new Tables  for i from 1 to n    dp[i] = 1  end  for i from 1 to n    for k from 1 to i      if x[i] &gt; x[k] And dp[i] &lt; dp[k] + 1        dp[i] = dp[k] + 1    end  end  let res = 0  for i from 1 to n    res = max(res, dp[i])  end  return res</code></pre><script type="math/tex; mode=display">时间复杂度：O(n^2)</script><ul><li>&#x7F16;&#x8F91;&#x8DDD;&#x79BB;(Edit-Distance)</li></ul><p>&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;n&#x7684;&#x5B57;&#x7B26;&#x4E32;x&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;y&#x7684;&#x5B57;&#x7B26;&#x4E32;y&#x3002;&#x5E76;&#x4E14;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x66FF;&#x6362;&#x3001;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x6C42;&#x5C06;x&#x8F6C;&#x6362;&#x4E3A;y&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF0C;x&#x5B57;&#x7B26;&#x4E32;&#x4E3A;str1&#xFF0C;y&#x5B57;&#x7B26;&#x4E32;&#x4E3A;str2&#x3002;</p><p>&#x73B0;&#x5728;x&#x7684;&#x524D;3&#x4E2A;&#x5B57;&#x7B26;&#x7F16;&#x8F91;&#x5230;y&#x524D;3&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x4E3A;0&#xFF0C;&#x4E3A;&#x72B6;&#x6001;A&#x3002;x&#x7F16;&#x8F91;&#x5230;y&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x4E3A;&#x72B6;&#x6001;B&#xFF0C;&#x5982;&#x679C;x&#x7684;&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x548C;y&#x7684;&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x72B6;&#x6001;B&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7531;&#x72B6;&#x6001;A&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8981;&#x5BF9;x&#x7684;&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x8FDB;&#x884C;&#x66FF;&#x6362;&#x3001;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x64CD;&#x4F5C;&#x3002;&#x66FF;&#x6362;&#x7684;&#x8BDD;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x6C42;x&#x7684;&#x524D;3&#x4E2A;&#x5B57;&#x7B26;&#x7F16;&#x8F91;&#x5230;y&#x524D;3&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x52A0;&#x4E0A;&#x66FF;&#x6362;x&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x4EE3;&#x4EF7;&#x3002;&#x63D2;&#x5165;&#x7684;&#x8BDD;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x6C42;x&#x7F16;&#x8F91;&#x5230;y&#x524D;3&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x52A0;&#x4E0A;&#x63D2;&#x5165;y&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x5220;&#x9664;&#x7684;&#x8BDD;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x6C42;x&#x5F97;&#x524D;&#x4E09;&#x4E2A;&#x5B57;&#x7B26;&#x7F16;&#x8F91;&#x5230;y&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x52A0;&#x4E0A;&#x5220;&#x9664;x&#x7B2C;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x4EE3;&#x4EF7;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x6240;&#x6709;&#x60C5;&#x51B5;&#xFF0C;&#x90FD;&#x662F;&#x72B6;&#x6001;B&#x7531;&#x4E4B;&#x524D;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CA1;&#x6709;&#x6539;&#x53D8;&#x5176;&#x4ED6;&#x5B57;&#x7B26;&#x60C5;&#x51B5;&#x7684;&#x7F16;&#x8F91;&#x4EE3;&#x4EF7;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6CA1;&#x6709;&#x8F6C;&#x79FB;&#x5230;&#x5176;&#x4ED6;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B26;&#x5408;&#x52A8;&#x89C4;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x3002;</p><p>&#x5B9A;&#x4E49;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;<script type="math/tex">dp_{ij}=</script>&#x6700;&#x5C0F;&#x7F16;&#x8F91;&#x4EE3;&#x4EF7;<script type="math/tex">(x[i]y[j])</script>&#xFF0C;&#x5373;<script type="math/tex">dp_{ij}</script>&#x4E3A;x&#x7684;&#x5B50;&#x4E32;<script type="math/tex">[0,i]</script>&#x7F16;&#x8F91;&#x5230;y&#x7684;&#x5B50;&#x4E32;<script type="math/tex">[0,j]</script>&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7; &#xFF0C;&#x5219;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">dp[i]=\begin{equation}  \left\{               \begin{array}{lr}               max(1+dp[k]) & 存在k，使k<i且x[k]<x[i] \\               1 & 不存在k，使k<i且x[k]<x[i]\\               \end{array}  \right.  \end{equation}</script><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;EDIT-DISTANCE(x,y)  let n = x.length  let m = y.length  let dp[n][m] be new tables  for i from 1 to n    dp[i][0] = i  end  for j from 1 to m    dp[0][j] = j  end  for i from 1 to n    for j from 1 to m      if x[i] == y[j]        dp[i][j] = dp[i-1][j-1]      else        ICost = dp[i][j-1] + CostOfInsert(y[j])        RCost = dp[i-1][j-1] + CostOfReplace(x[i]-&gt;y[j])        DCost = dp[i-1][j] + CostOfDelete(x[i])        dp[i][j] = min(ICost,RCost,DCost)    end  end  return dp[n][m]</code></pre><script type="math/tex; mode=display">时间复杂度：Θ(m*n)</script><p>&#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#xFF0C;&#x641C;&#x7D22;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x662F;&#xFF0C;&#x4ECE;&#x524D;&#x9762;&#x67D0;&#x9636;&#x6BB5;&#x8F6C;&#x79FB;&#x5230;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x518D;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#xFF0C;&#x6C42;&#x89E3;&#x7A7A;&#x95F4;&#x5C31;&#x50CF;&#x662F;&#x6811;&#x72B6;&#x3002;&#x800C;&#x52A8;&#x89C4;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x7279;&#x5F81;&#x662F;&#xFF0C;&#x4ECE;&#x524D;&#x9762;&#x67D0;&#x9636;&#x6BB5;&#x76F4;&#x63A5;&#x201D;&#x8DF3;&#x201D;&#x201D;&#x8FC7;&#x6765;&#xFF0C;&#x6C42;&#x89E3;&#x7A7A;&#x95F4;&#x66F4;&#x50CF;&#x662F;&#x56FE;&#x72B6;&#x3002;&#x52A8;&#x89C4;&#x4ECE;&#x6839;&#x672C;&#x4E0A;&#x6539;&#x53D8;&#x4E86;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x5907;&#x5FD8;&#x7F13;&#x5B58;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#x3002;</p><h2 id="&#x8D2A;&#x5FC3;"><a href="#&#x8D2A;&#x5FC3;" class="headerlink" title="&#x8D2A;&#x5FC3;"></a>&#x8D2A;&#x5FC3;</h2><p>&#x8D2A;&#x5FC3;&#x662F;&#x79CD;&#x542F;&#x53D1;&#x5F0F;&#x7B97;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x7B97;&#x6CD5;&#x7684;&#x884C;&#x4E3A;&#x6839;&#x636E;&#x67D0;&#x6761;&#x89C4;&#x5219;&#xFF0C;&#x8FD9;&#x6761;&#x89C4;&#x5219;&#x4E5F;&#x53EB;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x3002;</p><p>&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x8BB2;&#x5230;&#x8FC7;&#xFF0C;&#x8D2A;&#x5FC3;&#x4E0E;&#x52A8;&#x89C4;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x8FD9;&#x91CC;&#x7528;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x516C;&#x5F0F;&#x53BB;&#x8868;&#x8FF0;&#x4E0B;&#x8D2A;&#x5FC3;&#x548C;&#x52A8;&#x89C4;&#x7684;&#x5173;&#x7CFB;&#xFF1A;</p><script type="math/tex; mode=display">greed[i]=greed[i-1]+greedChoice</script><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8D2A;&#x5FC3;&#x7684;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x53EF;&#x4EE5;&#x7B97;&#x662F;&#x52A8;&#x89C4;&#x7684;&#x53D8;&#x79CD;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8D2A;&#x5FC3;&#x548C;&#x52A8;&#x89C4;&#x96BE;&#x9053;&#x5C31;&#x6CA1;&#x6709;&#x4E0D;&#x540C;&#xFF1F;</p><p>&#x52A8;&#x89C4;&#x662F;&#x81EA;&#x5E95;&#x5411;&#x4E0A;&#x6C42;&#x89E3;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4ECE;&#x66F4;&#x5C0F;&#x95EE;&#x9898;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5230;&#x66F4;&#x5927;&#x95EE;&#x9898;&#x7684;&#x72B6;&#x6001;&#x3002;&#x800C;&#x8D2A;&#x5FC3;&#x662F;&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x6C42;&#x89E3;&#xFF0C;&#x4ECE;&#x66F4;&#x5927;&#x95EE;&#x9898;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5230;&#x66F4;&#x5C0F;&#x95EE;&#x9898;&#x7684;&#x72B6;&#x6001;&#x3002;&#x5982;&#x679C;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x8981;&#x60F3;&#x89E3;&#x51B3;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x5148;&#x89E3;&#x51B3;&#x66F4;&#x5C0F;&#x95EE;&#x9898;&#x7684;&#x72B6;&#x6001;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x8D2A;&#x5FC3;&#x5C31;&#x6CA1;&#x6CD5;&#x6C42;&#x89E3;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#x80CC;&#x5305;0-1&#x95EE;&#x9898;&#x548C;&#x5206;&#x6570;&#x80CC;&#x5305;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5F88;&#x597D;&#x7684;&#x89E3;&#x91CA;&#x8D2A;&#x5FC3;&#x4E0E;&#x52A8;&#x89C4;&#x7684;&#x533A;&#x522B;&#x3002;</p><p>&#x7ED3;&#x8BBA;:&#x80FD;&#x7528;&#x8D2A;&#x5FC3;&#x89E3;&#x51B3;&#xFF0C;&#x80AF;&#x5B9A;&#x80FD;&#x7528;&#x52A8;&#x89C4;&#x89E3;&#x51B3;&#x3002;&#x80FD;&#x7528;&#x52A8;&#x89C4;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E0D;&#x4E00;&#x5B9A;&#x80FD;&#x7528;&#x8D2A;&#x5FC3;&#x89E3;&#x51B3;&#x3002;</p><ul><li>&#x6D3B;&#x52A8;&#x9009;&#x62E9;&#x95EE;&#x9898;(Weighted-Interval-Scheduling)</li></ul><p>&#x7ED9;&#x51FA;n&#x4E2A;&#x6D3B;&#x52A8;&#x7684;&#x96C6;&#x5408;<script type="math/tex">S{a_1...a_n}</script>&#xFF0C;&#x8FD8;&#x6709;&#x8FD9;&#x4E9B;&#x6D3B;&#x52A8;&#x6709;&#x5F00;&#x59CB;&#x65F6;&#x95F4;<script type="math/tex">s_i</script>&#x548C;&#x7ED3;&#x675F;&#x65F6;&#x95F4;<script type="math/tex">f_i</script>&#xFF0C;&#x96C6;&#x5408;S&#x5DF2;&#x6309;&#x6D3B;&#x52A8;&#x5F00;&#x59CB;&#x65F6;&#x95F4;&#x6392;&#x5E8F;&#x3002;&#x6C42;&#x6BCF;&#x6B21;&#x53EA;&#x80FD;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x6D3B;&#x52A8;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x96C6;&#x5408;S&#x4E2D;&#x6700;&#x591A;&#x80FD;&#x5B89;&#x6392;&#x51E0;&#x4E2A;&#x6D3B;&#x52A8;&#x3002;</p><p>&#x6BD4;&#x5982;&#xFF1A;</p><pre><code class="lang-c">&#x96C6;&#x5408;S&#x5305;&#x62EC;6&#x4E2A;&#x4EFB;&#x52A1;&#xFF1A;S = {a1,a2,a3,a4,a5,a6}s[i] =  {1, 3, 0, 5, 8, 5};f[i] =  {2, 4, 6, 7, 9, 9};&#x6700;&#x591A;&#x53EF;&#x5B89;&#x6392;&#x7684;&#x4EFB;&#x52A1;&#x662F;&#xFF1A; {a1, a2, a4, a5}</code></pre><p>&#x5047;&#x8BBE;<script type="math/tex">S_{ij}</script>&#x4EE3;&#x8868;&#x5728;<script type="math/tex">a_i</script>&#x7ED3;&#x675F;&#x540E;&#x5F00;&#x59CB;&#xFF0C;<script type="math/tex">a_j</script>&#x5F00;&#x59CB;&#x524D;&#x7ED3;&#x675F;&#x7684;&#x6700;&#x5927;&#x6D3B;&#x52A8;&#x9009;&#x62E9;&#x96C6;&#x5408;&#xFF0C;&#x5E76;&#x4E14;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E3A;&#x72B6;&#x6001;<script type="math/tex">A</script>&#x3002;&#x800C;<script type="math/tex">S_{ij}</script>&#x5FC5;&#x5B9A;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6D3B;&#x52A8;&#x3002;&#x6C42;<script type="math/tex">S_{ij}</script>&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x627E;&#x5305;&#x542B;&#x54EA;&#x4E2A;&#x6D3B;&#x52A8;&#x53EF;&#x4EE5;&#x8BA9;&#x6C42;&#x51FA;<script type="math/tex">a_i</script>&#x5230;<script type="math/tex">a_j</script>&#x4E4B;&#x95F4;&#x7684;&#x6700;&#x5927;&#x6D3B;&#x52A8;&#x6570;&#x91CF;&#x3002;&#x8BBE;&#x8FD9;&#x4E2A;&#x6D3B;&#x52A8;&#x4E3A;<script type="math/tex">k</script>&#xFF0C;&#x6C42;<script type="math/tex">S_{ij}</script>&#x5C31;&#x662F;&#x6C42;<script type="math/tex">S_{ik}</script>&#x548C;<script type="math/tex">S_{kj}</script>&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x8FD9;&#x5C31;&#x7B49;&#x4EF7;&#x4E8E;&#x72B6;&#x6001;A&#x53EF;&#x4EE5;&#x4ECE;&#x524D;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x3002;&#x90A3;&#x4E48;&#x6C42;&#x89E3;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x9650;&#x5236;<script type="math/tex">S_{ij}</script>&#x5FC5;&#x987B;&#x5305;&#x542B;&#x67D0;&#x4E2A;&#x6D3B;&#x52A8;&#xFF0C;&#x5373;&#x9650;&#x5236;&#x72B6;&#x6001;<script type="math/tex">A</script>&#x5FC5;&#x987B;&#x4ECE;&#x524D;&#x9762;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x9636;&#x6BB5;&#x8F6C;&#x79FB;&#x8FC7;&#x6765;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x8D2A;&#x5FC3;&#x6765;&#x89E3;&#x51B3;&#x3002;</p><p>&#x76F4;&#x89C9;&#x4E0A;&#xFF0C;&#x5148;&#x9009;&#x6700;&#x5148;&#x5B8C;&#x6210;&#x7684;&#x6D3B;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x7559;&#x4E0B;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x7ED9;&#x522B;&#x7684;&#x6D3B;&#x52A8;&#x3002;&#x65E2;&#x7136;&#x6D3B;&#x52A8;&#x5DF2;&#x7ECF;&#x6309;&#x5E8F;&#x6392;&#x597D;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x9009;&#x7684;&#x5C31;&#x662F;<script type="math/tex">a_1</script>&#xFF0C;&#x7136;&#x540E;&#x9009;<script type="math/tex">a_1</script>&#x7ED3;&#x675F;&#x540E;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5F00;&#x59CB;&#x7684;&#x6D3B;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x4E00;&#x76F4;&#x9009;&#x62E9;&#x4E0B;&#x53BB;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x76F4;&#x89C9;&#x4E0A;&#x7684;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x3002;&#x4E0B;&#x9762;&#x6765;&#x8BC1;&#x660E;&#x4E00;&#x4E0B;&#xFF0C;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;</p><p>&#x5047;&#x8BBE;&#xFF1A;<script type="math/tex">S_k</script>&#x4E3A;&#x5305;&#x542B;&#x90E8;&#x5206;&#x6D3B;&#x52A8;&#x7684;&#x96C6;&#x5408;&#xFF0C;<script type="math/tex">a_m</script>&#x4E3A;<script type="math/tex">S_k</script>&#x4E2D;&#x7ED3;&#x675F;&#x6700;&#x65E9;&#x7684;&#x6D3B;&#x52A8;&#xFF0C;</p><p>&#x547D;&#x9898;&#xFF1A;<script type="math/tex">a_m</script>&#x5728;<script type="math/tex">S_k</script>&#x7684;&#x67D0;&#x4E2A;&#x6700;&#x5927;&#x6D3B;&#x52A8;&#x9009;&#x62E9;&#x96C6;&#x5408;&#x4E2D;&#x3002;</p><p>&#x8BC1;&#x660E;&#xFF1A;&#x4EE4;<script type="math/tex">A_k</script>&#x4E3A;<script type="math/tex">S_k</script>&#x7684;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x6D3B;&#x52A8;&#x9009;&#x62E9;&#x96C6;&#x5408;&#xFF0C;<script type="math/tex">a_j</script>&#x662F;<script type="math/tex">A_k</script>&#x4E2D;&#x6700;&#x65E9;&#x7ED3;&#x675F;&#x7684;&#x6D3B;&#x52A8;&#x3002;&#x5982;&#x679C;<script type="math/tex">a_m=a_j</script>&#xFF0C;&#x5219;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;&#x5982;&#x679C;<script type="math/tex">a_m</script>&#x4E0D;&#x7B49;&#x4E8E;<script type="math/tex">a_j</script>&#xFF0C;&#x5219;&#x4EE4;<script type="math/tex">A_k'=A_k-a_j+a_m</script>&#xFF0C;&#x5373;<script type="math/tex">A_k'</script>&#x4E3A;&#x4ECE;<script type="math/tex">A_k</script>&#x4E2D;&#x53BB;&#x9664;<script type="math/tex">a_j</script>&#x52A0;&#x4E0A;<script type="math/tex">a_m</script>&#x7684;&#x96C6;&#x5408;&#x3002;&#x56E0;&#x4E3A;&#xFF0C;<script type="math/tex">a_m</script>&#x7684;&#x7ED3;&#x675F;&#x65F6;&#x95F4;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;<script type="math/tex">a_j</script>&#x7684;&#x7ED3;&#x675F;&#x65F6;&#x95F4;&#xFF0C;&#x6240;&#x4EE5;<script type="math/tex">A_k'</script>&#x96C6;&#x5408;&#x4E2D;&#x6CA1;&#x6709;&#x91CD;&#x53E0;&#x7684;&#x6D3B;&#x52A8;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;<script type="math/tex">A_k</script>&#x7684;&#x6570;&#x91CF;&#x4E0E;<script type="math/tex">A_k'</script>&#x76F8;&#x7B49;&#x3002;&#x6240;&#x4EE5;<script type="math/tex">A_k'</script>&#x4E5F;&#x4E3A;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x6D3B;&#x52A8;&#x9009;&#x62E9;&#x96C6;&#x5408;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x6700;&#x91CD;&#x8981;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x662F;&#x9A8C;&#x8BC1;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;</p><pre><code class="lang-c">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;WEIGHTED-INTERVAL-SCHEDULING-GREEDY(s,f)  let n = s.length  let A be new Set  let k = 1  for m from 2 to n    if s[m] earlier than f[k]      add am to sets A      k = m  end  return A</code></pre><script type="math/tex; mode=display">时间复杂度：Θ(n)</script><ul><li>&#x970D;&#x592B;&#x66FC;&#x7F16;&#x7801;(Huffman-Code)</li></ul><p>&#x970D;&#x592B;&#x66FC;&#x7F16;&#x7801;&#x662F;&#x79CD;&#x538B;&#x7F29;&#x6570;&#x636E;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x3002;&#x4ED6;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x7528;&#x66F4;&#x77ED;&#x7684;&#x5B57;&#x7B26;&#x8868;&#x793A;&#x51FA;&#x73B0;&#x9891;&#x7387;&#x66F4;&#x9AD8;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x7528;&#x66F4;&#x957F;&#x7684;&#x5B57;&#x7B26;&#x8868;&#x793A;&#x51FA;&#x73B0;&#x9891;&#x7387;&#x66F4;&#x4F4E;&#x7684;&#x5B57;&#x7B26;&#x3002;</p><pre><code class="lang-c">&#x5047;&#x8BBE;&#xFF1A;&#x5B57;&#x7B26;      a   b   c   d   e    f&#x9891;&#x7387;      45  13  12  16  9    5&#x5B9A;&#x957F;&#x7F16;&#x7801;  000 001 010 011 100  101&#x53D8;&#x957F;&#x7F16;&#x7801;  0   101 100 111 1101 1100</code></pre><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4F7F;&#x7528;&#x53D8;&#x957F;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x8282;&#x7EA6;&#x5F88;&#x591A;&#x7A7A;&#x95F4;&#x3002;</p><p>&#x970D;&#x592B;&#x66FC;&#x7F16;&#x7801;&#x5C31;&#x662F;&#x5EFA;&#x7ACB;&#x4E00;&#x9897;&#x4E8C;&#x53C9;&#x6811;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x79CD;&#x601D;&#x60F3;&#x3002;&#x5B57;&#x7B26;&#x7684;&#x7F16;&#x7801;&#x7528;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x5230;&#x8BE5;&#x5B57;&#x7B26;&#x7684;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#x8868;&#x793A;&#xFF0C;&#x7F16;&#x7801;0&#x4E3A;&#x5DE6;&#x8282;&#x70B9;&#xFF0C;&#x7F16;&#x7801;1&#x4E3A;&#x53F3;&#x8282;&#x70B9;&#x3002;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x9891;&#x7387;&#x4E3A;&#x5DE6;&#x5B50;&#x6811;&#x548C;&#x53F3;&#x5B50;&#x6811;&#x9891;&#x7387;&#x4E4B;&#x548C;&#x3002;</p><p>&#x5047;&#x8BBE;T&#x8868;&#x793A;&#x6811;&#xFF0C;c&#x8868;&#x793A;&#x5B57;&#x7B26;&#xFF0C;freq&#x8868;&#x793A;c&#x7684;&#x9891;&#x7387;&#xFF0C;<script type="math/tex">d_T</script>&#x8868;&#x793A;&#x5B57;&#x7B26;c&#x5728;&#x6811;T&#x4E2D;&#x7684;&#x9AD8;&#xFF0C;&#x5219;&#x6574;&#x68F5;&#x6811;&#x7684;&#x4EE3;&#x4EF7;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">B(T)=\sum_{对于所有c}c. freq\cdot d_T{c}</script><p>&#x53EA;&#x8981;&#x6C42;&#x51FA;B(T)&#x7684;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x65F6;&#x7684;&#x4E00;&#x68F5;&#x6811;&#xFF0C;&#x5C31;&#x80FD;&#x6784;&#x9020;&#x51FA;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x76F4;&#x89C9;&#x4E0A;&#xFF0C;&#x8BA9;&#x9891;&#x7387;&#x5C0F;&#x7684;&#x8DEF;&#x5F84;&#x77ED;&#xFF0C;&#x9891;&#x7387;&#x9AD8;&#x7684;&#x8DEF;&#x7ECF;&#x957F;&#xFF0C;&#x5C31;&#x662F;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6BCF;&#x6B21;&#x4ECE;&#x6240;&#x6709;&#x8282;&#x70B9;&#x4E2D;&#x627E;&#x51FA;&#x9891;&#x7387;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x9897;&#x6811;&#x5C31;&#x53EF;&#x4EE5;&#xFF0C;&#x8FD9;&#x6837;&#x9891;&#x7387;&#x5C0F;&#x7684;&#x6DF1;&#x5EA6;&#x6700;&#x5927;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x3002;&#x4E0B;&#x9762;&#x6765;&#x8BC1;&#x660E;&#x4E00;&#x4E0B;&#xFF0C;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;</p><p>&#x547D;&#x9898;&#xFF1A;x&#x4E0E;y&#x662F;&#x9891;&#x7387;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x4E2A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#xFF0C;&#x5728;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x6811;&#x4E2D;&#x6DF1;&#x5EA6;&#x6700;&#x5927;&#x3002;</p><p>&#x5047;&#x8BBE;T&#x4E3A;&#x4E00;&#x9897;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x7684;&#x6811;&#xFF0C;a&#x3001;b&#x4E3A;T&#x6DF1;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x4E24;&#x4E2A;&#x5144;&#x5F1F;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x3002;</p><p>&#x7531;&#x4E8E;x&#x3001;y&#x4E3A;&#x9891;&#x7387;&#x6700;&#x5C0F;&#x7684;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x6709;x.freq&lt;=a.freq&#x3001;y.freq&lt;=b.freq&#x3002;</p><p>&#x5728;T&#x4E2D;&#x4EA4;&#x6362;x&#x4E0E;a&#x5F97;&#x5230;&#x4E00;&#x9897;&#x65B0;&#x6811;T&#x2019;&#xFF0C;&#x518D;&#x5728;T&#x2019;&#x4E2D;&#x4EA4;&#x6362;y&#x4E0E;b&#x5F97;&#x5230;&#x4E00;&#x9897;&#x65B0;&#x6811;T&#x2019;&#x2019;&#xFF0C;&#x5F97;&#x5230;x&#x4E0E;y&#x5728;T&#x2019;&#x2019;&#x4E2D;&#x4E3A;&#x6DF1;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x4E24;&#x4E2A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x3002;</p><p>T&#x548C;T&#x2019;&#x7684;&#x4EE3;&#x4EF7;&#x5DEE;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">B(T)-B(T')=\sum_{对于所有c}c.freq\cdot d_T(c)-\sum_{对于所有c}c.freq\cdot d_{T'}(c) \\ =x.freq\cdot d_T(x)+a.freq\cdot d_T(a)-x.freq\cdot d_{T'}(x)-a.freq\cdot d_{T'}(a) \\ =x.freq\cdot d_T(x)+a.freq\cdot d_T(a)-x.freq\cdot d_T(a)-a.freq\cdot d_T(x) \\ =(a.freq-x.freq)(d_T(a)-d_T(x)) \\ 又因为a.freq-x.freq\geq0，且d_T(a)-d_T(x)\geq0，所以原式\geq0 \\ 同理可以得出B(T')-B(T'')\geq0，最后得出B(T)\geq B(T'') \\ 又因为B(T)为一颗最小代价树，B(T)\leq B(T'')，可得出B(T)=B(T'')</script><p>&#x5373;&#x5F97;&#x51FA;T&#x2019;&#x2019;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x9897;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x6811;&#xFF0C;&#x547D;&#x9898;&#x5F97;&#x8BC1;&#x3002;</p><p>&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x4F18;&#x5148;&#x961F;&#x5217;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x5C31;&#x662F;&#x4E8C;&#x53C9;&#x5806;&#x3002;&#x4ECE;&#x4F18;&#x5148;&#x961F;&#x5217;&#x4E2D;&#x53D6;&#x51FA;&#x4E24;&#x4E2A;&#x6700;&#x5C0F;&#x8282;&#x70B9;&#xFF0C;&#x5C06;&#x5176;&#x5408;&#x5E76;&#x540E;&#x518D;&#x63D2;&#x5165;&#x4F18;&#x5148;&#x961F;&#x5217;&#xFF0C;&#x76F4;&#x5230;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x6700;&#x5C0F;&#x4EE3;&#x4EF7;&#x6811;&#x3002;</p><pre><code class="lang-java">&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;HUFFMAN-CODE(C)  let Q be new PriorityQueue(C)  let n be amount of C  for i from 1 to n-1    let x = EXTRACT-MIN(Q)    let y = EXTRACT-MIN(Q)    let z be new Node    z.left = x    z.right = y    z.freq = x.freq + y.freq    INSERT(Q,z)  end  return EXTRACT-MIN(Q)</code></pre><script type="math/tex; mode=display">时间复杂度：O(n\log_{2}{n})</script><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;&#x8BC1;&#x660E;&#x8D2A;&#x5FC3;&#x9009;&#x62E9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x6709;&#x6280;&#x5DE7;&#x3002;&#x6BD4;&#x5982;&#x60F3;&#x8BC1;&#x660E;A&#xFF0C;&#x5047;&#x5B9A;&#x5DF2;&#x6210;&#x7ACB;&#x7684;B&#xFF0C;&#x5C06;B&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#x7F6E;&#x6362;&#x6210;A&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#x4ECE;&#x800C;&#x5F97;&#x5230;C&#xFF0C;&#x5982;&#x679C;C&#x6210;&#x7ACB;&#x7684;&#x8BDD;&#xFF0C;&#x547D;&#x9898;&#x5C31;&#x5F97;&#x8BC1;&#x3002;&#x8FD9;&#x4E2A;&#x6280;&#x5DE7;&#x53EB;Cut-And-Paste(&#x526A;&#x5207;-&#x7C98;&#x8D34;)&#xFF0C;&#x5C06;B&#x4E2D;&#x67D0;&#x4E9B;&#x6761;&#x4EF6;&#x201C;&#x526A;&#x5207;&#x201D;&#x6389;&#xFF0C;&#x7136;&#x540E;&#x201C;&#x7C98;&#x8D34;&#x201D;&#x4E0A;A&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x5F88;&#x5F62;&#x8C61;&#x3002;</p><p><br></p><blockquote><p>&#x7B97;&#x6CD5;&#x5C06;&#x8BA1;&#x7B97;&#x673A;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#x770B;&#x505A;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x3002;&#x800C;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x5C06;&#x7F16;&#x7A0B;&#x770B;&#x505A;&#x6570;&#x636E;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x3002;&#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#xFF0C;&#x8FD9;&#x4E24;&#x8005;&#x662F;&#x5171;&#x901A;&#x7684;&#xFF0C;&#x4E24;&#x79CD;&#x4E0D;&#x540C;&#x89D2;&#x5EA6;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x672C;&#x8D28;&#x7684;&#x7406;&#x89E3;&#x3002;</p><p>&#x5F53;&#x4E0D;&#x540C;&#x9886;&#x57DF;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x53D1;&#x51FA;&#x5171;&#x9E23;&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x6211;&#x4EEC;&#x66F4;&#x52A0;&#x63A5;&#x8FD1;&#x4E86;&#x201C;&#x771F;&#x76F8;&#x201D;&#x3002;</p></blockquote><p><br></p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#xFF1A;<a href="http://www.zhihu.com/question/23995189" target="_blank" rel="noopener">http://www.zhihu.com/question/23995189</a></p><p>&#x6570;&#x636E;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#xFF1A;<a href="http://blog.sunnyxx.com/2014/10/14/fp-essential/" target="_blank" rel="noopener">http://blog.sunnyxx.com/2014/10/14/fp-essential/</a></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法炽热</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%82%BD%E7%83%AD/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%82%BD%E7%83%AD/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x70BD;&#x70ED;&#x7684;&#x7231;</p></blockquote><p>&#x672C;&#x7BC7;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#xFF0C;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x3001;&#x6E10;&#x8FD1;&#x8BB0;&#x6CD5;&#x3001;&#x644A;&#x8FD8;&#x5206;&#x6790;&#x3001;&#x6982;&#x7387;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x3002;</p><a id="more"></a><p><br></p><h2 id="&#x7B97;&#x6CD5;&#x5206;&#x6790;"><a href="#&#x7B97;&#x6CD5;&#x5206;&#x6790;" class="headerlink" title="&#x7B97;&#x6CD5;&#x5206;&#x6790;"></a>&#x7B97;&#x6CD5;&#x5206;&#x6790;</h2><p>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FDB;&#x884C;&#x7B97;&#x6CD5;&#x7684;&#x5206;&#x6790;&#xFF1F;</p><p>&#x8FDB;&#x884C;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x624D;&#x53EF;&#x4EE5;&#x8861;&#x91CF;&#x7B97;&#x6CD5;&#x7684;&#x597D;&#x574F;&#x3002;&#x800C;&#x7B97;&#x6CD5;&#x7684;&#x597D;&#x574F;&#x53C8;&#x51B3;&#x5B9A;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x554A;&#x3002;</p><p>&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x5173;&#x6CE8;&#x6027;&#x80FD;&#xFF1F;</p><p>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x602A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5199;&#x7A0B;&#x5E8F;&#x5F53;&#x7136;&#x8981;&#x5173;&#x6CE8;&#x6027;&#x80FD;&#x5566;&#x3002;&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#x5F00;&#x7BC7;&#xFF0C;&#x5BF9;&#x4E8E;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x6709;&#x4E2A;&#x8BA9;&#x4EBA;&#x60CA;&#x547C;&#x53EB;&#x7EDD;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9ED8;&#x9ED8;&#x8BB0;&#x5728;&#x5FC3;&#x4E2D;&#xFF0C;&#x6216;&#x8005;&#x7761;&#x4E00;&#x89C9;&#x5FD8;&#x8BB0;&#x3002;&#x7B2C;&#x4E00;&#x70B9;&#xFF0C;&#x6027;&#x80FD;&#x662F;&#x7A0B;&#x5E8F;&#x7684;&#x8D27;&#x5E01;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x7528;Java&#x7F16;&#x7A0B;&#x800C;&#x4E0D;&#x7528;C&#x7F16;&#x7A0B;&#xFF0C;&#x5C3D;&#x7BA1;&#xFF0C;Java&#x6BD4;C&#x6EE1;&#x4E0A;3&#x500D;&#x6216;&#x8005;&#x66F4;&#x591A;&#x3002;&#x56E0;&#x4E3A;Java&#x63D0;&#x4F9B;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x3002;&#x800C;&#x6027;&#x80FD;&#x5728;&#x8FD9;&#x4E2A;&#x9009;&#x62E9;&#x4E2D;&#x5145;&#x5F53;&#x4E86;&#x8D27;&#x5E01;&#x7684;&#x89D2;&#x8272;&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x6211;&#x6709;10&#x4E2A;&#x6027;&#x80FD;&#x3002;&#x6211;&#x53EF;&#x4EE5;&#x7528;&#x5176;&#x4E2D;3&#x4E2A;&#x6027;&#x80FD;&#x5151;&#x6362;Java&#x8BED;&#x8A00;&#xFF0C;3&#x4E2A;&#x6027;&#x80FD;&#x5151;&#x6362;&#x7528;&#x6237;&#x53CB;&#x597D;&#x6027;&#xFF0C;3&#x4E2A;&#x6027;&#x80FD;&#x5151;&#x6362;&#x6A21;&#x5757;&#x5316;&#x3002;&#x800C;&#x5982;&#x679C;&#xFF0C;&#x6CA1;&#x6709;&#x6027;&#x80FD;&#xFF0C;&#x90A3;&#x5565;&#x4E5F;&#x5151;&#x6362;&#x4E0D;&#x4E86;&#x3002;&#x6027;&#x80FD;&#x5BF9;&#x4E8E;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C31;&#x50CF;&#x662F;&#x94B1;&#x5BF9;&#x4E8E;&#x751F;&#x6D3B;&#x3002;&#x7B2C;&#x4E8C;&#x70B9;&#xFF0C;&#x56E0;&#x5782;&#x6B7B;&#x542C;(interesting)&#xFF0C;&#x8FD9;&#x548C;&#x4E3A;&#x4EC0;&#x4E48;&#x4EBA;&#x4EEC;&#x8FFD;&#x6C42;&#x66F4;&#x5FEB;&#x7684;&#x8DD1;&#x8F66;&#x4E00;&#x81F4;&#x3002;</p><p>&#x7B97;&#x6CD5;&#x7684;&#x5FEB;&#x6162;&#x9664;&#x4E86;&#x53D6;&#x51B3;&#x4E8E;&#x7B97;&#x6CD5;&#x81EA;&#x8EAB;&#xFF0C;&#x8FD8;&#x53D6;&#x51B3;&#x4E8E;input&#x548C;&#x673A;&#x5668;&#x7684;&#x5FEB;&#x6162;&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7684;input&#x53EF;&#x4EE5;&#x5BF9;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x578B;&#x5206;&#x6790;&#xFF0C;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x7C7B;&#x578B;&#x53EF;&#x5206;&#x4E3A;&#xFF1A;</p><ul><li>Worst Case:&#x6700;&#x5DEE;&#x60C5;&#x51B5;&#x5206;&#x6790;&#xFF0C;&#x53EF;&#x4EE5;&#x5F88;&#x597D;&#x7684;&#x8861;&#x91CF;&#x7B97;&#x6CD5;&#x3002;</li><li>Average-Case:&#x5E73;&#x5747;&#x60C5;&#x51B5;&#x5206;&#x6790;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x3002;&#x5C06;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x4F5C;&#x4E3A;&#x6743;&#x91CD;&#xFF0C;&#x53C2;&#x4E0E;&#x5230;&#x8BA1;&#x7B97;&#x4E2D;&#x3002;</li><li>Best-Case:&#x6700;&#x597D;&#x60C5;&#x51B5;&#x5206;&#x6790;&#xFF0C;&#x5047;&#x8C61;&#xFF01;&#x6CA1;&#x6CD5;&#x53BB;&#x8861;&#x91CF;&#x7B97;&#x6CD5;&#x3002;</li><li>Probabilistic:&#x6982;&#x7387;&#x5206;&#x6790;&#xFF0C;&#x6C42;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x7684;&#x671F;&#x671B;&#x3002;</li><li>Amortized:&#x644A;&#x8FD8;&#x5206;&#x6790;&#xFF0C;&#x5C06;&#x4EE3;&#x4EF7;&#x8F83;&#x9AD8;&#x64CD;&#x4F5C;&#x7684;&#x4EE3;&#x4EF7;&#x5E73;&#x644A;&#x5230;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6C42;&#x5E73;&#x5747;&#x4EE3;&#x4EF7;&#x3002;</li><li>&#x66F4;&#x591A;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6BD4;&#x5982;&#x7ADE;&#x4E89;&#x5206;&#x6790;&#x7B49;&#x7B49;&#x3002;</li></ul><h2 id="&#x6E10;&#x8FDB;&#x8BB0;&#x6CD5;"><a href="#&#x6E10;&#x8FDB;&#x8BB0;&#x6CD5;" class="headerlink" title="&#x6E10;&#x8FDB;&#x8BB0;&#x6CD5;"></a>&#x6E10;&#x8FDB;&#x8BB0;&#x6CD5;</h2><p>&#x5728;&#x8FDB;&#x884C;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4EBA;&#x4EEC;&#x60F3;&#x51FA;&#x4E00;&#x79CD;&#x6E10;&#x8FDB;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8FDB;&#x884C;&#x6BD4;&#x5BF9;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E0D;&#x6BD4;&#x5BF9;&#x7B97;&#x6CD5;&#x7279;&#x5B9A;input&#x4E0B;&#x7684;&#x5FEB;&#x6162;&#x3002;&#x6BD4;&#x8F83;&#x5F53;input&#x8D8B;&#x8FD1;&#x4E0E;&#x65E0;&#x7A77;&#x5927;&#x7684;&#x65F6;&#x5019;&#x4E0B;&#x7684;&#x5FEB;&#x6162;&#x3002;&#x6216;&#x8005;&#x8BF4;&#x6CE8;&#x91CD;&#x7B97;&#x6CD5;&#x589E;&#x957F;(growth)&#x7684;&#x901F;&#x7387;&#x3002;</p><p>&#x5728;&#x8FDB;&#x884C;&#x6E10;&#x8FDB;&#x8BA1;&#x6CD5;&#x65F6;&#xFF0C;&#x398;&#x3001;&#x3A9;&#x3001;O&#x8FD9;&#x4E09;&#x4E2A;&#x7B26;&#x53F7;&#x7ECF;&#x5E38;&#x51FA;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x754C;&#x9650;&#x7684;&#x89D2;&#x5EA6;&#x53BB;&#x7406;&#x89E3;&#x8FD9;&#x4E09;&#x4E2A;&#x7B26;&#x53F7;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE;&#x6781;&#x9650;&#x7684;&#x89D2;&#x5EA6;&#x53BB;&#x7406;&#x89E3;&#x8FD9;&#x4E09;&#x4E2A;&#x7B26;&#x53F7;&#x3002;</p><p>O&#x7B26;&#x53F7;&#x8868;&#x793A;&#x5BF9;&#x4E8E;</p><script type="math/tex; mode=display">f(n)=\mathrm {O} (g(n))</script><p>&#x5B58;&#x5728;&#x6B63;&#x5B9E;&#x6570;c&#x548C;N&#xFF0C;&#x4F7F;&#x5F97;&#x5BF9;&#x4E8E;n&gt;N&#xFF0C;&#x6709;</p><script type="math/tex; mode=display">\frac{|g(n)|}{|f(n)|} \ge c</script><p>&#x5373;g(x)&#x4E3A;f(x)&#x7684;&#x4E0A;&#x754C;&#x3002;</p><p>&#x3A9;&#x7B26;&#x53F7;&#x8868;&#x793A;&#x5BF9;&#x4E8E;</p><script type="math/tex; mode=display">f(n)=\mathrm {Ω} (g(n))</script><p>&#x5B58;&#x5728;&#x6B63;&#x5B9E;&#x6570;c&#x548C;N&#xFF0C;&#x4F7F;&#x5F97;&#x5BF9;&#x4E8E;n&gt;N&#xFF0C;&#x6709;</p><script type="math/tex; mode=display">\frac{|f(n)|}{|g(n)|} \ge c</script><p>&#x5373;g(x)&#x4E3A;f(x)&#x7684;&#x4E0B;&#x754C;&#x3002;</p><p>&#x800C;&#x398;&#x4EE3;&#x8868;g(x)&#x4E3A;f(x)&#x7684;&#x4E0A;&#x754C;&#x4E0E;&#x4E0B;&#x754C;&#x4E2D;&#x95F4;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x3002;</p><p>&#x5E73;&#x65F6;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x51ED;&#x7ECF;&#x9A8C;&#xFF0C;&#x76F4;&#x63A5;&#x5C06;&#x539F;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x5E38;&#x6570;&#x548C;&#x4F4E;&#x9636;&#x53D8;&#x91CF;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#x3002;</p><p>&#x6BD4;&#x5982;</p><script type="math/tex; mode=display">T(n) = {4n^3} + {3n^2} + 4096</script><p>&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5F97;&#x5230;</p><script type="math/tex; mode=display">Θ(n) = {n^3}</script><p>&#x5982;&#x679C;&#x4ECE;&#x754C;&#x9650;&#x89D2;&#x5EA6;&#x53BB;&#x89E3;&#x91CA;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5FFD;&#x7565;&#x5E38;&#x6570;&#x548C;&#x4F4E;&#x9636;&#x53D8;&#x91CF;&#xFF0C;&#x4F1A;&#x4E0D;&#x4E25;&#x8C28;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x89E3;&#x91CA;&#x4E3A;&#x8BA1;&#x7B97;&#x4E2D;&#x8FD9;&#x4E9B;&#x5E38;&#x6570;&#x548C;&#x4F4E;&#x9636;&#x5BF9;&#x4E8E;&#x9AD8;&#x9636;&#x5F71;&#x54CD;&#x5F88;&#x5C0F;&#x3002;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6781;&#x9650;&#x89D2;&#x5EA6;&#x6765;&#x66F4;&#x52A0;&#x4E25;&#x8C28;&#x7684;&#x89E3;&#x91CA;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><p>&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x398;&#x7684;&#x6781;&#x9650;&#x89D2;&#x5EA6;&#xFF1A;</p><p>&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6B63;&#x503C;&#x51FD;&#x6570;&#x503C;f(x)&#x3001;g(x)&#xFF0C;&#x5E76;&#x4F7F;</p><script type="math/tex; mode=display">f(n)=\mathrm {Θ} (g(n))</script><p>&#x6210;&#x7ACB;&#x7684;&#x6761;&#x4EF6;&#x4E3A;&#xFF0C;&#x5B58;&#x5728;&#x6B63;&#x5B9E;&#x6570;c1&#x548C;c2&#x548C;N&#xFF0C;&#x4F7F;&#x5F97;&#x5BF9;&#x4E8E;&#x6240;&#x6709;n &gt; N&#xFF0C;&#x6709;</p><script type="math/tex; mode=display">c_1 \le \frac{|g(n)|}{|f(n)|} \le c_2</script><p>&#x7531;&#x4E0A;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5B58;&#x5728;&#x6B63;&#x5B9E;&#x6570;c&#x548C;N&#xFF0C;&#x4F7F;&#x5F97;&#x5BF9;&#x4E8E;&#x6240;&#x6709;n &gt; N&#xFF0C;&#x6709;</p><script type="math/tex; mode=display">\frac{|g(n)|}{|f(n)|} = |c|</script><p>&#x5BF9;&#x4E8E;n&#x89C6;&#x4F5C;&#x6781;&#x9650;&#x53EF;&#x5F97;</p><script type="math/tex; mode=display">\lim_{x \to \infty}\frac{|g(n)|}{|f(n)|} = |c|</script><p>&#x5219;f(x)&#x4E3A;g(x)&#x7684;&#x540C;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x3002;&#x7ED3;&#x8BBA;&#x4E3A;&#x398;&#x8868;&#x793A;&#x4E3A;&#xFF0C;g(x)&#x4E3A;f(x)&#x7684;&#x540C;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#x3002;&#x540C;&#x7406;&#xFF0C;O&#x8868;&#x793A;&#x4E3A;g(x)&#x4E3A;f(x)&#x7684;&#x540C;&#x9636;&#x6216;&#x9AD8;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#x3002;&#x3A9;&#x8868;&#x793A;&#x4E3A;g(x)&#x4E3A;f(x)&#x7684;&#x540C;&#x9636;&#x6216;&#x4F4E;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#x3002;</p><p>&#x90A3;&#x4E48;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5FFD;&#x7565;&#x5E38;&#x6570;&#x548C;&#x4F4E;&#x9636;&#x53D8;&#x91CF;&#x5C31;&#x5F88;&#x660E;&#x663E;&#x4E86;&#x3002;f(x)&#x5728;n&#x65E0;&#x7A77;&#x65F6;&#x7684;&#x5927;&#x5C0F;&#x7531;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x9AD8;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#x51B3;&#x5B9A;&#xFF0C;&#x800C;&#x5E38;&#x6570;&#x548C;&#x4F4E;&#x9636;&#x53D8;&#x91CF;&#x662F;f(x)&#x7684;&#x4F4E;&#x9636;&#x65E0;&#x7A77;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x5FFD;&#x7565;&#x3002;</p><p>&#x7A0B;&#x5E8F;&#x5728;&#x8FD0;&#x884C;&#x4E0A;&#xFF0C;&#x53EA;&#x5206;&#x8FED;&#x4EE3;&#x548C;&#x9012;&#x5F52;&#x3002;&#x8981;&#x533A;&#x5206;&#x9012;&#x5F52;&#x548C;&#x5206;&#x6CBB;&#xFF0C;&#x9012;&#x5F52;&#x662F;&#x7A0B;&#x5E8F;&#x7269;&#x7406;&#x4E0A;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x5206;&#x6CBB;&#x662F;&#x79CD;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4E0B;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x8FED;&#x4EE3;&#x548C;&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x6765;&#x5F00;&#x542F;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x5927;&#x95E8;&#x3002;</p><h2 id="&#x8FED;&#x4EE3;&#x7B97;&#x6CD5;&#x5206;&#x6790;"><a href="#&#x8FED;&#x4EE3;&#x7B97;&#x6CD5;&#x5206;&#x6790;" class="headerlink" title="&#x8FED;&#x4EE3;&#x7B97;&#x6CD5;&#x5206;&#x6790;"></a>&#x8FED;&#x4EE3;&#x7B97;&#x6CD5;&#x5206;&#x6790;</h2><p>&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x662F;&#x7ECF;&#x5178;&#x7684;&#x8FED;&#x4EE3;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x4E0B;&#x9762;&#x4EE5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x4E3A;&#x4F8B;&#xFF0C;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#x7B97;&#x6CD5;&#x5206;&#x6790;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x4F2A;&#x4EE3;&#x7801;&#xFF1A;</p><pre><code class="lang-c">Insertion-Sort arr[n]for i from 2 to n    temp &lt;- arr[i]    for j from i-1 to 1 And arr[j] &gt; temp       arr[i+1] &lt;- arr[i]       arr[i] &lt;- temp    end end</code></pre><p>&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x5FAA;&#x73AF;&#x5B9E;&#x9645;&#x4E0A;&#x662F;</p><pre><code class="lang-c">for (int i = 2; i &lt;= n; ++i)  for (int j = i - 1; j &gt;= 1; --j)</code></pre><p>&#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x8FDB;&#x884C;&#x4E86;n-1&#x6B21;&#x7684;&#x5BF9;&#x6BD4;&#xFF0C;&#x6BCF;&#x6B21;&#x5BF9;&#x6BD4;&#x53C8;&#x8FDB;&#x884C;&#x4E86;i-1&#x6B21;&#x7684;&#x4EA4;&#x6362;&#xFF0C;&#x5C06;&#x5176;&#x7D2F;&#x52A0;&#x8D77;&#x6765;&#x5C31;&#x5F97;&#x5230;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><script type="math/tex; mode=display">T(n) = \sum_{i=2}^{n}i-1=\frac{(1+n-1)(n-1)}{2}=\frac{n^2-n}{2} =Θ(n^2)</script><p>&#x5982;&#x679C;&#x6709;c&#x4E3A;&#x5E38;&#x6570;&#xFF0C;&#x5FAA;&#x73AF;&#x5982;&#x4E0B;</p><pre><code class="lang-c">for (int i = 1; i &lt;= n; i *= c)</code></pre><script type="math/tex; mode=display">令T(i)表示关于执行的次数i的函数，T(i)=c^i，令T(i)=n，则T(n)=Θ(\log_{c}{n})</script><p>&#x5982;&#x679C;&#x6709;c&#x548C;k&#x4E3A;&#x5E38;&#x6570;&#xFF0C;pow&#x4E3A;&#x6C42;i&#x7684;c&#x6B21;&#x65B9;&#xFF0C;&#x5FAA;&#x73AF;&#x4F53;&#x5982;&#x4E0B;</p><pre><code class="lang-c">for (int i = k; i &lt;= n; i = pow(i,c))</code></pre><script type="math/tex; mode=display">令T(i)表示关于执行的次数i的函数，T(i)=k^{c^i}，令T(i)=n，则T(n)=Θ(\log_{k}{\log_{c}{n}})</script><h2 id="&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x5206;&#x6790;"><a href="#&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x5206;&#x6790;" class="headerlink" title="&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x5206;&#x6790;"></a>&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x5206;&#x6790;</h2><p>&#x9012;&#x5F52;&#x7B97;&#x6CD5;&#x6709;&#x4E09;&#x79CD;&#x5206;&#x6790;&#x65B9;&#x6CD5;&#x3002;</p><ul><li>&#x9012;&#x5F52;&#x6811;</li></ul><p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x6700;&#x76F4;&#x89C2;&#xFF0C;&#x4F46;&#x4E0D;&#x662F;&#x5F88;&#x4E25;&#x8C28;&#x3002;</p><p>&#x5047;&#x8BBE;&#x67D0;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E3A;</p><script type="math/tex; mode=display">T(n)=2T(\frac{n}{2})+n</script><p>&#x90A3;&#x4E48;&#x753B;&#x51FA;&#x5927;&#x81F4;&#x7684;&#x7684;&#x9012;&#x5F52;&#x6811;&#xFF0C;&#x8BA9;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4EE3;&#x8868;&#xFF0C;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x590D;&#x6742;&#x5EA6;</p><pre><code class="lang-c">           n        ----------n          / \        n/2 n/2      ---------n      / \    / \    n/4 n/4 n/4 n/4   --------n   .................    &#x398;(1) .......... &#x398;(1)  ------n</code></pre><p>&#x73B0;&#x5728;&#x53EA;&#x8981;&#x5C06;&#x6240;&#x6709;&#x8282;&#x70B9;&#x76F8;&#x52A0;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8BA1;&#x7B97;&#x51FA;&#x603B;&#x590D;&#x6742;&#x5EA6;&#x4E86;&#x3002;&#x9012;&#x5F52;&#x6811;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x76F8;&#x52A0;&#x90FD;&#x4E3A;n&#x3002;&#x800C;&#x9012;&#x5F52;&#x6811;&#x7684;&#x9AD8;&#x5EA6;&#x4E0E;&#x5E95;&#x90E8;&#x8282;&#x70B9;&#x7684;&#x503C;&#x6709;&#x5982;&#x4E0B;&#x5173;&#x7CFB;:</p><script type="math/tex; mode=display">1 = \frac{n}{2^{h-1}}，则h=\log_{2}n+1</script><p>&#x90A3;&#x4E48;&#x6700;&#x540E;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#x6BCF;&#x5C42;&#x8282;&#x70B9;&#x7684;&#x503C;&#x4E58;&#x4EE5;&#x6811;&#x7684;&#x9AD8;</p><script type="math/tex; mode=display">O(n\log_{2}n)</script><p>&#x518D;&#x770B;&#x4E00;&#x4E2A;&#x590D;&#x6742;&#x70B9;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5047;&#x8BBE;&#x67D0;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=T(\frac{n}{2})+T(\frac{n}{4})+n^2</script><p>&#x753B;&#x51FA;&#x9012;&#x5F52;&#x6811;&#xFF1A;</p><pre><code class="lang-c">               n^2                 ----------n^2          /         \       (n/2)^2    (n/4)^2           ---------5n^2/16      /     \      /     \ (n/4)^2 (n/8)^2 (n/8)^2 (n/16)^2    --------25^2/256..................................   &#x398;(1) ........................... &#x398;(1)  ------5^kn^2/16^k</code></pre><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x9012;&#x5F52;&#x6811;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x76F8;&#x52A0;&#x8D77;&#x6765;&#x662F;&#x4E00;&#x4E2A;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#xFF0C;&#x5219;&#x5C06;&#x6240;&#x6709;&#x8282;&#x70B9;&#x76F8;&#x52A0;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">(1+\frac{5}{16}+\frac{25}{256}+....+\frac{5^k}{16^k})n^2</script><p>&#x7531;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#x7684;&#x6027;&#x8D28;</p><script type="math/tex; mode=display">1+\frac{5}{16}+\frac{25}{256}+....+\frac{5^k}{16^k}< 2</script><p>&#x5F97;&#x51FA;&#x590D;&#x6742;&#x5EA6;&#x4E3A;</p><script type="math/tex; mode=display">O(n^2)</script><ul><li>&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;</li></ul><p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x6570;&#x5B66;&#x5F52;&#x7EB3;&#x6CD5;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x9886;&#x57DF;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x79F0;&#x4F5C;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x3002;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x505A;&#x7684;&#x5C31;&#x662F;&#x5148;&#x63D0;&#x51FA;&#x4E00;&#x4E2A;&#x731C;&#x60F3;&#xFF0C;&#x5148;&#x770B;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x5426;&#x7B26;&#x5408;&#x731C;&#x60F3;&#x3002;&#x7136;&#x540E;&#x5047;&#x8BBE;&#x95EE;&#x9898;&#x67D0;&#x7ED3;&#x6784;&#x7B26;&#x5408;&#x8FD9;&#x4E2A;&#x731C;&#x60F3;&#xFF0C;&#x6700;&#x540E;&#x770B;&#x5D4C;&#x5957;&#x7B26;&#x5408;&#x8FD9;&#x4E2A;&#x731C;&#x60F3;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x5426;&#x4E5F;&#x7B26;&#x5408;&#x731C;&#x60F3;&#xFF0C;&#x5982;&#x679C;&#x57FA;&#x672C;&#x673A;&#x6784;&#x7B26;&#x5408;&#xFF0C;&#x5D4C;&#x5957;&#x7ED3;&#x6784;&#x4E5F;&#x7B26;&#x5408;&#xFF0C;&#x8BC1;&#x660E;&#x731C;&#x60F3;&#x662F;&#x6B63;&#x786E;&#x7684;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x6709;&#x4E2A;&#x86CB;&#x75BC;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x731C;&#x5BF9;&#x7B54;&#x6848;&#xFF0C;&#x518D;&#x8BC1;&#x660E;&#x4ED6;&#x3002;</p><script type="math/tex; mode=display">某递归公式为T(n)=4T(\frac{n}{2})+n，且T(1)=O(1)</script><p>&#x7B2C;&#x4E00;&#x6B65;&#x5148;&#x505A;&#x731C;&#x60F3;&#xFF0C;&#x5F80;&#x5F80;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x6700;&#x56F0;&#x96BE;&#x7684;&#xFF0C;&#x731C;&#x60F3;</p><script type="math/tex; mode=display">T(n)=O(n^2)，且T(n)\le c_1n^2-n \\对于n=1，T(1)=c_1-1，符合T(1)=O(1) \\假设T(\frac{n}{2})成立，则T(n)=4(c_1\frac{n^2}{4}-\frac{n}{2})+n\\T(n) =c_1n^2-n \\T(n)\leq c_1n</script><p>&#x731C;&#x60F3;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6570;&#x5B66;&#x6280;&#x5DE7;&#xFF0C;&#x60F3;&#x529E;&#x6CD5;&#x6D88;&#x9664;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E2D;&#x7684;n&#xFF0C;&#x53BB;&#x5F97;&#x51FA;&#x6700;&#x540E;&#x7684;&#x8BC1;&#x660E;&#x7ED3;&#x679C;&#xFF0C;&#x5982;&#x679C;&#x731C;</p><script type="math/tex; mode=display">T(n)\le c_1n^2</script><p>&#x4F1A;&#x65E0;&#x6CD5;&#x5F97;&#x51FA;&#x6B63;&#x786E;&#x7684;&#x8BC1;&#x660E;&#x3002;</p><p>&#x7528;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x8BC1;&#x660E;&#x9012;&#x5F52;&#x6811;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p><script type="math/tex; mode=display">T(n) = 2T(\frac{n}{2})+n ，且T(1)=O(1) \\猜想:T(n) = O(n\log_{2}n)，且T(n)\le c_1n\log_{2}n+n \\对于n=1时，T(1)=1，符合T(1)=O(1) \\假设对于T(\frac{n}{2})成立，则T(n)证明如下：\\T(n)=2(c_1\frac{n}{2}\log_{2}\frac{n}{2} + \frac{n}{2})+n \\T(n) = 2(c_1\frac{n}{2}\log_{2}{n}-c_1\frac{n}{2}+\frac{n}{2})+n \\T(n)=c_1n\log_{2}n-c_1n+2n \\T(n)=c_1n\log_{2}n+(2-c_1)n \\存在c_1>1时，T(n)\le c_1nlog_{2}{n}+n</script><p>&#x540C;&#x6837;&#xFF0C;&#x731C;&#x7684;&#x65F6;&#x5019;&#x8981;&#x8FD0;&#x7528;&#x4E9B;&#x6570;&#x5B66;&#x6280;&#x5DE7;&#xFF0C;&#x5982;&#x679C;&#x731C;</p><script type="math/tex; mode=display">T(n)\le\log_{2}n</script><p>&#x5F97;&#x51FA;T(1)&lt;=0&#xFF0C;&#x5C31;&#x65E0;&#x6CD5;&#x5F97;&#x51FA;&#x6B63;&#x786E;&#x7684;&#x8BC1;&#x660E;&#x4E86;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x521A;&#x8BC1;&#x660E;&#x4E86;&#x4E00;&#x904D;&#x5FEB;&#x6392;&#x548C;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><ul><li>&#x4E3B;&#x5B9A;&#x7406;</li></ul><p>&#x4E3B;&#x5B9A;&#x7406;&#x4F7F;&#x7528;&#x6709;&#x4E00;&#x5B9A;&#x8303;&#x56F4;&#xFF0C;&#x53EA;&#x80FD;&#x5BF9;&#x5F62;&#x5982;&#x4EE5;&#x4E0B;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=aT(\frac{n}{b})+f(n)</script><p> &#x4E3B;&#x5B9A;&#x7406;&#x662F;&#x4ECE;&#x9012;&#x5F52;&#x6811;&#x65B9;&#x6CD5;&#x4E2D;&#x603B;&#x7ED3;&#x51FA;&#x6765;&#x7684;&#x7ECF;&#x9A8C;&#x516C;&#x5F0F;&#xFF0C;&#x4E0B;&#x56FE;&#x4E3A;&#x4E0A;&#x9762;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x7684;&#x901A;&#x9879;&#x9012;&#x5F52;&#x6811;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_&#x4E3B;&#x5B9A;&#x7406;&#x8BC1;&#x660E;&#x9012;&#x5F52;&#x6811;.jpg" alt="&#x4E3B;&#x5B9A;&#x7406;&#x8BC1;&#x660E;&#x9012;&#x5F52;&#x6811;"></p><script type="math/tex; mode=display">树高为\log_{b}n，叶子节点的个数为a^{\log_{b}n}，即n^{\log_{b}a}，叶子节点层的复杂度为Θ(n^{\log_{b}a})</script><p>&#x4ECE;&#x56FE;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4ECE;f(n)&#x4F38;&#x5C55;&#x5230;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5C42;&#xFF0C;&#x6BCF;&#x5C42;&#x8282;&#x70B9;&#x7684;&#x89C4;&#x6A21;&#x4E3A;&#x4E0A;&#x5C42;&#x8282;&#x70B9;&#x4E58;&#x4EE5;a&#x9664;&#x4EE5;b&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5E38;&#x6570;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;f(n)&#x5230;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5C42;&#x8981;&#x4E0D;&#x7136;&#x9012;&#x589E;&#xFF0C;&#x8981;&#x4E0D;&#x7136;&#x9012;&#x51CF;&#xFF0C;&#x8981;&#x4E0D;&#x7136;&#x6574;&#x4E2A;&#x9012;&#x5F52;&#x6811;&#x4E0D;&#x540C;&#x5C42;&#x6570;&#x51E0;&#x4E4E;&#x76F8;&#x7B49;&#x3002;</p><p>&#x4E3B;&#x5B9A;&#x7406;&#x5C31;&#x662F;&#x6BD4;&#x8F83;f(n)&#x4E0E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x5728;&#x5C06;&#x6240;&#x6709;&#x8282;&#x70B9;&#x7D2F;&#x52A0;&#x6C42;&#x548C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x627E;&#x51FA;&#x8C01;&#x662F;&#x9AD8;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x6574;&#x4F53;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x7531;&#x9AD8;&#x9636;&#x65E0;&#x7A77;&#x5927;&#x51FD;&#x6570;&#x51B3;&#x5B9A;:</p><p>&#x5F53;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x590D;&#x6742;&#x5EA6;&#x8F83;&#x5927;&#x65F6;&#xFF0C;T(n)&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><script type="math/tex; mode=display">T(n)=O(n^{\log_{b}a})</script><p>&#x5F53;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x548C;f(n)&#x590D;&#x6742;&#x5EA6;&#x51E0;&#x4E4E;&#x76F8;&#x7B49;&#x65F6;&#xFF0C;T(n)&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x590D;&#x6742;&#x5EA6;&#x4E58;&#x4E0A;&#x6811;&#x9AD8;&#xFF0C;&#x5E76;&#x4E14;&#x5FFD;&#x7565;b&#x5E38;&#x6570;&#x7684;&#x5927;&#x5C0F;&#x3002;</p><script type="math/tex; mode=display">T(n)=Θ(n^{\log_{b}a}\log_{2}n)</script><p>&#x5F53;f(n)&#x590D;&#x6742;&#x5EA6;&#x8F83;&#x5927;&#x65F6;&#xFF0C;T(n)&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x662F;f(n)&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><script type="math/tex; mode=display">T(n)=Θ(f(n))</script><p>&#x4E3B;&#x5B9A;&#x7406;&#x5728;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x9002;&#x7528;&#xFF0C;&#x5C31;&#x662F;&#x53F6;&#x5B50;&#x5C42;&#x8282;&#x70B9;&#x590D;&#x6742;&#x5EA6;&#x4E0E;f(n)&#x590D;&#x6742;&#x5EA6;&#x76F8;&#x5DEE;&#x591A;&#x9879;&#x5F0F;&#x7EA7;&#x522B;&#x7684;&#x65F6;&#x5019;&#x3002;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x4E24;&#x79CD;&#x60C5;&#x51B5;</p><script type="math/tex; mode=display">O(叶子层)=n,O(f(n))=n\log_{2}n或O(叶子层)=n,O(f(n))=\frac{n}{\log_{2}n}</script><ul><li>&#x603B;&#x7ED3;</li></ul><p>&#x5728;&#x5E73;&#x65F6;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x78B0;&#x5230;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x4E0D;&#x4F1A;&#x592A;&#x590D;&#x6742;&#x3002;&#x5927;&#x90E8;&#x5206;&#x662F;&#x4E3B;&#x5B9A;&#x7406;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x7684;&#x3002;&#x6BD4;&#x5982;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=2T(\frac{n}{4})+n^2 \\ n^{\log_{b}{a}}=O(\sqrt{n}) \\ f(n)=Θ(n^2) \\ 根据主定理，T(n)=Θ(n^2)</script><p>&#x4E3B;&#x5B9A;&#x7406;&#x4E0D;&#x80FD;&#x89E3;&#x51B3;&#xFF0C;&#x5C31;&#x8981;&#x731C;&#x51FA;&#x7B54;&#x6848;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x8BC1;&#x660E;&#xFF0C;&#x6709;&#x4E9B;&#x95EE;&#x9898;&#x6BD4;&#x8F83;&#x597D;&#x731C;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><script type="math/tex; mode=display">T_1(n)=T_1(\frac{n}{2})+T_1(\frac{n}{4})+T_1(\frac{n}{8})+n \\ 我们熟悉递归T_2，T_2(n)=2T_2(\frac{n}{2})+n \\ T_2和T_1比，2 \cdot\frac{n}{2} > \frac{n}{2}+\frac{n}{4}+\frac{n}{8}</script><p>T2&#x6BCF;&#x5C42;&#x9012;&#x589E;&#x7684;&#x66F4;&#x591A;&#xFF0C;&#x90A3;&#x4E48;&#x53F6;&#x5B50;&#x5C42;&#x8282;&#x70B9;&#x590D;&#x6742;&#x5EA6;&#x80AF;&#x5B9A;&#x8981;&#x9AD8;&#x3002;&#x5DF2;&#x77E5;T2&#x7684;&#x53F6;&#x5B50;&#x5C42;&#x8282;&#x70B9;&#x548C;f(n)&#x51E0;&#x4E4E;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;T1&#x53F6;&#x5B50;&#x5C42;&#x8282;&#x70B9;&#x590D;&#x6742;&#x5EA6;&#x5E94;&#x8BE5;&#x6BD4;f(n)&#x5C0F;&#x3002;&#x5219;&#x53EF;&#x731C;&#x6240;&#x6C42;&#x5F0F;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#x398;(n)&#x3002;&#x518D;&#x901A;&#x8FC7;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x8BC1;&#x660E;&#x3002;</p><p>&#x8FD8;&#x6709;&#x5F62;&#x5982;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=T(n-1)+\frac{1}{n}</script><p>&#x5BF9;&#x4E8E;&#x8FD9;&#x79CD;T(n)&#x9012;&#x5F52;&#x4E2D;&#x5305;&#x542B;T(n-1)&#x7684;&#xFF0C;&#x9012;&#x5F52;&#x7684;&#x516C;&#x5F0F;&#x53EF;&#x5316;&#x4E3A;</p><script type="math/tex; mode=display">T(n)=\sum_{i=1}^{n}f(i)</script><p>&#x672C;&#x4F8B;&#x4E3A;&#x8C03;&#x548C;&#x7EA7;&#x6570;</p><script type="math/tex; mode=display">T(n)=\sum_{i=1}^{n}\frac{1}{i}=\log_{2}{n}+c = Θ(\log_{2}{n})</script><p>&#x518D;&#x8FDB;&#x884C;&#x7ED3;&#x6784;&#x5F52;&#x7EB3;&#x6CD5;&#x8BC1;&#x660E;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x3002;</p><p>&#x590D;&#x6742;&#x7684;&#xFF0C;&#x4E0D;&#x597D;&#x731C;&#x7684;&#xFF0C;&#x5C31;&#x7528;&#x9012;&#x5F52;&#x6811;&#x89E3;:</p><script type="math/tex; mode=display">T(n)=\sum_{i=0}^{递归树高 }\cdot c\cdot每层的节点数\cdot此层节点的复杂度</script><p>&#x6BD4;&#x5982;:</p><script type="math/tex; mode=display">T(n)=4T(\frac{n}{2}+2)+n \\ T(n)=\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot4^i\cdot(\frac{n}{2^i}+2) \\ T(n)=\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot (n\cdot2^i+2\cdot4^i) \\ T(n)=c\cdot n\sum_{i=0}^{\log_{2}{n}}2^i+2\cdot c\sum_{i=0}^{\log_{2}{n}}4^i \\ T(n)=c\cdot n(\frac{2^{\log_{2}{n}+1}-1}{2-1})+2\cdot c(\frac{4^{\log_{2}{n}+1}-1}{4-1}) \\ T(n)=c\cdot n(2n-1)+\frac{2\cdot c\cdot(4n^2-1)}{3} \\ T(n)=2cn^2-cn+\frac{8}{3}\cdot c\cdot n^2-\frac{2}{3}c \\ T(n)=O(n^2)</script><p>&#x8FD8;&#x6709;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=4T(\frac{n}{2})+n^2\log_{2}{n} \\ n^{\log_{b}{a}}=O(n^2)，f(n)=O(n^2\log_{2}{n})\\ n^{\log_{b}{a}}和f(n)相差多项式级别，所以主定理不适用，那就使用递归树方法 \\ T(n)=\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot4^i\cdot\frac{n}{2^i}^2\cdot\log_{2}{\frac{n}{2^i}} \\ T(n)=\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot n^2\cdot(\log_{2}{n}-i) \\ T(n)=\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot n^2\cdot\log_{2}{n}-\sum_{i=0}^{\log_{2}{n}}\cdot c\cdot n^2\cdot i \\ T(n)=c\cdot n^2\cdot\log_{2}{n}\cdot\log_{2}{n}-c\cdot n^2\cdot\frac{(1+\log_{2}{n})\log_{2}{n}}{2}  \\ T(n)=c\cdot n^2\cdot\log_{2}{n}\cdot\log_{2}{n}-c\cdot n^2\cdot\log_{2}{n} \\ T(n)=O(n^2\log_{2}{n}\log_{2}{n})</script><p>&#x6700;&#x96BE;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x53D8;&#x91CF;&#x8C03;&#x6362;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x539F;&#x5173;&#x7CFB;&#x5F0F;&#x8F6C;&#x6362;&#x6210;&#x6211;&#x4EEC;&#x719F;&#x6089;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5047;&#x5982;&#x67D0;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=2T(\sqrt{n})+\log_{2}{n} \\ 令m=\log_{2}{n}，则T(2^m)=2T(2^{\frac{m}{2}})+m \\ 令S(m)为关于m的函数，则S(m)=2S(\frac{m}{2})+m \\ 然后用主定理得出S(m)=O(m\log_{2}{m}) \\ 再将m置换回n，T(n)=O(\log_{2}{n}\log_{2}{\log_{2}{n}})</script><p>&#x8FD8;&#x6709;&#xFF1A;</p><script type="math/tex; mode=display">T(n)=\sqrt{n}T(\sqrt{n})+n \\ \frac{T(n)}{n}=\frac{T(\sqrt{n})}{\sqrt{n}}+1 \\ 令S(n)=\frac{T(n)}{n}，则S(n)=S(\sqrt{n})+1 \\ 令n=2^{2^m}，则S(2^{2^m})=S(2^{2^{m-1}})+1 \\ 令S(m)为关于m的函数，则S(m)=S(m-1)+1 \\ S(m)=O(m)，则S(n)=O(\log_{2}{\log_{2}{n}}) \\ T(n)=O(n\log_{2}{\log_{2}{n}})</script><h2 id="&#x6982;&#x7387;&#x5206;&#x6790;"><a href="#&#x6982;&#x7387;&#x5206;&#x6790;" class="headerlink" title="&#x6982;&#x7387;&#x5206;&#x6790;"></a>&#x6982;&#x7387;&#x5206;&#x6790;</h2><p>&#x6982;&#x7387;&#x5206;&#x6790;&#x4F1A;&#x4F7F;&#x7528;&#x5E94;&#x7528;&#x6982;&#x7387;&#x7684;&#x6982;&#x5FF5;&#x53BB;&#x5206;&#x6790;&#x7B97;&#x6CD5;&#xFF0C;&#x57FA;&#x672C;&#x53EA;&#x51FA;&#x73B0;&#x5728;&#x5BF9;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x7684;&#x5206;&#x6790;&#x3002;&#x800C;&#x4F7F;&#x7528;&#x4E86;&#x968F;&#x673A;&#x6570;&#x751F;&#x6210;&#x5668;&#x53BB;&#x5F71;&#x54CD;&#x7B97;&#x6CD5;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x5C31;&#x88AB;&#x8BA4;&#x4F5C;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x3002;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x5C06;&#x8F93;&#x5165;&#x7684;&#x6A21;&#x5F0F;&#x6D88;&#x9664;&#xFF0C;&#x968F;&#x673A;&#x5316;&#x8F93;&#x5165;&#xFF0C;&#x6BD4;&#x5982;&#x5FEB;&#x6392;&#x968F;&#x673A;&#x5212;&#x5206;pivot&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x7B97;&#x6CD5;&#x672C;&#x8EAB;&#x505A;&#x9009;&#x62E9;&#x65F6;&#x968F;&#x673A;&#x5316;&#xFF0C;&#x6BD4;&#x5982;&#x8DF3;&#x8868;&#x968F;&#x673A;&#x9009;&#x62E9;&#x589E;&#x957F;&#x5C42;&#x6570;&#x3002;</p><p>&#x7B97;&#x5BFC;&#x4EE5;&#x5FEB;&#x6392;&#x4E3A;&#x4F8B;&#x8FDB;&#x884C;&#x6982;&#x7387;&#x5206;&#x6790;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x662F;&#x5B8C;&#x6574;&#x7684;&#x8BC1;&#x660E;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x4E00;&#x4E0B;&#x4E0E;&#x6982;&#x7387;&#x5206;&#x6790;&#x6709;&#x5173;&#x7684;&#x5173;&#x952E;&#x90E8;&#x5206;&#x3002;</p><p>&#x5982;&#x679C;&#x8F93;&#x5165;&#x662F;&#x5DF2;&#x6392;&#x597D;&#x5E8F;&#x6570;&#x7EC4;&#x548C;&#x9006;&#x5E8F;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6B64;&#x65F6;&#x4E3A;&#x5FEB;&#x6392;&#x7684;&#x6700;&#x574F;&#x60C5;&#x51B5;&#xFF0C;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x53D8;&#x4E3A;</p><script type="math/tex; mode=display">T(n)=T(n-1)+Θ(n)，T(n)=Θ(n^2)</script><p>&#x5982;&#x679C;&#x8F93;&#x5165;&#x4F7F;&#x6BCF;&#x6B21;&#x5212;&#x5206;&#x70B9;&#x90FD;&#x5728;&#x6570;&#x7EC4;&#x7684;&#x4E2D;&#x95F4;&#xFF0C;&#x6B64;&#x65F6;&#x4E3A;&#x5FEB;&#x6392;&#x7684;&#x6700;&#x597D;&#x60C5;&#x51B5;&#xFF0C;&#x9012;&#x5F52;&#x516C;&#x5F0F;&#x4E3A;</p><script type="math/tex; mode=display">T(n)=2T(\frac{n}{2})+Θ(n)，T(n)=Θ(n\log_{2}{n})</script><p>&#x90A3;&#x8FD9;&#x4E48;&#x591A;&#x7684;&#x8F93;&#x5165;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x4F55;&#x6C42;&#x51FA;&#x5FEB;&#x6392;&#x7684;&#x5E73;&#x5747;&#x60C5;&#x51B5;&#x590D;&#x6742;&#x5EA6;&#x5462;&#xFF1F;&#x5C06;&#x8F93;&#x5165;&#x968F;&#x673A;&#x5316;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x8F93;&#x5165;&#x4E3A;&#x5747;&#x5300;&#x5206;&#x5E03;&#xFF0C;&#x6C42;&#x51FA;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x8F93;&#x5165;&#x7684;&#x6982;&#x7387;&#x4E58;&#x4EE5;&#x5176;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x603B;&#x548C;&#xFF0C;&#x5C31;&#x662F;&#x671F;&#x671B;&#x503C;&#xFF0C;&#x5C31;&#x6C42;&#x51FA;&#x4E86;&#x5FEB;&#x6392;&#x7684;&#x5E73;&#x5747;&#x60C5;&#x51B5;&#x590D;&#x6742;&#x5EA6;&#x3002;</p><script type="math/tex; mode=display">设X_k为k点被选择为pivot的事件，则k被选中的次数X_k=\begin{equation}  \left\{               \begin{array}{lr}               1 & 如果k被选为pivot \\               0 & 如果k未被选为pivot \\               \end{array}  \right.  \end{equation} \\ 期望E(X_k)=0\cdot Pr(k被未选中的概率)+1\cdot Pr(k被选中的概率) =\frac{1}{n} \\ pviot可被选择的范围为[0,n-1]，当选择pviot点为k时\\递归公式可转化为T(n)=T(k)+T(n-k-1)+Θ(n) \\ 则T(n)的期望值为所有可能的期望值总和\\即E(T(n))=\sum_{k=0}^{n-1}E[X_k(T(k)+T(n-k-1)+Θ(n))] \\ 而根据两个互相独立的随机变量的乘积的期望等于这两个随机变量期望的乘积\\E(T(n))可以转化为，E(T(n))=\sum_{k=0}^{n-1}E(X_k)\cdot E(T(k)+T(n-k-1)+Θ(n)) \\ 又因为E(X_k)=\frac{1}{n}，T(k)与T(n-k-1)在k从0到n-1的累加中是互相逆序且结果相同 \\ E(T(n))可以转化为，E(T(n))=\frac{2}{n}\sum_{k=0}^{n-1}E(T(k)+Θ(n)) \\ 然后用数学归纳法证明出，E(T(n))\leq n\log_{2}{n}\\就可以得出快排的平均情况复杂度为O(n\log_{2}{n})</script><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5BF9;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x7684;&#x6982;&#x7387;&#x5206;&#x6790;&#x5C31;&#x662F;&#x5728;&#x6C42;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x7684;&#x671F;&#x671B;&#x3002;</p><h2 id="&#x644A;&#x8FD8;&#x5206;&#x6790;"><a href="#&#x644A;&#x8FD8;&#x5206;&#x6790;" class="headerlink" title="&#x644A;&#x8FD8;&#x5206;&#x6790;"></a>&#x644A;&#x8FD8;&#x5206;&#x6790;</h2><p>&#x6709;&#x4E9B;&#x7B97;&#x6CD5;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6216;&#x8005;&#x6B65;&#x9AA4;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x6539;&#x53D8;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x8981;&#x60F3;&#x66F4;&#x52A0;&#x4E25;&#x8C28;&#x7684;&#x5206;&#x6790;&#x7B97;&#x6CD5;&#x5C31;&#x4E0D;&#x80FD;&#x6309;&#x4E00;&#x79CD;&#x590D;&#x6742;&#x5EA6;&#x6765;&#x7B80;&#x5355;&#x5206;&#x6790;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x51E1;&#x662F;&#x9700;&#x8981;&#x6269;&#x5BB9;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5176;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x5C31;&#x8981;&#x5305;&#x542B;&#x6269;&#x5BB9;&#x7684;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x54C8;&#x5E0C;&#x8868;&#x63D2;&#x5165;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x398;(1)&#xFF0C;&#x6269;&#x5BB9;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x398;(n)&#xFF0C;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x80FD;&#x5FFD;&#x7565;&#x6269;&#x5BB9;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x644A;&#x8FD8;&#x5206;&#x6790;&#x3002;&#x644A;&#x8FD8;&#x5206;&#x6790;&#x5C31;&#x662F;&#x5C06;&#x4EE3;&#x4EF7;&#x8F83;&#x9AD8;&#x64CD;&#x4F5C;&#x7684;&#x4EE3;&#x4EF7;&#x5E73;&#x644A;&#x5230;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6C42;&#x5E73;&#x5747;&#x4EE3;&#x4EF7;&#x3002;&#x644A;&#x8FD8;&#x5206;&#x6790;&#x6709;&#x4E09;&#x79CD;&#x5206;&#x6790;&#x65B9;&#x6CD5;&#xFF0C;&#x805A;&#x96C6;&#x6CD5;&#x3001;&#x8BB0;&#x8D26;&#x6CD5;&#x3001;&#x52BF;&#x80FD;&#x6CD5;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x7528;&#x8FD9;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#x5206;&#x6790;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x63D2;&#x5165;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x5047;&#x8BBE;&#x54C8;&#x5E0C;&#x8868;&#x4EE5;2&#x7684;&#x5E42;&#x6570;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#x3002;</p><ul><li>&#x805A;&#x96C6;&#x6CD5;</li></ul><p>&#x805A;&#x96C6;&#x6CD5;&#x5C31;&#x662F;&#x5C06;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x7684;&#x5B9E;&#x9645;&#x590D;&#x6742;&#x5EA6;&#x52A0;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x9664;&#x6CD5;&#x6C42;&#x5E73;&#x5747;&#x3002;</p><script type="math/tex; mode=display">设C_i为第i个插入的代价，则C_i=\begin{equation}  \left\{               \begin{array}{lr}               i & 如果i-1为2的幂数 \\               1& 如果i-1不为2的幂数\\               \end{array}  \right.  \end{equation} \\ 则C_{insert-total}(n)=\sum_{i=1}^{n}C_i=n+\sum_{j=0}^{\log_{2}{n-1}}2^j\leq 3n=Θ(n) \\ C_{insert-average}=\frac{C_{insert-total}}{n}=Θ(1)</script><p>&#x7ED3;&#x8BBA;&#x4E3A;&#xFF0C;&#x5E73;&#x644A;&#x6269;&#x5BB9;&#x7684;&#x4EE3;&#x4EF7;&#x7ED9;&#x6BCF;&#x4E2A;&#x63D2;&#x5165;&#x540E;&#xFF0C;&#x5E73;&#x5747;&#x7684;&#x63D2;&#x5165;&#x4EE3;&#x4EF7;&#x4E3A;&#x398;(1)&#x3002;</p><ul><li>&#x8BB0;&#x8D26;&#x6CD5;</li></ul><p>&#x8BB0;&#x8D26;&#x6CD5;&#x5C31;&#x662F;&#x7ED9;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;&#x4E00;&#x4E2A;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x62EC;&#x9884;&#x652F;&#x7684;&#x6269;&#x5BB9;&#x4EE3;&#x4EF7;&#xFF0C;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;&#x5C06;&#x9884;&#x652F;&#x7684;&#x4EE3;&#x4EF7;&#x5148;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#xFF0C;&#x7B49;&#x5230;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x518D;&#x53D6;&#x51FA;&#x9884;&#x652F;&#x7684;&#x6269;&#x5BB9;&#x4EE3;&#x4EF7;&#x82B1;&#x8D39;&#x3002;</p><p>&#x7ED9;&#x6BCF;&#x4E2A;&#x63D2;&#x5165;&#x64CD;&#x4F5C;3&#x5355;&#x4F4D;&#x7684;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#xFF0C;&#x6BCF;&#x4E2A;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x4F1A;&#x82B1;&#x8D39;&#x4E00;&#x4E2A;&#x5355;&#x4F4D;&#x4EE3;&#x4EF7;&#x6765;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#xFF0C;&#x5B58;&#x50A8;&#x4E24;&#x4E2A;&#x5355;&#x4F4D;&#x4EE3;&#x4EF7;&#x3002;&#x5F53;&#x6269;&#x5BB9;&#x53D1;&#x751F;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x4ECE;&#x5B58;&#x50A8;&#x7684;&#x4EE3;&#x4EF7;&#x6263;&#x9664;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x50A8;&#x4E0D;&#x591F;&#x6263;&#x7684;&#xFF0C;&#x5C31;&#x8868;&#x660E;&#x7ED9;&#x6BCF;&#x4E2A;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x7684;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#x5C11;&#x4E86;&#xFF0C;&#x6CA1;&#x6CD5;&#x7EE7;&#x7EED;&#x5206;&#x6790;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x8981;&#x6C42;&#xFF1A;</p><script type="math/tex; mode=display">设\mathop{C_i}\limits_{}^{\verb!^!}为第i个插入的摊还代价，\sum_{i=1}^{n}C_i\leq\sum_{i=1}^{n}\mathop{C_i}\limits_{}^{\verb!^!}，对于所有的n</script><p>&#x5047;&#x5982;&#x8868;&#x4E2D;&#x7684;&#x5BB9;&#x91CF;&#x4E3A;m&#xFF0C;&#x6709;m/2&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x5982;&#x679C;&#x6211;&#x7ED9;&#x6BCF;&#x4E2A;&#x64CD;&#x4F5C;3&#x5355;&#x4F4D;&#x7684;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#xFF0C;&#x7B49;&#x5230;&#x8868;&#x4E2D;m&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x9700;&#x8981;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5DF2;&#x7ECF;&#x5B58;&#x50A8;&#x4E86;2&#x4E58;&#x4EE5;m/2&#x4E2A;&#x4EE3;&#x4EF7;&#x3002;&#x4E5F;&#x5C31;&#x8BF4;&#x6BCF;&#x5230;&#x9700;&#x8981;&#x6269;&#x5BB9;&#x65F6;&#xFF0C;&#x6269;&#x5BB9;&#x4F1A;&#x6B63;&#x597D;&#x5C06;&#x5B58;&#x50A8;&#x7684;&#x4EE3;&#x4EF7;&#x5168;&#x90E8;&#x7528;&#x5149;&#xFF0C;&#x7136;&#x540E;&#x5269;&#x4E0B;&#x6B64;&#x6B65;&#x65B0;&#x7ED9;&#x7684;2&#x5355;&#x4F4D;&#x4EE3;&#x4EF7;&#xFF0C;&#x8868;&#x7684;&#x63D2;&#x5165;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x8FD9;&#x6837;&#x5FAA;&#x73AF;&#x4E0B;&#x53BB;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x6211;&#x5C31;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x4E3A;&#x398;(3)&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x398;(1)&#x3002;</p><ul><li>&#x52BF;&#x80FD;&#x6CD5;</li></ul><p>&#x5728;&#x8BB0;&#x8D26;&#x6CD5;&#x4E2D;&#xFF0C;&#x5148;&#x5047;&#x5B9A;&#x4E86;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#xFF0C;&#x7136;&#x540E;&#x5206;&#x6790;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5B58;&#x50A8;&#x7684;&#x4EE3;&#x4EF7;&#x3002;&#x800C;&#x52BF;&#x80FD;&#x6CD5;&#x6B63;&#x597D;&#x76F8;&#x53CD;&#xFF0C;&#x5148;&#x5047;&#x5B9A;&#x5B58;&#x50A8;&#x7684;&#x4EE3;&#x4EF7;&#xFF0C;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x644A;&#x8FD8;&#x4EE3;&#x4EF7;&#x3002;</p><p>&#x5C06;&#x5B58;&#x50A8;&#x7684;&#x4EE3;&#x4EF7;&#x7528;&#x52BF;&#x80FD;&#x6765;&#x8868;&#x793A;(&#x771F;&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x5E2E;&#x4EBA;&#x662F;&#x600E;&#x4E48;&#x60F3;&#x5230;&#x7684;&#x3002;&#x3002;)&#xFF0C;&#x5E76;&#x8BA9;&#x6BCF;&#x4E00;&#x6B65;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6620;&#x5C04;&#x6210;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x7528;<script type="math/tex">\phi</script>&#x51FD;&#x6570;&#x8868;&#x793A;&#x52BF;&#x80FD;&#x51FD;&#x6570;&#xFF0C;<script type="math/tex">D</script>&#x8868;&#x793A;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x4F1A;&#x8BA9;&#x6570;&#x636E;&#x7ED3;&#x6784;<script type="math/tex">D_{i-1}->D_i</script>&#x3002;&#x5BF9;&#x4E8E;<script type="math/tex">\phi</script>&#x51FD;&#x6570;&#xFF0C;&#x6709;<script type="math/tex">\mathop{C_i}\limits_{}^{\verb!^!}=c_i+\phi(D_i)-\phi(D_{i-1})</script>&#xFF0C;&#x5373;&#x5E73;&#x644A;&#x4EE3;&#x4EF7;=&#x5B9E;&#x9645;&#x4EE3;&#x4EF7;+&#x52BF;&#x80FD;&#x53D8;&#x5316;&#x3002;</p><script type="math/tex; mode=display">总摊还代价为，\sum_{i=1}^{n}\mathop{C_i}\limits_{}^{\verb!^!}=\sum_{i=1}^{n}(C_i+\phi(D_i)-\phi(D_{i-1}))=\sum_{i=1}^{n}C_i+\phi(D_n)-\phi(D_0)\geq \sum_{i=1}^{n}C_i \\ 假设每一步存储的代价，\phi(D_i)=2^i-2^{\log_{2}{i}} \\ \mathop{C_i}\limits_{}^{\verb!^!}=c_i+\phi(D_i)-\phi(D_{i-1}） \\ =\begin{equation}  \left\{               \begin{array}{lr}               i & i-1是2的幂数\\               1 & i-1不是2的幂数\\               \end{array}  \right.  \end{equation} +(2^i-2^{\log_{2}{i}})-(2^{i-1}-2^{\log_{2}{i-1}}) \\</script><script type="math/tex; mode=display">=\begin{equation}  \left\{               \begin{array}{lr}               i & i-1是2的幂数\\               1 & i-1不是2的幂数\\               \end{array}  \right.  \end{equation} +2-2^{\log_{2}{i}}+2^{\log_{2}{i-1}}</script><script type="math/tex; mode=display">=\begin{equation}  \left\{               \begin{array}{lr}               3 & i-1是2的幂数\\               3 & i-1不是2的幂数\\               \end{array}  \right.  \end{equation} \\ 即\mathop{C_i}\limits_{}^{\verb!^!}=3，则插入的复杂度为Θ(1)</script><p><br></p><blockquote><p>&#x5F53;&#x5B66;&#x4F1A;&#x5982;&#x4F55;&#x8861;&#x91CF;&#x7B97;&#x6CD5;&#x597D;&#x574F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x8BE5;&#x627E;&#x70B9;&#x7B97;&#x6CD5;&#x6765;&#x8861;&#x91CF;&#x4E86;&#x3002;</p></blockquote><p><br></p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>&#x7B97;&#x5BFC;&#x7684;&#x7B2C;&#x56DB;&#x7AE0;&#x4E60;&#x9898; <a href="http://atekihcan.github.io/CLRS/" target="_blank" rel="noopener">http://atekihcan.github.io/CLRS/</a></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>算法火花</title>
      <link href="/%E7%AE%97%E6%B3%95%E7%81%AB%E8%8A%B1/"/>
      <url>/%E7%AE%97%E6%B3%95%E7%81%AB%E8%8A%B1/</url>
      <content type="html"><![CDATA[<blockquote><p>&#x8FF8;&#x5C04;&#x7684;&#x706B;&#x82B1;</p></blockquote><p>&#x672C;&#x7BC7;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x65F6;&#x7684;&#x65B9;&#x6CD5;&#x8BBA;&#x3002;</p><a id="more"></a><p><br></p><h2 id="&#x5B66;&#x4E60;&#x5DF2;&#x6709;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;"><a href="#&#x5B66;&#x4E60;&#x5DF2;&#x6709;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;" class="headerlink" title="&#x5B66;&#x4E60;&#x5DF2;&#x6709;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;"></a>&#x5B66;&#x4E60;&#x5DF2;&#x6709;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;</h2><p>&#x5728;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x4EE5;&#x5B66;&#x4E60;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x3002;&#x6DF1;&#x5165;&#x7814;&#x7A76;&#x8FC7;&#x7B97;&#x6CD5;&#x7684;&#x540C;&#x5B66;&#x8DDF;&#x6211;&#x8BF4;&#xFF0C;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x8981;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x80CC;&#x540E;&#x7684;&#x601D;&#x60F3;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8FD9;&#x8BDD;&#x8FD8;&#x662F;&#x50CF;&#x53E4;&#x5BFA;&#x91CC;&#x548C;&#x5C1A;&#x8BF4;&#x51FA;&#x6765;&#x7684;&#x8BDD;&#xFF0C;&#x597D;&#x50CF;&#x7B97;&#x6CD5;&#x9700;&#x8981;&#x201C;&#x609F;&#x201D;&#xFF0C;&#x5FC5;&#x987B;&#x4FEE;&#x70BC;&#x591A;&#x5E74;&#x624D;&#x80FD;&#x7406;&#x89E3;&#x3002;&#x8BDD;&#x542C;&#x4E0A;&#x53BB;&#x597D;&#x50CF;&#x6709;&#x9053;&#x7406;&#x7684;&#x6837;&#x5B50;&#xFF0C;&#x505A;&#x7684;&#x65F6;&#x5019;&#x4F9D;&#x7136;&#x505A;&#x4E0D;&#x597D;&#x3002;&#x6700;&#x540E;&#x843D;&#x5F97;&#xFF0C;&#x7ECF;&#x5178;&#x786E;&#x5B9E;&#x7B97;&#x6CD5;&#x8BB0;&#x4E0B;&#x6765;&#x4E86;&#x3002;&#x51FA;&#x73B0;&#x4E86;&#x548C;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x4E00;&#x6837;&#x7684;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x6211;&#x76F4;&#x63A5;&#x5C06;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x5957;&#x4E0A;&#x5C31;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x81EA;&#x6211;&#x611F;&#x89C9;&#x7B97;&#x6CD5;&#x5F88;&#x5F3A;&#x3002;&#x51FA;&#x73B0;&#x4E86;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x53D8;&#x79CD;&#xFF0C;&#x50BB;&#x773C;&#x4E86;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x7B97;&#x6CD5;&#x80FD;&#x529B;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x884C;&#x3002;</p><p>&#x8FD9;&#x662F;&#x91CD;&#x65B0;&#x601D;&#x8003;&#x81EA;&#x5DF1;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x7684;&#x8FC7;&#x7A0B;&#x548C;&#x65B9;&#x5F0F;&#x7684;&#x597D;&#x673A;&#x4F1A;&#x3002;&#x53EF;&#x4EE5;&#x95EE;&#x81EA;&#x5DF1;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4ECE;&#x5DF2;&#x6709;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x4E2D;&#x80FD;&#x5B66;&#x5230;&#x4E9B;&#x4EC0;&#x4E48;&#xFF1F;</p><ul><li>&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x3002;&#x5F53;&#x9047;&#x5230;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x8FD0;&#x7528;&#x6240;&#x5B66;&#xFF0C;&#x8BBE;&#x8BA1;&#x51FA;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;</li><li>&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;&#x3002;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x5176;&#x4E2D;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#xFF0C;&#x6570;&#x5B66;&#x8BC1;&#x660E;&#x7B97;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;&#x953B;&#x70BC;&#x51FA;&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;&#xFF0C;&#x5BF9;&#x5176;&#x4ED6;&#x9886;&#x57DF;&#x4E5F;&#x4F1A;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;</li><li>&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x8FD0;&#x7528;&#x3002;&#x9047;&#x5230;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x719F;&#x7EC3;&#x4F7F;&#x7528;&#x5DF2;&#x88AB;&#x8BC1;&#x660E;&#x8FC7;&#x6B63;&#x786E;&#x3001;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#x3002;</li></ul><h3 id="&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;"><a href="#&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;" class="headerlink" title="&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;"></a>&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;</h3><p>Algorithm Design by JON KLEINBERG EVA TARDOS &#x4E00;&#x4E66;&#x4E2D;&#x7B2C;&#x4E00;&#x7AE0;&#x7B2C;&#x4E00;&#x8282;&#x5982;&#x662F;&#x8BF4;&#xFF1A;</p><blockquote><p>As an opening topic, we look at an algorithmic problem that nicely illustrates<br>many of the themes we will be emphasizing. It is motivated by some very<br>natural and practical concerns, and from these we formulate a clean and<br>simple statement of a problem. The algorithm to solve the problem is very<br>clean as well, and most of our work will be spent in proving that it is correct<br>and giving an acceptable bound on the amount of time it takes to terminate<br>with an answer.</p></blockquote><p>&#x4E66;&#x4E2D;&#x8FD9;&#x4E00;&#x8282;&#x4EE5;Stable Matching&#x4E3A;&#x4F8B;&#xFF0C;&#x8BF4;&#x660E;&#x4E86;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x57FA;&#x672C;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x4ECE;&#x590D;&#x6742;&#x7684;&#x73B0;&#x5B9E;&#x60C5;&#x51B5;&#x4E2D;&#xFF0C;&#x7B80;&#x5316;&#x95EE;&#x9898;&#xFF0C;&#x8BBE;&#x8BA1;&#x51FA;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x8BC1;&#x660E;&#x7B97;&#x6CD5;&#x7684;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x8BA1;&#x7B97;&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x800C;&#x6700;&#x91CD;&#x7684;&#x90E8;&#x5206;&#x662F;&#x8BC1;&#x660E;&#x6B63;&#x786E;&#x6027;&#x548C;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x53EF;&#x4EE5;&#x770B;&#x8FD9;&#x91CC;&#xFF1A;<a href="http://zhangxiaoyang.me/categories/intro-to-algorithms-tutorial/intro-to-algorithms-tutorial-1.html" target="_blank" rel="noopener">http://zhangxiaoyang.me/categories/intro-to-algorithms-tutorial/intro-to-algorithms-tutorial-1.html</a></p><h3 id="&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;"><a href="#&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;" class="headerlink" title="&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;"></a>&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;</h3><p>&#x7F16;&#x7A0B;&#x4E4B;&#x7F8E;&#x7684;&#x63A8;&#x8350;&#x5E8F;&#x5982;&#x662F;&#x8BF4;&#xFF1A;</p><blockquote><p>&#x8981;&#x60F3;&#x628A;&#x7A0B;&#x5E8F;&#x5199;&#x597D;&#xFF0C;&#x9700;&#x8981;&#x5B66;&#x4E60;&#x597D;&#x4E00;&#x5B9A;&#x7684;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#xFF0C;&#x5305;&#x62EC;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x3001;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x7B97;&#x6CD5;&#x3002;&#x7A0B;&#x5E8F;&#x5199;&#x5F97;&#x597D;&#x7684;&#x4EBA;&#x901A;&#x5E38;&#x90FD;&#x6709;&#x7F1C;&#x5BC6;&#x7684;&#x601D;&#x7EF4;&#x80FD;&#x529B;&#x548C;&#x826F;&#x597D;&#x7684;&#x6570;&#x7406;&#x57FA;&#x7840;&#xFF0C;&#x800C;&#x4E14;&#x719F;&#x6089;&#x7F16;&#x7A0B;&#x73AF;&#x5883;&#x548C;&#x7F16;&#x7A0B;&#x5DE5;&#x5177;&#x3002;</p></blockquote><p>&#x6211;&#x4EEC;&#x5DE5;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F88;&#x5C11;&#x4F1A;&#x51FA;&#x73B0;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;&#x90A3;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x5C31;&#x6CA1;&#x6709;&#x7528;&#x4E86;&#x5417;&#xFF1F;NONONO&#xFF01;&#x7B97;&#x6CD5;&#x953B;&#x70BC;&#x51FA;&#x7684;&#x4E25;&#x8C28;&#x7684;&#x601D;&#x7EF4;&#x5C31;&#x662F;&#x9AD8;&#x624B;&#x7684;&#x62A4;&#x8EAB;&#x6CD5;&#x5B9D;&#x3002;</p><h3 id="&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x8FD0;&#x7528;"><a href="#&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x8FD0;&#x7528;" class="headerlink" title="&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x8FD0;&#x7528;"></a>&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x7684;&#x8FD0;&#x7528;</h3><p>&#x5BF9;&#x4E8E;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x5C31;&#x5F88;&#x660E;&#x663E;&#x4E86;&#xFF0C;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x6392;&#x5E8F;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x3002;</p><p>&#x5176;&#x4ED6;&#x7684;&#x7ECF;&#x5178;&#x5E94;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;(Ctrl+F)&#x67E5;&#x627E;&#x7279;&#x5B9A;&#x6A21;&#x5F0F;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x4E0A;&#x662F;BoyerMoore&#x7B97;&#x6CD5;&#x3002;</p><p>&#x518D;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x6253;&#x5F00;&#x624B;&#x673A;&#x5BFC;&#x822A;&#x7684;&#x5E94;&#x7528;&#x3002;&#x4ECE;&#x51FA;&#x53D1;&#x5730;&#x5740;&#xFF0C;&#x53BB;&#x5F80;&#x76EE;&#x7684;&#x5730;&#x5740;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x56FE;&#x8BBA;&#x4E2D;&#xFF0C;&#x6C42;&#x4E24;&#x5730;&#x6700;&#x8FD1;&#x8DDD;&#x79BB;&#x7684;&#x6700;&#x597D;&#x5E94;&#x7528;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x73B0;&#x5B9E;&#x60C5;&#x51B5;&#x590D;&#x6742;&#xFF0C;&#x80AF;&#x5B9A;&#x4E0D;&#x662F;&#x8DD1;&#x4E00;&#x904D;Dijkstra&#x5C31;&#x80FD;&#x89E3;&#x51B3;&#x7684;&#x3002;</p><p>&#x518D;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x793E;&#x4EA4;&#x5E94;&#x7528;&#x4E2D;&#x7684;&#x63A8;&#x8350;&#x3002;&#x901A;&#x8FC7;&#x56FE;&#x8BBA;&#x7684;&#x5F3A;&#x8FDE;&#x901A;&#x5206;&#x91CF;&#xFF0C;&#x627E;&#x51FA;&#x4F60;&#x5C5E;&#x4E8E;&#x7684;&#x201C;&#x7FA4;&#x4F53;&#x201D;&#xFF0C;&#x7136;&#x540E;&#x63A8;&#x8350;&#x4F60;&#x6240;&#x5C5E;&#x201C;&#x7FA4;&#x4F53;&#x201D;&#x7684;&#x5171;&#x540C;&#x70B9;&#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x7B97;&#x6CD5;&#x8FD0;&#x7528;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x751F;&#x6D3B;&#x4E2D;&#x3002;&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x89C1;&#x8FC7;&#x6700;&#x6709;&#x610F;&#x601D;&#x7684;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x6B7B;&#x9501;&#x7684;&#x9E35;&#x9E1F;&#x7B97;&#x6CD5;&#xFF0C;&#x50CF;&#x9E35;&#x9E1F;&#x4E00;&#x6837;&#x628A;&#x5934;&#x57CB;&#x5728;&#x6C99;&#x5B50;&#x91CC;&#xFF0C;&#x5047;&#x88C5;&#x95EE;&#x9898;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x3002;&#x751F;&#x6D3B;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x201C;&#x7B97;&#x6CD5;&#x201D;&#x3002;</p><blockquote><p>&#x8FD9;&#x51E0;&#x7BC7;&#x7B97;&#x6CD5;&#x6587;&#x7AE0;&#xFF0C;&#x9700;&#x8981;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x7B97;&#x6CD5;&#x57FA;&#x7840;&#xFF0C;&#x6587;&#x7AE0;&#x4E2D;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x3002;&#x5305;&#x62EC;&#x7B97;&#x6CD5;&#x5BFC;&#x8BBA;&#xFF0C;&#x867D;&#x7136;&#x5BF9;&#x4E8E;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x6765;&#x8BF4;&#xFF0C;&#x786E;&#x5B9E;&#x662F;&#x5BFC;&#x8BBA;&#xFF0C;&#x4F46;&#x662F;&#x770B;&#x4E4B;&#x524D;&#xFF0C;&#x6700;&#x597D;&#x8981;&#x770B;&#x8FC7;&#x522B;&#x7684;&#x7B97;&#x6CD5;&#x7684;&#x4E66;&#x7C4D;&#xFF0C;&#x624D;&#x80FD;&#x5BF9;&#x91CC;&#x9762;&#x7684;&#x8BB2;&#x89E3;&#x6709;&#x66F4;&#x6DF1;&#x7684;&#x7406;&#x89E3;&#x3002;</p><p>&#x613F;&#x4F60;&#x5728;&#x6587;&#x4E2D;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x957F;&#x4E45;&#x6240;&#x641C;&#x5BFB;&#x7684;&#x3002;</p></blockquote><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>&#x6709;&#x5F88;&#x5927;&#x542F;&#x53D1;&#x7684;&#x7B97;&#x6CD5;&#x81EA;&#x5B66;&#x7B14;&#x8BB0; <a href="http://zhangxiaoyang.me/category.html" target="_blank" rel="noopener">http://zhangxiaoyang.me/category.html</a></p><p>Princeton Theory of Algorithms Lecture <a href="https://www.cs.princeton.edu/courses/archive/spring13/cos423/lectures.php" target="_blank" rel="noopener">https://www.cs.princeton.edu/courses/archive/spring13/cos423/lectures.php</a></p><p>MIT Introduction To Algorithms,Fall 2011 <a href="https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb</a></p><p>MIT Introduction To Algorithms,Fall 2005 <a href="http://open.163.com/special/opencourse/algorithms.html" target="_blank" rel="noopener">http://open.163.com/special/opencourse/algorithms.html</a></p><p>MIT 6.046J Design and Analysis of Algorithms,Spring 2015 <a href="https://www.youtube.com/watch?v=2P-yW7LQr08&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">https://www.youtube.com/watch?v=2P-yW7LQr08&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp</a></p><p>Harvard CSCIE119 <a href="http://www.fas.harvard.edu/~cscie119/lectures/" target="_blank" rel="noopener">http://www.fas.harvard.edu/~cscie119/lectures/</a></p><p>&#x7B97;&#x6CD5;&#x4F8B;&#x9898;-1 <a href="http://www.acmerblog.com/data-structure-algorithm-6107.html" target="_blank" rel="noopener">http://www.acmerblog.com/data-structure-algorithm-6107.html</a></p><p>&#x7B97;&#x6CD5;&#x4F8B;&#x9898;-2 <a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming" target="_blank" rel="noopener">http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming</a></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图片之旅</title>
      <link href="/%E5%9B%BE%E7%89%87%E4%B9%8B%E6%97%85/"/>
      <url>/%E5%9B%BE%E7%89%87%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<h2 id="&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;101"><a href="#&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;101" class="headerlink" title="&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;101"></a>&#x8BA1;&#x7B97;&#x673A;&#x56FE;&#x5F62;101</h2><p>&#x5728;&#x5F00;&#x59CB;&#x56FE;&#x7247;&#x4E4B;&#x65C5;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x6765;&#x804A;&#x804A;&#x56FE;&#x5F62;&#x5B66;&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#xFF0C;&#x8FD9;&#x4E9B;&#x5728;&#x56FE;&#x7247;&#x5904;&#x7406;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6216;&#x591A;&#x6216;&#x5C11;&#x90FD;&#x8981;&#x63A5;&#x89E6;&#x3002;</p><a id="more"></a><p>1.&#x50CF;&#x7D20;&#x70B9;&#xFF1A;&#x8BA1;&#x7B97;&#x673A;&#x663E;&#x793A;&#x7684;&#x56FE;&#x50CF;&#x662F;&#x7531;&#x50CF;&#x7D20;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x6709;RGB&#x4E09;&#x79CD;&#x989C;&#x8272;&#xFF0C;&#x8FD9;&#x4E09;&#x79CD;&#x989C;&#x8272;&#x6309;&#x4E00;&#x5B9A;&#x6BD4;&#x4F8B;&#x6DF7;&#x5408;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5B9E;&#x9645;&#x7684;&#x8272;&#x503C;&#x3002;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x4E3A;640 x 480&#xFF0C;&#x4EE3;&#x8868;&#x56FE;&#x7247;&#x6C34;&#x5E73;&#x6709;640&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;&#x5782;&#x76F4;&#x6709;480&#x50CF;&#x7D20;&#x70B9;&#x3002;</p><p>2.color depth&#x3001;bit depth&#xFF1A; &#x6BCF;&#x4E2A;&#x50CF;&#x7D20;RGB&#x82E5;&#x5404;&#x7528;8&#x4F4D;&#x8868;&#x793A;&#xFF0C;bit depth&#x5C31;&#x662F;8bit&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x50CF;&#x7D20;&#x5C31;&#x7528;24&#x4F4D;&#x8868;&#x793A;&#xFF0C;color depth&#x5C31;&#x662F;24bit&#x3002;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;color depth&#x8D8A;&#x6DF1;&#xFF0C;&#x50CF;&#x7D20;&#x8868;&#x8FBE;&#x7684;&#x989C;&#x8272;&#x548C;&#x4EAE;&#x5EA6;&#x7684;&#x4F4D;&#x6570;&#x8D8A;&#x591A;&#xFF0C;&#x6587;&#x4EF6;&#x5C31;&#x8D8A;&#x5927;&#x3002;&#x4E00;&#x4E2A;color depth&#x4E2D;&#x6BCF;&#x4E2A;channel&#x7684;&#x6DF1;&#x5EA6;&#x5C31;&#x662F;bit depth&#x3002;&#x7528;32&#x4F4D;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x8BDD;&#xFF0C;RGB&#x5360;&#x7528;24&#x4F4D;&#xFF0C;&#x8FD8;&#x6709;8&#x4F4D;&#x79F0;&#x4E3A;alpha channel&#x3002;</p><p>3.alpha composite&#x3001;alpha blend&#x3001;alpha channel&#xFF1A;&#x6E32;&#x67D3;&#x56FE;&#x7247;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56FE;&#x7247;&#x6709;&#x65F6;&#x6709;&#x5F88;&#x591A;&#x56FE;&#x5C42;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5C06;&#x591A;&#x4E2A;&#x56FE;&#x5C42;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x53EB;&#x505A;alpha composite&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x591A;&#x4E2A;&#x56FE;&#x5C42;&#x6BCF;&#x4E2A;&#x5BF9;&#x5E94;&#x50CF;&#x7D20;&#x5408;&#x6210;&#x7684;&#x8FC7;&#x7A0B;&#x53EB;&#x505A;alpha blend&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_alphaComposite.jpg" alt="alphaComposite"><br>&#x800C;&#x6BCF;&#x4E2A;&#x56FE;&#x5C42;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x88AB;&#x900F;&#x8FC7;&#x770B;&#x5230;&#x4E0B;&#x4E00;&#x56FE;&#x5C42;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x54EA;&#x91CC;&#x900F;&#x660E;&#x3001;&#x54EA;&#x91CC;&#x4E0D;&#x900F;&#x660E;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x5C31;&#x88AB;&#x5B58;&#x5728;&#x4E00;&#x4E2A;alpha channel&#x4E2D;&#x4E86;&#x3002;</p><p>4.color space&#xFF1A;RGB&#x4E09;&#x4E2A;&#x989C;&#x8272;&#x53EF;&#x4EE5;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#xFF0C;&#x6BCF;&#x4E2A;&#x989C;&#x8272;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5750;&#x6807;&#x8F74;&#xFF0C;&#x6BCF;&#x4E2A;&#x989C;&#x8272;&#x90FD;&#x5728;&#x8FD9;&#x4E2A;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x6709;&#x552F;&#x4E00;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E2A;&#x7A7A;&#x95F4;&#x5C31;&#x662F;color space&#x3002;color space&#x6709;&#x591A;&#x79CD;&#xFF0C;AdobeRGB&#x3001;CMYK&#x7B49;&#x7B49;&#x3002;      <img src="http://o79rgqboc.bkt.clouddn.com/blog_RGBColorSpace.jpg" alt="RGBColorSpace"></p><p>5.color model&#xFF1A;&#x5C06;&#x989C;&#x8272;&#x6620;&#x5C04;&#x5230;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x7684;&#x62BD;&#x8C61;&#x6570;&#x5B66;&#x6A21;&#x578B;&#x5C31;&#x662F;color model</p><p>6.color components&#xFF1A;color component&#x662F;&#x50CF;&#x7D20;&#x7684;&#x989C;&#x8272;&#x5355;&#x4F4D;&#xFF0C;color components&#x662F;&#x50CF;&#x7D20;&#x6240;&#x6709;&#x8FD9;&#x79CD;&#x5355;&#x4F4D;&#x7684;&#x96C6;&#x5408;&#x3002;&#x6784;&#x6210;&#x50CF;&#x7D20;&#x6240;&#x5728;&#x7684;color space&#x5750;&#x6807;&#x8F74;&#x7684;&#x989C;&#x8272;&#x5C31;&#x662F;&#x50CF;&#x7D20;&#x7684;&#x4E00;&#x4E2A;color component&#x3002;&#x6BD4;&#x5982;&#xFF0C;RGB&#x50CF;&#x7D20;&#x7684;color components&#x4E3A;&#x4E09;&#x4E2A;&#x989C;&#x8272;&#x7684;color component&#x518D;&#x52A0;&#x4E0A;alpha channel&#x3002;</p><p>&#x5404;&#x79CD;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x76EE;&#x7684;&#x662F;&#x5728;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x548C;&#x5B58;&#x50A8;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x66F4;&#x5C11;&#x7684;&#x5B57;&#x8282;&#xFF0C;&#x5373;&#x8D77;&#x5230;&#x538B;&#x7F29;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x652F;&#x6301;&#x591A;&#x5F20;&#x56FE;&#x7247;&#x7EC4;&#x5408;&#x6210;&#x4E00;&#x5F20;&#x52A8;&#x6001;&#x56FE;&#x3002;&#x5728;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x89E3;&#x7801;&#x540E;&#xFF0C;&#x65E0;&#x8BBA;&#x56FE;&#x7247;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x56FE;&#x7247;&#x6570;&#x636E;&#x90FD;&#x662F;&#x50CF;&#x7D20;&#x6570;&#x7EC4;&#x3002;</p><h2 id="JPEG"><a href="#JPEG" class="headerlink" title="JPEG"></a>JPEG</h2><p>&#x4F5C;&#x4E3A;&#x6700;&#x60A0;&#x4E45;&#x3001;&#x6700;&#x5E7F;&#x6CDB;&#x6D41;&#x4F20;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#xFF0C;&#x4ECE;&#x5B83;&#x5F00;&#x59CB;&#x56FE;&#x7247;&#x4E4B;&#x65C5;&#x662F;&#x518D;&#x5408;&#x9002;&#x4E0D;&#x8FC7;&#x7684;&#x4E86;&#x3002;&#x5148;&#x804A;&#x804A;JPEG&#x7F16;&#x7801;&#x518D;&#x770B;&#x770B;JPEG&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#xFF0C;&#x5BF9;JPEG&#x5C31;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x7406;&#x89E3;&#x3002;</p><h3 id="JPEG&#x7F16;&#x7801;"><a href="#JPEG&#x7F16;&#x7801;" class="headerlink" title="JPEG&#x7F16;&#x7801;"></a>JPEG&#x7F16;&#x7801;</h3><p>JPEG&#x7F16;&#x7801;&#x662F;&#x57FA;&#x4E8E;&#x4E24;&#x4E2A;idea&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x57FA;&#x4E8E;&#x76F8;&#x90BB;&#x7684;&#x50CF;&#x7D20;&#x4FE1;&#x606F;&#x662F;&#x76F8;&#x8FD1;&#x7684;&#xFF0C;&#x5373;&#x7A7A;&#x95F4;&#x5197;&#x4F59;&#x6027;&#xFF0C;&#x5C3D;&#x91CF;&#x5C11;&#x8BB0;&#x5F55;&#x91CD;&#x590D;&#x7684;&#x6570;&#x636E;&#x6765;&#x8FBE;&#x5230;&#x538B;&#x7F29;&#x7684;&#x6548;&#x679C;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x57FA;&#x4E8E;&#x56FE;&#x50CF;&#x4FE1;&#x53F7;&#x7684;&#x9891;&#x8C31;&#x7279;&#x6027;&#xFF0C;&#x56FE;&#x50CF;&#x5305;&#x542B;&#x5404;&#x79CD;&#x9891;&#x7387;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x4E3A;&#x4F4E;&#x9891;&#x9891;&#x8C31;&#xFF0C;&#x5C11;&#x90E8;&#x5206;&#x4E3A;&#x9AD8;&#x9891;&#x9891;&#x8C31;&#x3002;&#x53EF;&#x4EE5;&#x4FDD;&#x7559;&#x5305;&#x542B;&#x56FE;&#x50CF;&#x4FE1;&#x606F;&#x8F83;&#x591A;&#x7684;&#x4F4E;&#x9891;&#x9891;&#x8C31;&#xFF0C;&#x820D;&#x53BB;&#x5305;&#x542B;&#x56FE;&#x50CF;&#x4FE1;&#x606F;&#x8F83;&#x5C11;&#x7684;&#x9AD8;&#x9891;&#x9891;&#x8C31;&#x3002;&#x800C;&#x8FBE;&#x5230;&#x56FE;&#x7247;&#x8D28;&#x91CF;&#x6CA1;&#x6709;&#x53EF;&#x5BDF;&#x89C9;&#x7684;&#x635F;&#x4F24;&#xFF0C;&#x53C8;&#x80FD;&#x8FBE;&#x5230;&#x538B;&#x7F29;&#x7684;&#x6548;&#x679C;&#x3002;&#x8FD9;&#x4E5F;&#x8BF4;&#x660E;&#x4E86;JPEG&#x662F;&#x6709;&#x635F;&#x7F16;&#x7801;&#x3002;</p><p>1.&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x8F6C;&#x6362;&#xFF0C;&#x5C06;RGB&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x8F6C;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#xFF0C;&#x6BD4;&#x5982;YUV&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x3002;Y&#x4EE3;&#x8868;&#x8272;&#x5F69;&#x4EAE;&#x5EA6;(Luminance)&#x3001;U&#x4EE3;&#x8868;&#x8272;&#x5EA6;(Chrominance)&#x3001;V&#x4EE3;&#x8868;&#x6D53;&#x5EA6;(Chroma)&#xFF0C;&#x4EE5;&#x8FD9;&#x4E09;&#x4E2A;&#x5B9A;&#x4E49;&#x5750;&#x6807;&#x8F74;&#x5EFA;&#x7ACB;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#x3002;&#x8F6C;&#x6362;&#x4E3A;YUV&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x4EE5;&#x540E;&#xFF0C;&#x56E0;&#x4E3A;&#x76F8;&#x90BB;&#x7684;&#x56DB;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;U&#x548C;V&#x53EF;&#x4EE5;&#x7528;&#x7528;&#x4E00;&#x4E2A;&#x503C;&#x6765;&#x8868;&#x793A;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_YUV%E5%83%8F%E7%B4%A0%E7%82%B9.jpg" alt="YUV&#x50CF;&#x7D20;&#x70B9;"></p><p>&#x8FD9;&#x6837;&#x6BCF;&#x56DB;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;&#x5B58;&#x50A8;4&#x4E2A;Y&#x3001;1&#x4E2A;U&#x3001;&#x4E00;&#x4E2A;V&#x3002;YUV&#x548C;RGB&#x4E00;&#x6837;&#x90FD;&#x7528;8&#x4F4D;&#x6765;&#x8868;&#x793A;&#xFF0C;YUV&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x5C31;&#x6BD4;RGB&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x6240;&#x9700;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x5C11;&#x4E00;&#x534A;&#xFF0C;&#x6570;&#x636E;&#x5C31;&#x88AB;&#x538B;&#x7F29;&#x5230;&#x4E86;&#x4E00;&#x534A;&#x3002;&#x5B8C;&#x6210;&#x4E86;&#x7B2C;&#x4E00;&#x4E2A;idea&#x3002;</p><p>2.&#x79BB;&#x6563;&#x4F59;&#x5F26;&#x53D8;&#x6362;DCT<br>DCT&#x662F;&#x5085;&#x91CC;&#x53F6;&#x53D8;&#x6362;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x53D8;&#x6362;&#x540E;&#x4F1A;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x7CFB;&#x6570;&#x3002;&#x5177;&#x4F53;&#x516C;&#x5F0F;&#x5C31;&#x4E0D;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x4E86;&#x3002;</p><p>  <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90.jpeg" alt="&#x4E3E;&#x4E2A;&#x6817;&#x5B50;"></p><p>&#x5047;&#x5982;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x5206;&#x5272;&#x6210;8X8&#x7684;&#x53D6;&#x6837;&#x5757;&#x5982;&#x4E0B;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_8x8%E5%8F%96%E6%A0%B7%E5%9D%97.jpg" alt="8x8&#x53D6;&#x6837;&#x5757;"></p><p>&#x5BF9;&#x53D6;&#x6837;&#x5757;&#x8FDB;&#x884C;DCT&#xFF0C;&#x53D6;&#x6837;&#x5757;&#x4F1A;&#x4ECE;&#x8272;&#x5F69;&#x57DF;&#x8F6C;&#x6362;&#x4E3A;&#x9891;&#x7387;&#x57DF;&#x7684;DCT&#x7CFB;&#x6570;&#x5757;&#x3002;&#x56FE;&#x7247;&#x7ECF;&#x8FC7;&#x6B64;&#x6B65;&#x9AA4;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x9891;&#x7387;&#x7CFB;&#x6570;&#x77E9;&#x9635;&#xFF0C;&#x5DE6;&#x4E0A;&#x7684;&#x7CFB;&#x6570;&#x5E45;&#x5EA6;&#x503C;&#x6700;&#x5927;&#xFF0C;&#x8D8A;&#x5F80;&#x53F3;&#x4E0B;&#xFF0C;&#x7CFB;&#x6570;&#x7684;&#x5E45;&#x5EA6;&#x503C;&#x8D8A;&#x5C0F;&#xFF0C;&#x9891;&#x7387;&#x8D8A;&#x9AD8;&#x3002;&#x5927;&#x90E8;&#x5206;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#x90FD;&#x5728;&#x5DE6;&#x4E0A;&#x533A;&#x57DF;&#xFF0C;&#x79BB;&#x5DE6;&#x4E0A;&#x8D8A;&#x6765;&#x8D8A;&#x8FDC;&#x7684;&#x53F3;&#x4E0B;&#x51E0;&#x4E4E;&#x4E0D;&#x542B;&#x6709;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#xFF0C;&#x751A;&#x81F3;&#x53EA;&#x542B;&#x6742;&#x6CE2;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_DCT%E7%B3%BB%E6%95%B0%E5%9D%97.jpg" alt="DCT&#x7CFB;&#x6570;&#x5757;"></p><p>&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x6CA1;&#x6709;&#x538B;&#x7F29;&#x4F5C;&#x7528;&#xFF0C;&#x5B83;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E0B;&#x4E00;&#x6B65;&#x9AA4;&#x627E;&#x4F4E;&#x9891;&#x548C;&#x9AD8;&#x9891;&#x533A;&#x57DF;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x627E;&#x51FA;&#x7559;&#x4E0B;&#x7684;&#x533A;&#x57DF;&#x548C;&#x820D;&#x53BB;&#x7684;&#x533A;&#x57DF;&#x3002;</p><p>3.&#x91CF;&#x5316;</p><p>&#x6B64;&#x6B65;&#x662F;&#x5C06;&#x4E0A;&#x6B65;&#x6C42;&#x5F97;&#x7684;DCT&#x7CFB;&#x6570;&#x7684;&#x7B80;&#x5316;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5229;&#x7528;&#x4EBA;&#x773C;&#x5BF9;&#x9AD8;&#x9891;&#x90E8;&#x5206;&#x4E0D;&#x654F;&#x611F;&#x7684;&#x7279;&#x6027;&#x6765;&#x820D;&#x53BB;&#x9AD8;&#x9891;&#x90E8;&#x5206;&#x3002;<br>&#x5C06;&#x4E0A;&#x6B65;&#x6240;&#x5F97;&#x7684;&#x9891;&#x7387;&#x7CFB;&#x6570;&#x77E9;&#x9635;&#x548C;&#x4EAE;&#x5EA6;&#x91CF;&#x5316;&#x8868;(&#x5982;&#x4E0B;)</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_JPEG%E4%BA%AE%E5%BA%A6%E9%87%8F%E5%8C%96%E8%A1%A8.jpg" alt="JPEG&#x4EAE;&#x5EA6;&#x91CF;&#x5316;&#x8868;"></p><p>&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x3002;&#x91CF;&#x5316;&#x8868;&#x5C31;&#x662F;&#x63A7;&#x5236;&#x538B;&#x7F29;&#x6BD4;&#x7684;&#x5173;&#x952E;&#x3002;&#x9891;&#x7387;&#x7CFB;&#x6570;&#x77E9;&#x9635;&#x7684;&#x6570;&#x503C;&#x9664;&#x4EE5;&#x5BF9;&#x5E94;&#x91CF;&#x5316;&#x8868;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x56DB;&#x820D;&#x4E94;&#x5165;&#x5230;&#x6700;&#x8FD1;&#x7684;&#x6574;&#x6570;&#x3002;&#x4EE5;&#x7B2C;&#x4E00;&#x884C;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x4E3A;&#x4F8B;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E9%87%8F%E5%8C%96%E8%BF%90%E7%AE%97.jpg" alt="&#x91CF;&#x5316;&#x8FD0;&#x7B97;"></p><p>&#x6B64;&#x6B65;&#x540E;&#xFF0C;&#x9AD8;&#x9891;&#x6BB5;&#x4F1A;&#x51FA;&#x73B0;&#x5927;&#x91CF;&#x7684;&#x96F6;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E9%87%8F%E5%8C%96%E5%90%8E%E7%9F%A9%E9%98%B5.jpg" alt="&#x91CF;&#x5316;&#x540E;&#x77E9;&#x9635;"></p><p>&#x89E3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53CD;&#x91CF;&#x5316;&#x6B65;&#x9AA4;&#x4F1A;&#x4E58;&#x56DE;&#x91CF;&#x5316;&#x8868;&#x76F8;&#x5E94;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x56DB;&#x820D;&#x4E94;&#x5165;&#x5BFC;&#x81F4;&#x4F4E;&#x9891;&#x6709;&#x6240;&#x635F;&#x5931;&#xFF0C;&#x9AD8;&#x9891;0&#x5B57;&#x6BB5;&#x88AB;&#x820D;&#x5F03;&#x3002;&#x6B64;&#x6B65;&#x4E3A;&#x6709;&#x635F;&#x8FD0;&#x7B97;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x56FE;&#x50CF;&#x8D28;&#x91CF;&#x53D8;&#x4F4E;&#x3002;&#x81F3;&#x6B64;&#xFF0C;&#x5B8C;&#x6210;&#x4E86;&#x7B2C;&#x4E8C;&#x4E2A;idea&#x3002;</p><p>4.zig-zag&#x6E38;&#x7A0B;&#x7F16;&#x7801;</p><p>&#x91CF;&#x5316;&#x540E;&#x7684;&#x6570;&#x636E;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7B80;&#x5316;&#xFF0C;&#x66F4;&#x5927;&#x7A0B;&#x5EA6;&#x7684;&#x53BB;&#x538B;&#x7F29;&#x3002;</p><p>&#x5BF9;&#x4E0A;&#x6B65;&#x6240;&#x5F97;&#x77E9;&#x9635;&#x8FDB;&#x884C;Z&#x5F62;&#x7F16;&#x6392;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_zig-zag.jpg" alt="zig-zag"></p><p>&#x6240;&#x5F97;&#x7ED3;&#x679C;&#x4E3A;&#x2212;26&#xFF0C;&#x2212;3&#xFF0C;0&#xFF0C;&#x2212;3&#xFF0C;&#x2212;3&#xFF0C;&#x2212;6&#xFF0C;2&#xFF0C;&#x2212;4&#xFF0C;1 &#x2212;4&#xFF0C;1&#xFF0C;1&#xFF0C;5&#xFF0C;1&#xFF0C;2&#xFF0C;&#x2212;1&#xFF0C;1&#xFF0C;&#x2212;1&#xFF0C;2&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;&#x2212;1&#xFF0C;&#x2212;1&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0&#xFF0C;0 &#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x8FD9;&#x6837;&#x4F1A;&#x51FA;&#x73B0;&#x8FDE;&#x7EED;&#x7684;&#x591A;&#x4E2A;0&#xFF0C;&#x8FD9;&#x6837;&#x5229;&#x4E8E;&#x8FDB;&#x884C;&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x3002;</p><p>&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x4F1A;&#x7528;&#x7B80;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x8BB0;&#x5F55;&#x91CD;&#x590D;&#x51FA;&#x73B0;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6700;&#x540E;&#x7F16;&#x7801;&#x540E;&#x51FA;&#x6765;&#x7684;&#x4F4D;&#x6570;&#x8FDC;&#x5C0F;&#x4E8E;&#x539F;&#x59CB;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4F4D;&#x6570;&#xFF0C;&#x5B9E;&#x73B0;&#x5927;&#x5E45;&#x5EA6;&#x7684;&#x6570;&#x636E;&#x538B;&#x7F29;&#x3002;&#x5E76;&#x4E14;&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x7528;&#x56FA;&#x5B9A;&#x7684;4&#x4F4D;&#x6765;&#x5B58;&#x50A8;&#x91CD;&#x590D;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x591A;&#x91CD;&#x590D;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x8BB0;&#x5F55;&#x6570;&#x91CF;&#x4E3A;15&#xFF0C;&#x8D85;&#x8FC7;15&#x6B21;&#x8981;&#x8FDB;&#x884C;&#x5206;&#x6BB5;&#x5904;&#x7406;&#x3002;JPEG&#x5BF9;&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x8FDB;&#x884C;&#x6309;&#x9700;&#x66F4;&#x6539;&#xFF0C;&#x53EA;&#x5C06;0&#x4F5C;&#x4E3A;&#x91CD;&#x590D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x503C;&#x8BB0;&#x5F55;&#x524D;&#x9762;&#x6709;&#x591A;&#x5C11;&#x91CD;&#x590D;&#x7684;0&#xFF0C;&#x672B;&#x5C3E;&#x5982;&#x679C;&#x90FD;&#x662F;0&#x7528;EOB&#x4F5C;&#x4E3A;&#x4EE3;&#x8868;&#x3002;&#x6B64;&#x6B65;&#x4E0D;&#x5305;&#x542B;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x4E3A;&#x76F4;&#x6D41;&#x7CFB;&#x6570;&#xFF0C;&#x6B64;&#x6B65;&#x53EA;&#x5904;&#x7406;&#x4EA4;&#x6D41;&#x7CFB;&#x6570;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x7684;zig-zag&#x7F16;&#x6392;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x5982;&#x4E0B;</p><p>(0,-3);(1,-3);(0,-3);(0,-6);(0,2);(0,-4);(0,1);(0,-4);(0,1);(0,1);(0,5);(0,1);(0,2);(0,-1);(0,1);(0,-1);(0,2);(5,-1);(0,-1);EOB;</p><p>5.&#x8303;&#x5F0F;Huffman&#x7F16;&#x7801;</p><p>JPEG&#x5C06;zig-zag&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x8FDB;&#x4E00;&#x6B65;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x5148;&#x5C06;&#x4E0A;&#x6B65;&#x6240;&#x5F97;&#x5143;&#x7EC4;&#x540E;&#x4E00;&#x90E8;&#x5206;&#x7528;&#x4E0B;&#x8868;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x7F16;&#x7801;&#xFF0C;&#x518D;&#x5C06;&#x5143;&#x7EC4;&#x524D;&#x4E00;&#x90E8;&#x5206;&#x4E0E;&#x540E;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x7EC4;&#x503C;&#x7684;&#x7EC4;&#x5408;&#x7528;&#x8303;&#x5F0F;huffman&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x3002;</p><pre><code class="lang-c">             &#x6570;&#x503C;                 &#x7EC4;              &#x5B9E;&#x9645;&#x4FDD;&#x5B58;&#x503C;                0                   0                   -              -1,1                  1                  0,1           -3,-2,2,3                2              00,01,10,11     -7,-6,-5,-4,4,5,6,7            3    000,001,010,011,100,101,110,111       -15,..,-8,8,..,15            4       0000,..,0111,1000,..,1111      -31,..,-16,16,..,31           5     00000,..,01111,10000,..,11111      -63,..,-32,32,..,63           6                   .     -127,..,-64,64,..,127          7                   .    -255,..,-128,128,..,255         8                   .    -511,..,-256,256,..,511         9                   .   -1023,..,-512,512,..,1023       10                   .  -2047,..,-1024,1024,..,2047      11                   .  -4095,..,-2048,2048,..,4095      12                   .  -8191,..,-4096,4096,..,8191      13                   . -16383,..,-8192,8192,..,16383     14                   .-32767,..,-16384,16384,..,32767    15                   .</code></pre><p>&#x6BD4;&#x5982;&#x7B2C;&#x4E00;&#x9879;(0,-3)&#xFF0C;&#x5C06;-3&#x4FDD;&#x5B58;&#x4E3A;&#x8868;&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x9645;&#x4FDD;&#x5B58;&#x503C;00&#xFF0C;0&#x4E0E;-3&#x7684;&#x7EC4;&#x503C;2&#x7EC4;&#x5408;&#xFF0C;&#x5219;&#x7B2C;&#x4E00;&#x9879;&#x66F4;&#x6539;&#x4E3A;(0,2) ,00&#x3002;&#x518D;&#x5C06;&#x62EC;&#x53F7;&#x91CC;&#x7684;&#x503C;&#x548C;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;02&#xFF0C;&#x9AD8;4&#x4F4D;&#x662F;&#x524D;&#x9762;0&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x4F4E;&#x56DB;&#x4F4D;&#x662F;&#x5206;&#x7EC4;&#x540E;&#x503C;&#x7684;&#x7EC4;&#x3002;</p><p>&#x7136;&#x540E;&#x5C06;02&#x53BB;Huffman&#x8868;&#x4E2D;&#x67E5;&#x627E;&#xFF0C;JPEG&#x5B58;&#x50A8;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5B58;&#x50A8;&#x5B9A;&#x4E49;&#x7684;Huffman&#x8868;&#xFF0C;&#x5E76;&#x4E14;&#x5206;&#x4E3A;4&#x4E2A;&#x8868;&#xFF0C;&#x76F4;&#x6D41;&#x4EAE;&#x5EA6;&#x8868;&#x3001;&#x76F4;&#x6D41;&#x8272;&#x5EA6;&#x8868;&#x3001;&#x4EA4;&#x6D41;&#x4EAE;&#x5EA6;&#x8868;&#x3001;&#x4EA4;&#x6D41;&#x8272;&#x5EA6;&#x8868;&#x3002;02&#x6BD4;&#x5982;&#x5728;&#x76F8;&#x5E94;Huffman&#x8868;&#x4E2D;&#x4E3A;100&#xFF0C;&#x5219;&#x7B2C;&#x4E00;&#x9879;&#x66F4;&#x6539;&#x4E3A;100 00&#xFF0C;&#x6700;&#x540E;&#x5B58;&#x50A8;&#x7684;&#x5B57;&#x8282;&#x5C31;&#x4E3A;100 00&#x3002;<br>&#x5BF9;zig-zag&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6CA1;&#x6709;&#x5BF9;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x3002;&#x6700;&#x540E;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x5C06;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x53BB;&#x76F8;&#x5E94;&#x7684;Huffman&#x8868;&#x67E5;&#x8BE2;&#xFF0C;&#x5C06;&#x7ED3;&#x679C;&#x653E;&#x5728;&#x7ED3;&#x679C;&#x7684;&#x9996;&#x90E8;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x7F16;&#x7801;&#x7684;&#x6570;&#x636E;&#x3002;</p><p>Huffman&#x8868;&#x4F1A;&#x4F7F;&#x5F97;&#x51FA;&#x73B0;&#x9891;&#x7387;&#x9AD8;&#x7684;&#x6570;&#x5B57;&#x5C0F;&#x4E8E;8&#x4F4D;&#xFF0C;&#x800C;&#x51FA;&#x73B0;&#x9891;&#x7387;&#x4F4E;&#x7684;&#x6570;&#x5B57;&#x5927;&#x4E8E;8&#x4F4D;&#xFF0C;&#x8FD9;&#x6837;&#x603B;&#x4F53;&#x5B58;&#x50A8;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x5F88;&#x591A;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="JPEG&#x6587;&#x4EF6;&#x683C;&#x5F0F;"><a href="#JPEG&#x6587;&#x4EF6;&#x683C;&#x5F0F;" class="headerlink" title="JPEG&#x6587;&#x4EF6;&#x683C;&#x5F0F;"></a>JPEG&#x6587;&#x4EF6;&#x683C;&#x5F0F;</h3><p>&#x5927;&#x90E8;&#x5206;&#x56FE;&#x7247;&#x5305;&#x62EC;JPEG&#x662F;&#x7531;&#x5927;&#x7AEF;&#x6CD5;(big-endian)&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x7684;&#xFF0C;&#x4E00;&#x822C;&#x7528;Intel&#x82AF;&#x7247;&#x7684;&#x8BA1;&#x7B97;&#x662F;&#x5C0F;&#x7AEF;&#x6CD5;(little-endian)&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x7684;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#xFF0C;&#x56FE;&#x7247;&#x89E3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x8981;&#x8FDB;&#x884C;&#x5927;&#x7AEF;&#x6CD5;&#x5230;&#x5C0F;&#x7AEF;&#x6CD5;&#x7684;&#x8F6C;&#x6362;&#x624D;&#x80FD;&#x7F16;&#x7801;&#x3002;</p><pre><code class="lang-c">static unsigned short swap_bigendian_to_littleendian_Two_Byte(unsigned short value) {    return (unsigned short)((value &amp; 0x00FF) &lt;&lt; 8)       | (unsigned short)((value &amp; 0xFF00) &gt;&gt; 8);}static unsigned int swap_bigendian_to_littleendian_Four_Byte(unsigned int value) {    return (unsigned int)((value &amp; 0x000000FF) &lt;&lt; 24)       | (unsigned int)((value &amp; 0x0000FF00) &lt;&lt; 16)      | (unsigned int)((value &amp; 0x00FF0000) &lt;&lt; 8)       | (unsigned int)((value &amp; 0xFF000000) &gt;&gt; 24);}</code></pre><p>JPEG&#x6587;&#x4EF6;&#x662F;&#x5206;&#x4E3A;&#x591A;&#x4E2A;segment&#xFF0C;&#x6BCF;&#x4E2A;segment&#x8D77;&#x59CB;&#x6709;segment&#x6807;&#x8BC6;&#xFF0C;&#x6807;&#x8BC6;&#x524D;&#x4E24;&#x4E2A;&#x5143;&#x7EC4;&#x89C4;&#x5B9A;&#x662F;0xff&#xFF0C;&#x540E;&#x4E24;&#x4E2A;&#x5143;&#x7EC4;&#x4EE3;&#x8868;segment&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;segment&#x6807;&#x8BC6;&#x3002;</p><pre><code class="lang-c">    SOI   = ffd8   &#x56FE;&#x7247;&#x5F00;&#x59CB;    EOI   = ffd9   &#x56FE;&#x7247;&#x7ED3;&#x675F;    APP0  = ffe0   &#x6309;JFIF&#x6807;&#x51C6;&#x552F;&#x4E00;&#x8BC6;&#x522B;&#x4E00;&#x4E2A;JPG&#x7684;&#x6807;&#x5FD7;    SOF0  = ffc0   &#x5E27;&#x5F00;&#x59CB;    SOF2  = ffc2   &#x5E27;&#x5F00;&#x59CB;    SOS   = ffda   &#x626B;&#x63CF;&#x884C;&#x5F00;&#x59CB;    DNL   = ffdc   &#x5B9A;&#x4E49;&#x884C;&#x6570;    DRI   = ffdd   &#x5B9A;&#x4E49;&#x91CD;&#x65B0;&#x5F00;&#x59CB;&#x95F4;&#x9694;    DQT   = ffdb   &#x5B9A;&#x4E49;&#x91CF;&#x5316;&#x8868;    DHT   = ffc4   &#x5B9A;&#x4E49;Huffman&#x8868;    COM   = fffe   &#x8BC4;&#x8BBA;</code></pre><p>&#x5982;&#x679C;&#x53EA;&#x7559;&#x4E0B;segment&#x6807;&#x8BC6;&#xFF0C;&#x5219;&#x4E0A;&#x9762;&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x5982;&#x4E0B;</p><pre><code class="lang-c">ffd8 ffe0 .... ffdb .... ffc0 .... .... ffc4 .... ffc4 .... ffc4 ........ ff00 .... ff00 .... ff00 ........ ff00 .... ff00 .... ff00 .... .... ff00 .... ff00 .... ff00 ........ ff00 .... ffd9 &#x56FE;&#x7247;&#x5F00;&#x59CB;----&#x4F5C;&#x4E3A;JPG&#x6587;&#x4EF6;&#x7684;&#x8BC6;&#x522B;----&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x91CF;&#x5316;&#x8868;----&#x56FE;&#x7247;&#x5E27;&#x7684;&#x5F00;&#x59CB;----&#x4E00;&#x4E2A;&#x5230;&#x56DB;&#x4E2A;Huffman&#x8868;(&#x76F4;&#x6D41;&#x4EAE;&#x5EA6;&#x3001;&#x76F4;&#x6D41;&#x8272;&#x5EA6;&#x3001;&#x4EA4;&#x6D41;&#x4EAE;&#x5EA6;&#x3001;&#x4EA4;&#x6D41;&#x8272;&#x5EA6;)----&#x5360;&#x4F4D;&#x7B26;(&#x626B;&#x63CF;&#x65F6;&#x76F4;&#x63A5;&#x88AB;&#x5FFD;&#x7565;)----&#x5360;&#x4F4D;&#x7B26;----&#x5360;&#x4F4D;&#x7B26;----&#x56FE;&#x7247;&#x7ED3;&#x675F;</code></pre><p>JPEG&#x6709;baseline&#x3001;progressive&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;baseline&#x89E3;&#x7801;&#x65F6;&#x4F1A;&#x89E3;&#x7801;&#x51FA;&#x90E8;&#x5206;&#x9AD8;&#x8D28;&#x91CF;&#x56FE;&#x7247;&#xFF0C;&#x5E76;&#x4ECE;&#x56FE;&#x7247;&#x9876;&#x90E8;&#x5230;&#x56FE;&#x7247;&#x5E95;&#x90E8;&#x3001;&#x4ECE;&#x56FE;&#x7247;&#x5DE6;&#x8FB9;&#x5230;&#x56FE;&#x7247;&#x53F3;&#x8FB9;&#x987A;&#x5E8F;&#x89E3;&#x7801;&#x3002;progressive&#x89E3;&#x7801;&#x4F1A;&#x5148;&#x89E3;&#x7801;&#x51FA;&#x6574;&#x5F20;&#x7684;&#x4F4E;&#x8D28;&#x91CF;&#x56FE;&#x7247;&#xFF0C;&#x518D;&#x89E3;&#x7801;&#x51FA;&#x9AD8;&#x8D28;&#x91CF;&#x56FE;&#x7247;&#xFF0C;&#x4ECE;&#x4F4E;&#x8D28;&#x91CF;&#x56FE;&#x7247;&#x5230;&#x9AD8;&#x8D28;&#x91CF;&#x56FE;&#x7247;&#xFF0C;&#x6709;&#x4E00;&#x79CD;&#x56FE;&#x7247;&#x9010;&#x6E10;&#x6E05;&#x6670;&#x7684;&#x611F;&#x89C9;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x4E86;&#x66F4;&#x52A0;&#x7684;&#x89C6;&#x89C9;&#x4F53;&#x9A8C;&#x3002;baseline&#x901A;&#x5E38;&#x4F1A;&#x5305;&#x62EC;SOF0&#x6CA1;&#x6709;&#x4E00;&#x4E2A;SOS&#x6216;&#x4E00;&#x4E2A;&#xFF0C;&#x800C;progressive&#x901A;&#x5E38;&#x4F1A;&#x5305;&#x62EC;SOF2&#x548C;&#x591A;&#x4E2A;SOS&#x3002;</p><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><p>&#x7B2C;&#x4E8C;&#x5E7F;&#x4E3A;&#x6D41;&#x4F20;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#xFF0C;&#x65E0;&#x635F;&#x7F16;&#x7801;(lossless)&#xFF0C;&#x4E3A;&#x4E86;&#x6539;&#x5584;&#x548C;&#x66FF;&#x6362;GIF&#x800C;&#x88AB;&#x5F00;&#x53D1;&#x51FA;&#x6765;&#xFF0C;&#x7ED3;&#x679C;&#x5E76;&#x6CA1;&#x6709;&#x505A;&#x5230;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E8%BF%99%E4%BB%96%E5%A6%88%E5%B0%B1%E5%BE%88%E5%B0%B4%E5%B0%AC%E4%BA%86.png" alt="&#x8FD9;&#x4ED6;&#x5988;&#x5C31;&#x5F88;&#x5C34;&#x5C2C;&#x4E86;"></p><h3 id="PNG&#x7F16;&#x7801;"><a href="#PNG&#x7F16;&#x7801;" class="headerlink" title="PNG&#x7F16;&#x7801;"></a>PNG&#x7F16;&#x7801;</h3><p>PNG&#x7F16;&#x7801;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;idea&#xFF0C;&#x5229;&#x7528;&#x7A7A;&#x95F4;&#x5197;&#x4F59;&#x6027;&#x8BA9;LZ77&#x6D3E;&#x751F;&#x7B97;&#x6CD5;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#x3002;LZ77&#x6D3E;&#x751F;&#x7B97;&#x6CD5;&#x5E7F;&#x6CDB;&#x5E94;&#x7528;&#x5728;&#x901A;&#x4FE1;&#x8BA1;&#x7B97;&#x673A;&#x9886;&#x57DF;&#xFF0C;&#x662F;&#x79CD;&#x4E0E;&#x56FE;&#x50CF;&#x7279;&#x6027;&#x65E0;&#x5173;&#x7684;&#x6587;&#x4EF6;&#x538B;&#x7F29;&#x7B97;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x5229;&#x7528;&#x6570;&#x636E;&#x7684;&#x91CD;&#x590D;&#x5E8F;&#x5217;&#x6765;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x538B;&#x7F29;&#x7684;&#xFF0C;PNG&#x7F16;&#x7801;&#x7684;&#x4EFB;&#x52A1;&#x5C31;&#x662F;&#x8BA9;&#x56FE;&#x7247;&#x6570;&#x636E;&#x51FA;&#x73B0;&#x66F4;&#x591A;&#x7684;&#x91CD;&#x590D;&#x5E8F;&#x5217;&#x6765;&#x63D0;&#x9AD8;LZ77&#x6D3E;&#x751F;&#x7684;&#x7B97;&#x6CD5;&#x7684;&#x6548;&#x7387;&#x3002;</p><p>1.Pass extraction</p><p>PNG&#x5206;&#x4E3A;interlace(&#x9694;&#x884C;&#x626B;&#x63CF;)&#x548C;non-interlace(&#x975E;&#x9694;&#x884C;&#x626B;&#x63CF;)&#xFF0C;interlace&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x66F4;&#x53EB;&#x53CB;&#x597D;&#x7684;&#x89C6;&#x89C9;&#x4F53;&#x9A8C;&#xFF0C;&#x5C31;&#x50CF;JPEG&#x7684;progressive&#x4E00;&#x6837;&#x3002;</p><p>Pass Extraction&#x4F1A;&#x6839;&#x636E;interlace&#x6216;&#x8005;non-interlace&#xFF0C;&#x4ECE;&#x800C;&#x7528;&#x4E0D;&#x540C;&#x987A;&#x5E8F;&#x63D0;&#x53D6;&#x51FA;&#x50CF;&#x7D20;&#xFF0C;&#x7136;&#x540E;&#x5206;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x7EC4;&#xFF0C;&#x6309;&#x63D0;&#x53D6;&#x51FA;&#x7684;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#x50CF;&#x7D20;&#x3002;interlace&#x4F1A;&#x5206;&#x6210;7&#x7EC4;&#xFF0C;non-interlace&#x4F1A;&#x5206;&#x6210;1&#x7EC4;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_Pass%20Extraction.png" alt="Pass Extraction"></p><p>&#x8FD9;&#x6837;&#x4F1A;&#x5BFC;&#x81F4;interlace&#x4F1A;scan&#x4E00;&#x904D;&#xFF0C;non-interlace&#x4F1A;scan&#x4E03;&#x904D;&#x3002;non-interlace&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x6BD4;interlace&#x591A;&#x4E00;&#x70B9;&#xFF0C;7&#x6B21;scan&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#x56FE;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_interlaced%20scanning.gif" alt="interlaced scanning"></p><p>2.Scanline serialization</p><p>&#x5C06;&#x5206;&#x7EC4;&#x51FA;&#x6765;&#x7684;&#x50CF;&#x7D20;&#x6309;&#x884C;&#x6765;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E0B;&#x4E00;&#x6B65;&#x9AA4;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x3002;</p><p>3.Filtering</p><p>Filtering&#x5B98;&#x65B9;&#x7684;method&#x53EA;&#x5B9A;&#x4E49;&#x4E86;0&#xFF0C;&#x5176;&#x4ED6;&#x6570;&#x5B57;&#x4EE5;&#x540E;&#x7559;&#x4E0B;&#x4F5C;&#x4E3A;&#x62D3;&#x5C55;&#x3002;&#x4E0D;&#x8FC7;&#x6709;5&#x79CD;type&#x3002;&#x5047;&#x8BBE;&#x4F60;&#x60F3;&#x8981;Filter&#x7684;&#x662F;&#x50CF;&#x7D20;x</p><p>  <img src="http://o79rgqboc.bkt.clouddn.com/blog_Filtering%20Position.png" alt="Filtering Position"></p><p>&#x90A3;&#x4E48;&#x5B9A;&#x4E49;a&#x4E3A;x&#x524D;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;b&#x4E3A;x&#x4E0A;&#x4E00;&#x884C;&#x50CF;&#x7D20;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;&#x50CF;&#x7D20;&#xFF0C;c&#x4E3A;b&#x524D;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x3002;</p><p>&#x5B9A;&#x4E49;Filt(x)&#x51FD;&#x6570;&#x7684;&#x7ED3;&#x679C;&#x4E3A;x&#x7ECF;&#x8FC7;Filtering&#x6B65;&#x9AA4;&#x7684;&#x503C;&#x3002;Recon(x)&#x4E3A;&#x89E3;&#x7801;&#x53CD;Filtering&#x6B65;&#x9AA4;&#x7684;&#x503C;&#x3002;</p><p>Orig(x)&#x51FD;&#x6570;&#x7684;&#x7ED3;&#x679C;&#x4E3A;x&#x7684;&#x503C;&#x3002;floor(x)&#x51FD;&#x6570;&#x4E3A;floor API&#x3002;PaethPredictor&#x51FD;&#x6570;&#x4E3A;</p><pre><code class="lang-c">    p = a + b - c    pa = abs(p - a)    pb = abs(p - b)    pc = abs(p - c)    if (pa &lt;= pb &amp;&amp; pa &lt;= pc) {      Pr = a;    } else if (pb &lt;= pc) {      Pr = b;    } else {      Pr = c;    }    return Pr</code></pre><p>&#x5219;Filter type&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x8868;&#x5982;&#x4E0B;&#x3002; <img src="http://o79rgqboc.bkt.clouddn.com/blog_Filtering%20type.png" alt="Filtering type"></p><p>&#x5047;&#x5982;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x7684;&#x5B57;&#x8282;&#x6D41;&#x503C;&#x4E3A;1&#x5230;255&#x3002;&#x5982;&#x679C;&#x4E0D;&#x7ECF;&#x8FC7;&#x8FD9;&#x6B65;&#xFF0C;&#x76F4;&#x63A5;&#x8FDB;&#x884C;compression&#xFF0C;&#x8FD9;&#x4E2A;&#x5B57;&#x8282;&#x6D41;&#x6CA1;&#x6709;&#x91CD;&#x590D;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;compression&#x6CA1;&#x6709;&#x4F5C;&#x7528;&#x3002;&#x5982;&#x679C;&#x8981;&#x662F;&#x7ECF;&#x8FC7;Filter type&#x4E3A;Sub&#xFF0C;&#x5B57;&#x8282;&#x6D41;&#x4F1A;&#x6709;&#x5F88;&#x591A;&#x5B57;&#x8282;&#x4E3A;&#x91CD;&#x590D;&#x7684;1&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;compression&#x5927;&#x5927;&#x538B;&#x7F29;&#x6570;&#x636E;&#x91CF;&#x3002;</p><p>4.Compression</p><p>&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;PNG&#x538B;&#x7F29;&#x7528;&#x7684;&#x662F;LZ77&#x6D3E;&#x751F;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5177;&#x4F53;&#x7B97;&#x6CD5;&#x5C31;&#x4E0D;&#x8BE6;&#x7EC6;&#x5C55;&#x5F00;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x65E0;&#x635F;&#x538B;&#x7F29;&#x7B97;&#x6CD5;&#x3002;PNG&#x538B;&#x7F29;&#x6B65;&#x9AA4;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x56FE;&#x7247;&#x7684;&#x4FE1;&#x53F7;&#x6216;&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x7279;&#x6027;&#x3002;</p><p>5.Chunking</p><p>&#x5C06;&#x538B;&#x7F29;&#x540E;&#x7684;&#x6570;&#x636E;&#x62C6;&#x5206;&#x6210;&#x591A;&#x4E2A;chunk&#xFF0C;&#x6765;&#x66F4;&#x597D;&#x7684;&#x7BA1;&#x7406;&#x6570;&#x636E;&#x548C;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002;</p><h3 id="PNG&#x6587;&#x4EF6;&#x683C;&#x5F0F;"><a href="#PNG&#x6587;&#x4EF6;&#x683C;&#x5F0F;" class="headerlink" title="PNG&#x6587;&#x4EF6;&#x683C;&#x5F0F;"></a>PNG&#x6587;&#x4EF6;&#x683C;&#x5F0F;</h3><p>PNG&#x6587;&#x4EF6;&#x8D77;&#x59CB;&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x7684;&#x5E8F;&#x5217;&#x6765;&#x6807;&#x8BC6;&#x6587;&#x4EF6;&#x4E3A;PNG&#xFF0C;137 80 78 71 13 10 26 10(&#x5341;&#x8FDB;&#x5236;)&#xFF0C;&#x5176;&#x4F59;&#x7684;&#x6570;&#x636E;&#x5C31;&#x662F;&#x591A;&#x4E2A;chunk&#xFF0C;&#x4E00;&#x79CD;&#x4E3A;&#x5173;&#x952E;chunk&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x4E3A;&#x8F85;&#x52A9;chunk&#x3002;&#x5173;&#x952E;chunk&#x662F;&#x5FC5;&#x987B;&#x6709;&#x7684;&#xFF0C;&#x5173;&#x952E;&#x7684;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x5C31;&#x5728;&#x5173;&#x952E;chunk&#x91CC;&#x3002;</p><p>&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;chunk&#x7684;&#x7ED3;&#x6784;</p><pre><code class="lang-c">typedef struct {    unsigned int length;    unsigned int chunk_type;    unsigned char *chunk_data;    unsigned int crc;}chunk;</code></pre><p>chunk&#x91CC;&#x7684;length&#x5B57;&#x6BB5;&#xFF0C;&#x53EA;&#x8BB0;&#x5F55;chunk_data&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4E0D;&#x7BA1;&#x5176;&#x4ED6;&#x5B57;&#x6BB5;&#x3002;chunk_type&#x7684;&#x503C;&#x4ECE;65-90&#x6216;97-122&#xFF0C;&#x4EE3;&#x8868;A-Z&#x6216;a-z&#xFF0C;&#x7528;&#x5B57;&#x7B26;&#x6765;&#x6807;&#x8BC6;chunk&#x7684;&#x7C7B;&#x578B;&#x3002;crc&#x4EE3;&#x8868;&#x9664;length&#x5B57;&#x6BB5;&#x5916;&#x7684;&#x4E09;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x5FAA;&#x73AF;&#x5197;&#x4F59;&#x5DEE;&#x9519;&#x68C0;&#x9A8C;(TCP&#x6821;&#x9A8C;)&#x3002;</p><p>&#x5173;&#x952E;chunk&#x7684;&#x51FA;&#x73B0;&#x987A;&#x5E8F;&#x5FC5;&#x987B;&#x5982;&#x4E0B;&#xFF1A;IHDR(&#x5934;&#x4FE1;&#x606F;)&#x3001;PLTE(&#x8C03;&#x8272;&#x677F;)&#x3001;IDAT(&#x56FE;&#x7247;&#x6570;&#x636E;&#x5757;)&#x3001;IEND(&#x7ED3;&#x5C3E;&#x6807;&#x8BC6;)</p><p>IHDR</p><p>&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF0C;&#x5176;&#x4ED6;&#x5B57;&#x7B26;&#x5728;&#x77E5;&#x9053;png&#x5982;&#x4F55;&#x7F16;&#x7801;&#x5C31;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x4E86;&#xFF0C;&#x5C31;&#x6709;color_type&#x6CA1;&#x6709;&#x63D0;&#x53CA;&#xFF0C;color_type&#x662F;&#x5229;&#x7528;&#x4F4D;&#x7EC4;&#x5408;&#x6765;&#x8868;&#x793A;&#x7684;&#xFF0C;1&#x4EE3;&#x8868;&#x4F7F;&#x7528;PLTE&#x3001;2&#x4EE3;&#x8868;&#x662F;&#x771F;&#x5F69;&#x56FE;&#x7247;&#xFF0C;3&#x4EE3;&#x8868;&#x6709;alpha channel&#x3002;</p><pre><code class="lang-c">typedef struct {    unsigned int width;    unsigned int height;    unsigned char bit_depth;    unsigned char color_type;    unsigned char compression_method;    unsigned char filter_method;    unsigned char interlace_method;} IHDR;</code></pre><p>PLTE</p><p>&#x8C03;&#x8272;&#x677F;&#x5305;&#x62EC;1&#x5230;256&#x4E2A;&#x8272;&#x5F69;&#xFF0C;&#x6BCF;&#x4E2A;&#x8272;&#x5F69;RGB&#x4E09;&#x79CD;&#x989C;&#x8272;&#x5404;&#x5360;1&#x5B57;&#x8282;&#xFF0C;&#x5E76;&#x4E14;&#x6BCF;&#x79CD;&#x8272;&#x5F69;&#x6709;&#x4ECE;0&#x5F00;&#x59CB;&#x9010;&#x6E10;&#x589E;&#x5927;&#x7684;&#x7D22;&#x5F15;&#x3002;&#x5B9E;&#x9645;&#x5B58;&#x50A8;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;&#x8272;&#x5F69;&#x6784;&#x6210;&#x4E00;&#x4E2A;3&#x5B57;&#x8282;&#x7684;&#x5355;&#x4F4D;&#xFF0C;&#x8C03;&#x8272;&#x677F;&#x5B58;&#x50A8;&#x591A;&#x4E2A;&#x8FD9;&#x79CD;&#x5355;&#x4F4D;&#xFF0C;&#x4E0D;&#x5B58;&#x50A8;&#x5355;&#x4F4D;&#x7684;&#x7D22;&#x5F15;&#x3002;PLTE&#x7684;&#x8272;&#x5F69;&#x6570;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x50CF;&#x7D20;bit depth&#x80FD;&#x8868;&#x8FBE;&#x7684;&#x8272;&#x5F69;&#x6570;&#x3002;&#x6BD4;&#x5982;bit depth&#x4E3A;4bit&#xFF0C;&#x5219;PLTE&#x7684;&#x8272;&#x5F69;&#x6570;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;2&#x7684;4&#x6B21;&#x65B9;&#x5373;16&#x3002;PLTE&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#xFF0C;&#x51CF;&#x5C0F;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x6709;&#x4E86;PLTE&#xFF0C;&#x50CF;&#x7D20;&#x70B9;&#x5C31;&#x4E0D;&#x7528;&#x5B58;&#x50A8;RGB&#x8272;&#x5F69;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x5B58;&#x50A8;PLTE&#x7684;&#x7D22;&#x5F15;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5728;&#x89E3;&#x7801;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x7D22;&#x5F15; * 3&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4ECE;&#x8C03;&#x8272;&#x677F;&#x4E8C;&#x8FDB;&#x5236;&#x6D41;&#x4E2D;&#x627E;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x8272;&#x5F69;&#x4F4D;&#x7F6E;&#x3002;</p><p>IDAT</p><p>&#x7ECF;&#x8FC7;&#x7F16;&#x7801;&#x7684;&#x56FE;&#x50CF;&#x6570;&#x636E;chunk&#xFF0C;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x3002;</p><p>IEND</p><p> &#x6807;&#x5FD7;&#x56FE;&#x50CF;&#x7684;&#x7ED3;&#x675F;&#xFF0C;&#x6CA1;&#x6709;chunk_data&#x3002;</p><h2 id="APNG"><a href="#APNG" class="headerlink" title="APNG"></a>APNG</h2><p>APNG&#x662F;&#x4E3A;PNG&#x52A8;&#x56FE;&#x505A;&#x7684;&#x7B80;&#x5355;&#x62D3;&#x5C55;&#x3002;APNG&#x5305;&#x542B;&#x591A;&#x4E2A;PNG&#xFF0C;&#x5C06;&#x591A;&#x4E2A;PNG&#x7684;&#x56FE;&#x7247;&#x6570;&#x636E;&#x4F5C;&#x4E3A;APNG&#x7684;&#x6BCF;&#x4E00;&#x5E27;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x591A;&#x4E2A;PNG&#x91CD;&#x590D;&#x7684;&#x5176;&#x4ED6;&#x6570;&#x636E;&#x53EA;&#x4FDD;&#x7559;&#x4E0B;&#x4E00;&#x4EFD;&#x3002;APNG&#x652F;&#x6301;PNG&#x7684;&#x6240;&#x6709;chunk&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x6709;&#x51E0;&#x4E2A;PNG&#x4E0D;&#x5305;&#x62EC;&#x7684;&#x5173;&#x952E;chunk&#xFF0C;ACTL&#x3001;FCTL&#xFF0C;&#x5E76;&#x4E14;&#x5C06;IDAT&#x547D;&#x540D;&#x4E3A;FDAT&#xFF0C;&#x8FD8;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;sequence_number&#x5B57;&#x6BB5;&#x3002;APNG&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5757;&#x4ECD;&#x662F;&#x53EB;IDAT&#x800C;&#x4E0D;&#x53EB;FDAT&#xFF0C;&#x8FD9;&#x6837;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A;default image&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x8BA9;&#x4E0D;&#x652F;&#x6301;APNG&#x7684;&#x89E3;&#x7801;&#x5668;&#x4E5F;&#x53EF;&#x4EE5;&#x89E3;&#x7801;&#x51FA;&#x4E00;&#x5F20;default image&#x3002;</p><pre><code class="lang-c">                                            APNG                                                                      IHDR                                            ACTLPNG_1       PNG_2      PNG_3                FCTLIHDR        IHDR       IHDR       ---&gt;      IDATIDAT        IDAT       IDAT       ---&gt;      FCTL&#x5176;&#x4ED6;Chunk   &#x5176;&#x4ED6;Chunk   &#x5176;&#x4ED6;Chunk            FDATIEND        IEND       IEND                 FCTL                                            FDAT                                            &#x5176;&#x4ED6;Chunk                                            IEND</code></pre><p>ACTL</p><p>ACTL&#x662F;&#x63A7;&#x5236;&#x52A8;&#x753B;&#x7684;chunk&#xFF0C;num_frames&#x8BB0;&#x5F55;APNG&#x6709;&#x591A;&#x5C11;&#x5E27;&#xFF0C;num_playes&#x8BB0;&#x5F55;APNG&#x64AD;&#x653E;&#x52A8;&#x753B;&#x591A;&#x5C11;&#x904D;&#x3002;</p><pre><code class="lang-c">typedef struct {    unsigned int num_frames;    unsigned int num_playes;}actl;</code></pre><p>FCTL</p><p>FCTL&#x662F;&#x6BCF;&#x4E2A;&#x5E27;&#x7684;&#x5934;&#x90E8;chunk&#xFF0C;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><pre><code class="lang-c">typedef struct {    unsigned int sequence_number;    unsigned int width;    unsigned int height;    unsigned int x_offset;    unsigned int y_offset;    unsigned short delay_num;    unsigned short delay_den;    unsigned char dispose_op;    unsigned char blend_op;}fctl;</code></pre><p>delay_num&#x4E3A;&#x8FD9;&#x4E00;&#x5E27;&#x663E;&#x793A;&#x65F6;&#x95F4;&#x7684;&#x4EE5;&#x79D2;&#x4E3A;&#x5355;&#x4F4D;&#x7684;&#x5206;&#x5B50;&#xFF0C;delay_den&#x4E3A;&#x8FD9;&#x4E00;&#x5E27;&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4EE5;&#x79D2;&#x4E3A;&#x5355;&#x4F4D;&#x7684;&#x5206;&#x6BCD;&#x3002;</p><p>blend_op&#x53D6;&#x503C;&#x53EF;&#x80FD;&#x4E3A;APNG_BLEND_OP_SOURCE&#x6216;APNG_BLEND_OP_OVER&#xFF0C;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x53D6;&#x51B3;&#x6B64;&#x5E27;&#x5728;&#x6E32;&#x67D3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x5426;&#x9700;&#x8981;alpha blend&#x3002;&#x5982;&#x679C;&#x662F;APNG_BLEND_OP_SOURCE&#xFF0C;&#x5219;&#x4E0D;&#x8FDB;&#x884C;alpha blend&#xFF0C;&#x5728;&#x753B;&#x5E03;&#x4E0A;&#x6E05;&#x7A7A;&#x4E0A;&#x5E27;&#x7684;&#x6E32;&#x67D3;&#x3002;APNG_BLEND_OP_OVER&#x5219;&#x8FDB;&#x884C;&#xFF0C;&#x5728;&#x753B;&#x5E03;&#x4E0A;&#x7EE7;&#x7EED;&#x4E0A;&#x5E27;&#x6E32;&#x67D3;&#x3002;</p><p>dispose_op&#x53D6;&#x503C;&#x53EF;&#x80FD;&#x4E3A;APNG_DISPOSE_OP_NONE&#x3001;APNG_DISPOSE_OP_BACKGROUND&#x3001;APNG_DISPOSE_OP_PREVIOUS&#xFF0C;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x53D6;&#x51B3;&#x6B64;&#x5E27;&#x5904;&#x7406;&#x7ED3;&#x675F;&#x65F6;&#x7684;&#x64CD;&#x4F5C;&#x3002;APNG_DISPOSE_OP_NONE&#x8868;&#x793A;&#x4E3A;&#x4E0D;&#x4F5C;&#x64CD;&#x4F5C;&#xFF0C;APNG_DISPOSE_OP_BACKGROUND&#x8868;&#x793A;&#x4E3A;&#x5C06;&#x753B;&#x5E03;&#x4E0A;&#x6B64;&#x5E27;&#x6E05;&#x7A7A;&#x4E3A;&#x900F;&#x660E;&#x9ED1;&#x8272;&#xFF0C;APNG_DISPOSE_OP_PREVIOUS&#x8868;&#x793A;&#x4E3A;&#x5C06;&#x753B;&#x5E03;&#x8FD8;&#x539F;&#x4E3A;&#x4E0A;&#x4E00;&#x5E27;&#x7ED3;&#x675F;&#x65F6;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>APNG&#x89E3;&#x7801;&#x65F6;&#x8FD8;&#x6709;&#x5173;&#x4E8E;chunk&#x6B63;&#x786E;&#x6027;&#x7684;&#x68C0;&#x6D4B;</p><p>1.IHDR&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x4E14;&#x5FC5;&#x987B;&#x4E3A;&#x5F00;&#x5934;&#x3002;</p><p>2.ACTL&#x5FC5;&#x987B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x3002;</p><p>3.FCTL&#x548C;FDAT&#x4E2D;&#x7684;sequence_number&#x5FC5;&#x987B;&#x6309;&#x987A;&#x5E8F;&#x9012;&#x589E;&#xFF0C;&#x4E0D;&#x80FD;&#x6709;&#x95F4;&#x9694;&#x548C;&#x91CD;&#x590D;&#x3002;</p><p>4.FCTL&#x7684;&#x4E2A;&#x6570;&#x5FC5;&#x987B;&#x548C;ACTL&#x4E2D;&#x7684;num_frames&#x76F8;&#x7B49;&#x3002;</p><p>5.FCTL&#x540E;&#x9762;&#x5FC5;&#x987B;&#x662F;IDAT&#x6216;FDAT&#x3002;</p><h2 id="WEBP"><a href="#WEBP" class="headerlink" title="WEBP"></a>WEBP</h2><p>WEBP&#x662F;Google&#x63A8;&#x51FA;&#x7684;&#x65B0;&#x4E00;&#x4EE3;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#xFF0C;&#x671F;&#x671B;&#x4EE3;&#x66FF;JPEG&#x548C;PNG&#xFF0C;&#x5728;&#x4E0E;JPEG&#x548C;PNG&#x76F8;&#x540C;&#x7684;&#x56FE;&#x7247;&#x8D28;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x7F29;&#x5C0F;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;WEBP&#x5206;&#x4E3A;&#x6709;&#x635F;&#x7F16;&#x7801;&#x548C;&#x65E0;&#x635F;&#x7F16;&#x7801;(lossless)&#xFF0C;&#x6709;&#x635F;&#x7F16;&#x7801;&#x662F;&#x57FA;&#x4E8E;VP8&#x89C6;&#x9891;&#x683C;&#x5F0F;&#x7F16;&#x7801;&#xFF0C;&#x800C;&#x65E0;&#x635F;&#x7F16;&#x7801;&#x662F;WEBP&#x5C0F;&#x7EC4;&#x5F00;&#x53D1;&#x51FA;&#x7684;&#x65B9;&#x5F0F;&#x3002;</p><h3 id="WEBP&#x6709;&#x635F;&#x7F16;&#x7801;"><a href="#WEBP&#x6709;&#x635F;&#x7F16;&#x7801;" class="headerlink" title="WEBP&#x6709;&#x635F;&#x7F16;&#x7801;"></a>WEBP&#x6709;&#x635F;&#x7F16;&#x7801;</h3><p>VP8&#x7F16;&#x7801;&#x4E0E;JPEG&#x7F16;&#x7801;&#x76F8;&#x8FD1;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x4E0D;&#x540C;&#x662F;&#x5E94;&#x7528;&#x5E27;&#x5185;&#x9884;&#x6D4B;(intra-prediction)&#x3002;&#x5E27;&#x5185;&#x9884;&#x6D4B;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x5E27;&#x5185;&#x5E94;&#x7528;&#x9884;&#x6D4B;&#x7F16;&#x7801;&#xFF0C;&#x5229;&#x7528;&#x56FE;&#x50CF;&#x5DF2;&#x7F16;&#x7801;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x9884;&#x6D4B;&#x53E6;&#x4E00;&#x672A;&#x7F16;&#x7801;&#x90E8;&#x5206;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x9884;&#x6D4B;&#x90E8;&#x5206;&#x7684;&#x539F;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x51CF;&#x53BB;&#x9884;&#x6D4B;&#x51FA;&#x6765;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5F97;&#x5230;&#x5DEE;&#x503C;(residual)&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x5DEE;&#x503C;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x76EE;&#x7684;&#x662F;&#x5DEE;&#x503C;&#x6BD4;&#x539F;&#x6570;&#x636E;&#x5C0F;&#x5F97;&#x591A;&#xFF0C;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x538B;&#x7F29;&#x7684;&#x76EE;&#x7684;&#x3002;&#x89E3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C06;&#x5DEE;&#x503C;&#x548C;&#x9884;&#x6D4B;&#x503C;&#x6C42;&#x548C;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x539F;&#x503C;&#x3002;JPEG&#x7F16;&#x7801;&#x7684;&#x662F;&#x539F;&#x503C;&#xFF0C;&#x800C;WEBP&#x7F16;&#x7801;&#x7684;&#x662F;&#x5DEE;&#x503C;&#xFF0C;&#x8FD9;&#x662F;WEBP&#x6BD4;JPEG&#x540C;&#x6837;&#x56FE;&#x7247;&#x8D28;&#x91CF;&#xFF0C;&#x4F53;&#x79EF;&#x66F4;&#x5C0F;&#x7684;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x3002;</p><p>&#x4E0B;&#x9762;&#x6765;&#x770B;&#x770B;&#x5E27;&#x5185;&#x9884;&#x6D4B;&#xFF0C;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x5728;<a href="http://files.cnblogs.com/files/irish/The_H.264_advanced_video_compression_standard.pdf" target="_blank" rel="noopener">The H.264 Advanced Video Compression Standard, Second Edition</a>&#x4E2D;&#x627E;&#x5230;&#x3002;&#x5E27;&#x5185;&#x9884;&#x6D4B;&#x5206;&#x4E3A;&#x4E24;&#x6B65;&#xFF0C;&#x5B83;&#x4F1A;&#x5148;&#x627E;&#x5230;&#x5408;&#x9002;&#x7684;&#x5206;&#x5757;&#xFF0C;&#x518D;&#x627E;&#x5230;&#x5206;&#x5757;&#x4E2D;&#x5408;&#x9002;&#x7684;&#x6A21;&#x5F0F;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E5%B8%A7%E5%86%85%E9%A2%84%E6%B5%8B%E7%9B%B4%E8%A7%82%E5%8D%B0%E8%B1%A1.png" alt="&#x5E27;&#x5185;&#x9884;&#x6D4B;&#x76F4;&#x89C2;&#x5370;&#x8C61;"></p><p>&#x4E0A;&#x56FE;&#x4E2D;&#x63CF;&#x8FF0;&#x56F4;&#x4E00;&#x5708;&#x7684;&#x591A;&#x79CD;&#x9884;&#x6D4B;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x5DE6;&#x4E00;&#x884C;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x8FDB;&#x884C;4 x 4&#x5206;&#x5757;&#x9884;&#x6D4B;&#x3002;&#x5BF9;&#x4E8E;&#x4EAE;&#x5EA6;&#x53EF;&#x5206;&#x4E3A;4 x 4 &#x3001;16 x 16&#x5B8F;&#x5757;(macroblock)&#x9884;&#x6D4B;&#xFF0C;4 x 4&#x5757;&#x9884;&#x6D4B;&#x53EB;&#x505A;4 &#xD7; 4 Luma Prediction&#xFF0C;16 x 16&#x5757;&#x9884;&#x6D4B;&#x53EB;&#x505A;16 &#xD7; 16 Luma Prediction&#x3002;&#x8272;&#x5EA6;&#x5206;&#x4E3A;8 x 8&#x5B8F;&#x5757;(macroblock)&#x9884;&#x6D4B;&#xFF0C;&#x53EB;&#x505A;8 &#xD7; 8 Chroma Prediction&#x3002;</p><p>&#x4F7F;&#x7528;&#x54EA;&#x79CD;&#x5206;&#x5757;&#x9884;&#x6D4B;&#x662F;&#x7531;&#x89E3;&#x7801;&#x5668;&#x5728;&#x89E3;&#x7801;&#x65F6;&#x52A8;&#x6001;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x5206;&#x5757;&#x8D8A;&#x7CBE;&#x7EC6;&#xFF0C;&#x9884;&#x6D4B;&#x7684;&#x8D8A;&#x51C6;&#xFF0C;&#x9884;&#x6D4B;&#x540E;&#x7684;&#x5DEE;&#x503C;&#x8D8A;&#x5C0F;&#x3002;&#x4F46;&#x662F;&#x5206;&#x5757;&#x8D8A;&#x7CBE;&#x7EC6;&#xFF0C;&#x9700;&#x8981;&#x8BB0;&#x5F55;&#x5982;&#x4F55;&#x5206;&#x5757;&#x7684;&#x4FE1;&#x606F;&#x5C31;&#x8D8A;&#x591A;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x9009;&#x62E9;&#x54EA;&#x79CD;&#x5206;&#x5757;&#x9884;&#x6D4B;&#x662F;&#x5DEE;&#x503C;&#x5927;&#x5C0F;&#x548C;&#x8BB0;&#x5F55;&#x5982;&#x4F55;&#x5206;&#x5757;&#x7684;&#x4FE1;&#x606F;&#x5927;&#x5C0F;&#x7684;&#x6743;&#x8861;(trade-off)&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x7EC6;&#x8282;&#x8D8A;&#x4E30;&#x5BCC;&#x7684;&#x5730;&#x65B9;&#x4F1A;&#x5206;&#x5757;&#x8D8A;&#x7EC6;&#xFF0C;&#x5373;&#x4F7F;&#x7528;4 x 4&#x5206;&#x5757;&#x9884;&#x6D4B;&#x3002;&#x7EC6;&#x8282;&#x76F8;&#x5BF9;&#x4E0D;&#x4E30;&#x5BCC;&#x7684;&#x5730;&#x65B9;&#x4F7F;&#x7528;16 x 16&#x5206;&#x5757;&#x9884;&#x6D4B;&#x3002;</p><p>&#x4E0D;&#x540C;&#x7684;&#x5206;&#x5757;&#x8FD8;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#xFF0C;4 &#xD7; 4 Luma Prediction&#x6709;9&#x79CD;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#xFF0C;16 x 16 LumaPrediction&#x6709;4&#x79CD;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#xFF0C;8 x 8 Chroma Prediction&#x6709;4&#x79CD;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x3002;</p><p>&#x4E0D;&#x540C;&#x7684;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x7684;&#x601D;&#x60F3;&#x662F;&#x57FA;&#x4E8E;&#x89D2;&#x5EA6;&#x5E27;&#x5185;&#x9884;&#x6D4B;(Angular Intra Prediction)&#x548C;&#x5E73;&#x9762;&#x9884;&#x6D4B;(Planar Prediction)&#xFF0C;&#x6216;&#x5C06;&#x88AB;&#x9884;&#x6D4B;&#x7684;&#x534A;&#x5706;&#x5212;&#x5206;&#x4E3A;33&#x4E2A;&#x89D2;&#x5EA6;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E9B;&#x89D2;&#x5EA6;&#x6765;&#x9884;&#x6D4B;&#xFF0C;&#x8FBE;&#x5230;&#x4E00;&#x79CD;&#x6E10;&#x53D8;&#x7684;&#x6548;&#x679C;&#x3002;&#x6216;&#x4ECE;&#x5468;&#x56F4;&#x53D6;&#x5E73;&#x5747;&#x503C;&#x8FBE;&#x5230;&#x4E00;&#x79CD;&#x5E73;&#x9762;&#x7684;&#x6548;&#x679C;&#x3002;&#x4E0B;&#x56FE;&#x4E3A;2-34&#x5171;33&#x4E2A;&#x89D2;&#x5EA6;&#x3001;0&#x4E3A;Planar&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x3001;1&#x4E3A;DC&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x3002;Planar&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x7684;&#x9884;&#x6D4B;&#x503C;&#x4E3A;&#x56DB;&#x8FB9;&#x50CF;&#x7D20;&#x7684;&#x5747;&#x503C;&#x3002;DC&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x7684;&#x9884;&#x6D4B;&#x503C;&#x4E3A;&#x5DE6;&#x65B9;&#x548C;&#x4E0A;&#x65B9;&#x50CF;&#x7D20;&#x7684;&#x5747;&#x503C;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x5C31;&#x662F;&#x91C7;&#x7528;&#x67D0;&#x4E2A;&#x89D2;&#x5EA6;&#x6216;&#x5E73;&#x9762;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_%E8%A7%92%E5%BA%A6%E9%A2%84%E6%B5%8B.png" alt="&#x89D2;&#x5EA6;&#x9884;&#x6D4B;"></p><p>4 &#xD7; 4 Luma Prediction9&#x79CD;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x5E26;&#x6709;&#x5B57;&#x6BCD;&#x4E3A;&#x5DF2;&#x7F16;&#x7801;&#x5757;&#x7528;&#x6765;&#x9884;&#x6D4B;&#x5176;&#x4ED6;&#x5757;&#xFF0C;&#x7070;&#x8272;&#x7684;&#x4E3A;&#x5F85;&#x9884;&#x6D4B;&#x5757;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_4%20x%204%20luma%20Prediction.png" alt="4 x 4 luma Prediction"></p><p>&#x5BF9;&#x4E8E;&#x53EF;&#x80FD;&#x7684;&#x9884;&#x6D4B;&#x6A21;&#x5F0F;&#x90FD;&#x8981;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x8BA1;&#x7B97;&#x51FA;&#x6BCF;&#x79CD;&#x6A21;&#x5F0F;&#x7684;SAE&#xFF0C;SAE&#x4E3A;&#x8861;&#x91CF;&#x9884;&#x6D4B;&#x7684;&#x9519;&#x8BEF;&#x7A0B;&#x5EA6;&#xFF0C;&#x6700;&#x540E;&#x9009;&#x7528;&#x9519;&#x8BEF;&#x7A0B;&#x5EA6;&#x6700;&#x5C0F;&#x7684;&#x6A21;&#x5F0F;&#x3002;&#x4E0B;&#x56FE;&#x4E3A;&#x9884;&#x6D4B;9&#x79CD;&#x6A21;&#x5F0F;&#x540E;&#x6BD4;&#x8F83;SAE&#xFF0C;&#x8089;&#x773C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x7B2C;8&#x79CD;&#x4E3A;&#x9884;&#x6D4B;&#x6700;&#x51C6;&#x786E;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x5176;SAE&#x4E5F;&#x6700;&#x5C0F;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_SAE.png" alt="SAE"></p><p>WEBP&#x7F16;&#x7801;&#x7B2C;&#x4E00;&#x6B65;&#x4E0E;JPEG&#x7F16;&#x7801;&#x4E00;&#x6837;&#xFF0C;&#x8272;&#x5F69;&#x7A7A;&#x95F4;&#x8F6C;&#x6362;&#x3002;&#x7B2C;&#x4E8C;&#x6B65;&#x5C31;&#x662F;&#x5E27;&#x5185;&#x9884;&#x6D4B;&#x3002;&#x7B2C;&#x4E09;&#x6B65;&#x5BF9;&#x56FE;&#x50CF;&#x539F;&#x503C;&#x51CF;&#x53BB;&#x9884;&#x6D4B;&#x503C;&#x5F97;&#x5230;&#x7684;&#x5DEE;&#x503C;(residual)&#x8FDB;&#x884C;DCT&#x3002;&#x7B2C;&#x56DB;&#x6B65;&#x8FDB;&#x884C;&#x91CF;&#x5316;&#xFF0C;WebP&#x91CF;&#x5316;&#x6BD4;JPEG&#x91CF;&#x5316;&#x66F4;&#x590D;&#x6742;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x91CF;&#x5316;&#x3002;&#x7B2C;&#x4E94;&#x6B65;&#x6E38;&#x7A0B;&#x7F16;&#x7801;&#x3002;&#x7B2C;&#x516D;&#x6B65;&#x7528;&#x7B97;&#x672F;&#x7F16;&#x7801;Arithmetic coding&#x4EE3;&#x66FF;huffman&#x7F16;&#x7801;&#x3002;</p><h3 id="WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;"><a href="#WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;" class="headerlink" title="WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;"></a>WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;</h3><p>WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;&#x4ECD;&#x662F;&#x57FA;&#x4E8E;&#x9884;&#x6D4B;&#x7F16;&#x7801;&#x548C;&#x51CF;&#x5C11;&#x7A7A;&#x95F4;&#x5197;&#x4F59;&#x6027;&#x3002;</p><p>1.Predictor Transform</p><p>WEBP&#x65E0;&#x635F;&#x7F16;&#x7801;&#x4F7F;&#x7528;&#x7684;&#x9884;&#x6D4B;&#x7F16;&#x7801;&#xFF0C;&#x4E0E;&#x65E0;&#x635F;&#x7F16;&#x7801;&#x57FA;&#x4E8E;VP8&#x7684;&#x5E27;&#x5185;&#x9884;&#x6D4B;&#x4E0D;&#x540C;&#xFF0C;&#x65E0;&#x635F;&#x7F16;&#x7801;&#x7684;&#x9884;&#x6D4B;&#x7F16;&#x7801;&#x5BF9;&#x4E00;&#x4E2A;&#x5757;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x3002;&#x5E76;&#x4E14;&#x6709;14&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x5F0F;&#x3002;&#x5047;&#x8BBE;&#xFF0C;P&#x4E3A;&#x9884;&#x6D4B;&#x70B9;&#xFF0C;O&#x3001;TL&#x3001;T&#x3001;TR&#x3001;L&#x4E3A;&#x5DF2;&#x7F16;&#x7801;&#x70B9;&#xFF0C;X&#x4E3A;&#x672A;&#x7F16;&#x7801;&#x70B9;&#xFF0C;TL&#x4EE3;&#x8868;Top-Left&#xFF0C;TR&#x4EE3;&#x8868;Top-Right&#x3002;</p><pre><code class="lang-c">&#x9884;&#x6D4B;&#x5757;P&#x4F4D;&#x7F6E;&#x793A;&#x610F;&#x56FE;O    O    O    O    O    O    O    O    O    O    OO    O    O    O    O    O    O    O    O    O    OO    O    O    O    TL   T    TR   O    O    O    OO    O    O    O    L    P    X    X    X    X    XX    X    X    X    X    X    X    X    X    X    XX    X    X    X    X    X    X    X    X    X    X&#x6A21;&#x5F0F; &#x9884;&#x6D4B;&#x503C;0    0xff0000001    L2    T3    TR4    TL5    Average2(Average2(L, TR), T)6    Average2(L, TL)7    Average2(L, T)8    Average2(TL, T)9    Average2(T, TR)10    Average2(Average2(L, TL), Average2(T, TR))11    Select(L, T, TL)12    ClampAddSubtractFull(L, T, TL)13    ClampAddSubtractHalf(Average2(L, T), TL)</code></pre><p>&#x6700;&#x540E;&#x4ECD;&#x5BF9;&#x771F;&#x5B9E;&#x503C;&#x548C;&#x9884;&#x6D4B;&#x503C;&#x7684;&#x5DEE;&#x503C;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x3002;</p><p>2.Color Transform</p><p>&#x6B64;&#x6B65;&#x4E3A;&#x4E0B;&#x4E00;&#x6B65;&#x505A;&#x51C6;&#x5907;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x51CF;&#x5C11;&#x7A7A;&#x95F4;&#x5197;&#x4F59;&#x6027;&#x3002;JPEG&#x548C;PNG&#x90FD;&#x662F;&#x51CF;&#x5C11;&#x50CF;&#x7D20;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;WEBP&#x4ECE;&#x50CF;&#x7D20;&#x5185;&#x90E8;&#x7740;&#x624B;&#x3002;&#x5C06;&#x50CF;&#x7D20;Green&#x989C;&#x8272;&#x503C;&#x4FDD;&#x7559;&#xFF0C;Red&#x989C;&#x8272;&#x503C;&#x8F6C;&#x53D8;&#x4E3A;&#x4ECE;Green&#x503C;&#x8868;&#x8FBE;&#xFF0C;Blue&#x989C;&#x8272;&#x503C;&#x4ECE;Green&#x989C;&#x8272;&#x548C;Red&#x989C;&#x8272;&#x503C;&#x8868;&#x8FBE;&#x3002;</p><p>3.Subtract Green Transform</p><p>&#x53BB;&#x6389;Red&#x989C;&#x8272;&#x503C;&#x4E2D;Green&#x989C;&#x8272;&#x503C;&#x8868;&#x8FBE;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x53BB;&#x6389;Blue&#x989C;&#x8272;&#x503C;&#x4E2D;Green&#x989C;&#x8272;&#x503C;&#x8868;&#x8FBE;&#x7684;&#x90E8;&#x5206;&#x3002;</p><p>4.Color Indexing Transform</p><p>&#x5982;&#x679C;&#x6574;&#x5F20;&#x56FE;&#x7247;&#x50CF;&#x7D20;&#x7684;&#x989C;&#x8272;&#x503C;&#x6CA1;&#x6709;&#x8D85;&#x8FC7;256&#x4E2A;&#xFF0C;&#x5219;&#x5EFA;&#x7ACB;&#x7C7B;&#x4F3C;&#x8C03;&#x8272;&#x677F;&#x4E00;&#x6837;&#x7684;&#x6570;&#x7EC4;&#x6765;&#x6620;&#x5C04;&#x989C;&#x8272;&#x3002;&#x50CF;&#x7D20;&#x5B58;&#x50A8;&#x7D22;&#x5F15;&#x5C31;&#x53EF;&#x4EE5;&#x3002;</p><p>5.Compression</p><p>&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x53EF;&#x4EE5;&#x7528;3&#x4E2D;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;Huffman&#x7F16;&#x7801;(Huffman Coded Literals)&#x3001;LZ77&#x540E;&#x5411;&#x5F15;&#x7528;(LZ77 Backward Reference)&#x3001;&#x989C;&#x8272;&#x7F13;&#x5B58;&#x7F16;&#x7801;(Color Cache Code)&#x3002;&#x5927;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x7528;Huffman&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x3002;&#x800C;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x91CD;&#x590D;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;LZ77&#x540E;&#x5411;&#x5F15;&#x7528;&#x3002;LZ77&#x540E;&#x5411;&#x5F15;&#x7528;&#xFF0C;&#x6307;&#x7684;&#x662F;&#x524D;&#x9762;&#x51FA;&#x73B0;&#x8FC7;&#x4E86;&#x76F8;&#x540C;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x91CD;&#x590D;&#x5E8F;&#x5217;&#x6539;&#x4E3A;&#x524D;&#x9762;&#x76F8;&#x540C;&#x5E8F;&#x5217;&#x4F4D;&#x7F6E;&#x7684;&#x5F15;&#x7528;&#x5373;&#x53EF;&#xFF0C;&#x5F15;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x6309;LZ77&#x524D;&#x7F00;&#x7F16;&#x7801;&#x3002;&#x5F15;&#x7528;&#x5206;&#x4E3A;Length&#x548C;Distance&#x4E24;&#x90E8;&#x5206;&#xFF0C;Length&#x4EE3;&#x8868;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#xFF0C;Distance&#x4EE3;&#x8868;&#x524D;&#x9762;&#x5E8F;&#x5217;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x989C;&#x8272;&#x7F13;&#x5B58;&#x7F16;&#x7801;&#x662F;&#x5728;&#x7F16;&#x7801;&#x548C;&#x89E3;&#x7801;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x5C06;&#x6700;&#x8FD1;&#x7528;&#x8FC7;&#x7684;&#x989C;&#x8272;&#x7F13;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x968F;&#x7740;&#x626B;&#x63CF;&#x65B0;&#x7684;&#x50CF;&#x7D20;&#x7F13;&#x5B58;&#x4F1A;&#x4E0D;&#x65AD;&#x66F4;&#x65B0;&#x3002;</p><h3 id="WEBP&#x6587;&#x4EF6;&#x683C;&#x5F0F;"><a href="#WEBP&#x6587;&#x4EF6;&#x683C;&#x5F0F;" class="headerlink" title="WEBP&#x6587;&#x4EF6;&#x683C;&#x5F0F;"></a>WEBP&#x6587;&#x4EF6;&#x683C;&#x5F0F;</h3><p>WEBP&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x662F;&#x53C2;&#x7167;RIFF(&#x8D44;&#x6E90;&#x4EA4;&#x6362;&#x6863;&#x6848;&#x683C;&#x5F0F;)&#x6765;&#x5B58;&#x50A8;&#x7684;&#xFF0C;WEBP&#x6587;&#x4EF6;&#x5F00;&#x5934;&#x662F;&#x56DB;&#x5B57;&#x8282;&#x7684;RIFF&#x7684;ASCII&#x7801;&#x3001;&#x56DB;&#x5B57;&#x8282;&#x7684;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3001;&#x56DB;&#x5B57;&#x8282;&#x7684;WEBP&#x7684;ASCII&#x7801;&#x3002;&#x6587;&#x4EF6;&#x6784;&#x6210;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#x548C;PNG&#x4E00;&#x81F4;&#x662F;Chunk&#x3002;</p><p>chunk&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><pre><code class="lang-c">typedef struct {    unsigned int fourCC;       unsigned int size;    unsigned char *payLoad;}Chunk;</code></pre><p>FourCC&#x4EE3;&#x8868;chunk&#x6807;&#x8BC6;&#x7684;ASCII&#x7801;&#x3002;Size&#x4EE3;&#x8868;&#x9664;Size&#x5B57;&#x6BB5;&#x7684;&#x957F;&#x5EA6;&#x3002;PayLoad&#x4EE3;&#x8868;&#x6570;&#x636E;&#x3002;</p><p>VP8X</p><p>&#x7D27;&#x63A5;&#x7740;WEBP&#x6587;&#x4EF6;&#x6807;&#x8BC6;&#x7B26;&#x7684;&#x662F;&#x62D3;&#x5C55;Chunk VP8X(Extended)</p><pre><code class="lang-c">typedef struct {    unsigned char combine;  //|Rsv|I|L|E|X|A|R|    unsigned short reserved_first;     unsigned char reserved_second;     unsigned short canvas_width_minus_one_first;      unsigned char canvas_width_minus_one_second;      unsigned short canvas_height_minus_one_first;      unsigned char canvas_height_minus_one_second;  }VP8X;</code></pre><p>VP8X&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x662F;&#x4E2A;&#x5408;&#x5E76;&#x5B57;&#x8282;&#xFF0C;&#x8FD9;&#x4E2A;&#x5408;&#x5E76;&#x5B57;&#x8282;&#x7684;&#x9996;&#x4E24;&#x4F4D;&#x548C;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;&#x4FDD;&#x7559;&#x4F4D;&#xFF0C;&#x4E2D;&#x95F4;5&#x4F4D;&#xFF0C;&#x6BCF;&#x4F4D;&#x6807;&#x8BC6;&#x662F;&#x5426;&#x6709;&#x76F8;&#x5173;&#x7684;Chunk&#xFF0C;&#x5206;&#x522B;&#x4E3A;ICC&#x3001;Alpha&#x3001;EXIF&#x3001;XMP&#x3001;Animation&#x3002;&#x540E;&#x9762;&#x7684;Reserve&#x3001;Canvas_Width_Minus_One&#x3001;Canvas_Height_Minus_One&#x90FD;&#x662F;&#x4E24;&#x4E2A;&#x5B57;&#x6BB5;&#x7EC4;&#x5408;&#x6210;&#x4E00;&#x4E2A;24&#x4F4D;&#x5B57;&#x6BB5;&#x3002;</p><p>VP8&#x548C;VP8L</p><p>&#x6709;&#x635F;&#x7F16;&#x7801;&#x7684;&#x6570;&#x636E;Chunk&#x4E3A;VP8&#xFF0C;&#x6309;&#x7167;VP8&#x7684;&#x6807;&#x51C6;&#x7F16;&#x7801;&#x3002;&#x65E0;&#x635F;&#x7F16;&#x7801;&#x7684;&#x6570;&#x636E;Chunk&#x4E3A;VP8L&#x3002;</p><p>ANIM</p><p>ANIM&#x4E3A;&#x63A7;&#x5236;&#x52A8;&#x753B;&#x7684;Chunk&#xFF0C;background_color&#x4EE3;&#x8868;&#x753B;&#x5E03;&#x9ED8;&#x8BA4;&#x989C;&#x8272;&#xFF0C;loop_count&#x4EE3;&#x8868;&#x52A8;&#x753B;&#x5FAA;&#x73AF;&#x6B21;&#x6570;&#xFF0C;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><pre><code class="lang-c">typedef struct {    unsigned int background_color;    unsigned short loop_count;}ANIM;</code></pre><p>ANMF</p><p>ANMF&#x4E3A;&#x6BCF;&#x4E00;&#x5E27;&#x7684;&#x5934;&#x90E8;Chunk&#xFF0C;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><pre><code class="lang-c">typedef struct {    unsigned short frame_x_first;    unsigned char frame_x_second;    unsigned short frame_y_first;    unsigned char frame_y_second;    unsigned short frame_width_minus_one_first;    unsigned char frame_width_minus_one_second;    unsigned short frame_height_minus_one_first;    unsigned char frame_height_minus_one_second;    unsigned short frame_duration_first;    unsigned char frame_duration_second;    unsigned char combine;  //|Reserved|B|D|    unsigned char *frame_data;}ANMF;</code></pre><p>&#x7ED3;&#x6784;&#x7684;&#x524D;10&#x4E2A;&#x5B57;&#x6BB5;&#x90FD;&#x662F;&#x4E24;&#x4E24;&#x7EC4;&#x5408;&#x6210;24&#x4F4D;&#x5B57;&#x6BB5;&#x3002;&#x5206;&#x522B;&#x4E3A;&#x5E27;&#x8D77;&#x59CB;x&#x5750;&#x6807;&#x3001;&#x5E27;&#x8D77;&#x59CB;y&#x5750;&#x6807;&#x3001;&#x5E27;&#x5BBD;&#x51CF;&#x4E00;&#x3001;&#x5E27;&#x9AD8;&#x51CF;&#x4E00;&#x3001;&#x5E27;&#x5C55;&#x793A;&#x65F6;&#x957F;&#x3002;combine&#x5B57;&#x6BB5;&#x524D;6&#x4F4D;&#x4E3A;&#x4FDD;&#x7559;&#x4F4D;&#xFF0C;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;blending method&#x4F4D;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;disposal _method&#x4F4D;&#x3002;blending method&#x503C;&#x4E3A;0&#xFF0C;&#x5219;&#x4E0D;alpha_blend&#xFF0C;&#x4E3A;1&#xFF0C;&#x5219;alpha_blend&#xFF0C;&#x8FD9;&#x4E0E;APNG&#x4E00;&#x81F4;&#x3002;disposal_method&#x503C;&#x4E3A;0&#xFF0C;&#x5219;&#x4E0D;&#x505A;&#x5904;&#x7406;&#xFF0C;&#x4E3A;1&#xFF0C;&#x5219;&#x5C06;&#x753B;&#x5E03;&#x6E05;&#x7A7A;&#x4E3A;&#x900F;&#x660E;&#x9ED1;&#x8272;&#x3002;</p><h2 id="BPG"><a href="#BPG" class="headerlink" title="BPG"></a>BPG</h2><p>BPG&#x4ECD;&#x662F;&#x4E00;&#x4E2A;&#x5E74;&#x8F7B;&#x7684;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#xFF0C;&#x5728;2014&#x5E74;&#x88AB;&#x5F00;&#x53D1;&#x51FA;&#x6765;&#xFF0C;&#x57FA;&#x4E8E;HEVC&#x89C6;&#x9891;&#x7F16;&#x7801;&#x6807;&#x51C6;&#x3002;&#x538B;&#x7F29;&#x6548;&#x679C;&#x76F8;&#x5F53;&#x60CA;&#x4EBA;&#x3002;&#x5199;&#x672C;&#x6587;&#x7684;&#x65F6;&#x5019;&#x4ECD;&#x7136;&#x662F;0.97&#x7248;&#x672C;&#x53D1;&#x5E03;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x8FDB;&#x5165;&#x6B63;&#x5F0F;&#x7248;&#x3002;</p><h2 id="&#x7ED3;&#x8BED;"><a href="#&#x7ED3;&#x8BED;" class="headerlink" title="&#x7ED3;&#x8BED;"></a>&#x7ED3;&#x8BED;</h2><p>&#x4E86;&#x89E3;&#x4E86;&#x5404;&#x79CD;&#x56FE;&#x7247;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x540E;&#xFF0C;&#x4E0D;&#x540C;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x7684;&#x4F18;&#x52A3;&#x5C31;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x4E86;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;JPEG&#x6BD4;PNG&#x538B;&#x7F29;&#x7A0B;&#x5EA6;&#x66F4;&#x5927;&#xFF0C;&#x6587;&#x4EF6;&#x4F53;&#x79EF;&#x66F4;&#x5C0F;&#x3002;&#x56FE;&#x7247;&#x8272;&#x5F69;&#x8D8A;&#x590D;&#x6742;&#xFF0C;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#x8D8A;&#x591A;&#xFF0C;&#x56FE;&#x7247;&#x4FE1;&#x53F7;&#x9AD8;&#x9891;&#x6BB5;&#x8D8A;&#x5C11;&#xFF0C;JPEG&#x7684;&#x6709;&#x635F;&#x7F16;&#x7801;&#x635F;&#x5931;&#x8D8A;&#x5C11;&#x3002;&#x5BF9;&#x4E8E;&#x8272;&#x5F69;&#x590D;&#x6742;&#x7684;&#x56FE;&#x7247;JPEG&#x76F8;&#x6BD4;PNG&#x662F;&#x8F83;&#x597D;&#x7684;&#x9009;&#x62E9;&#x3002;&#x5BF9;&#x4E8E;&#x8272;&#x5F69;&#x5355;&#x4E00;&#x7684;&#x56FE;&#x7247;&#xFF0C;JPEG&#x6709;&#x635F;&#x7F16;&#x7801;&#x540E;&#xFF0C;&#x56FE;&#x7247;&#x9AD8;&#x9891;&#x6BB5;&#x5927;&#x91CF;&#x88AB;&#x4E22;&#x5F03;&#xFF0C;&#x5BFC;&#x81F4;&#x56FE;&#x7247;&#x8D28;&#x91CF;&#x5F88;&#x5DEE;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;PNG&#x662F;&#x66F4;&#x597D;&#x7684;&#x9009;&#x62E9;&#x3002;WEBP&#x663E;&#x7136;&#x4F1A;&#x6BD4;JPEG&#x4F53;&#x79EF;&#x66F4;&#x5C0F;&#xFF0C;&#x7F16;&#x7801;&#x65F6;&#x95F4;&#x66F4;&#x957F;&#xFF0C;&#x4F46;&#x957F;&#x7684;&#x65F6;&#x95F4;&#x76F8;&#x5BF9;&#x4E8E;&#x4F20;&#x8F93;&#x65F6;&#x95F4;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x3002;WEBP&#x6BD4;PNG&#x4F53;&#x79EF;&#x66F4;&#x5C0F;&#xFF0C;&#x8272;&#x5F69;&#x5355;&#x4E00;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x89E3;&#x7801;&#x65F6;&#x95F4;&#x6BD4;PNG&#x66F4;&#x77ED;&#xFF0C;&#x8272;&#x5F69;&#x590D;&#x6742;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x89E3;&#x7801;&#x65F6;&#x95F4;&#x6BD4;PNG&#x66F4;&#x957F;&#x3002;BPG&#x56FE;&#x7247;&#x7684;&#x6587;&#x4EF6;&#x4F53;&#x79EF;&#x662F;&#x73B0;&#x9636;&#x6BB5;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#xFF0C;&#x89E3;&#x7801;&#x65F6;&#x95F4;&#x4E5F;&#x662F;&#x6700;&#x957F;&#x7684;&#x3002;&#x56E0;&#x4E3A;BPG&#x73B0;&#x5728;&#x652F;&#x6301;&#x60C5;&#x51B5;&#x4E0D;&#x592A;&#x7406;&#x60F3;&#xFF0C;&#x800C;&#x4E14;&#x4E13;&#x5229;&#x4E5F;&#x662F;&#x5934;&#x75BC;&#x7684;&#x95EE;&#x9898;&#xFF0C;BPG&#x7684;&#x672A;&#x6765;&#x5C1A;&#x4E0D;&#x660E;&#x6717;&#x3002;&#x5982;&#x679C;&#x8BF4;&#x60F3;&#x5C1D;&#x8BD5;&#x65B0;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x6765;&#x4F18;&#x5316;&#x6027;&#x80FD;&#xFF0C;WEBP&#x662F;&#x5F88;&#x5B8C;&#x7F8E;&#x7684;&#x9009;&#x62E9;&#x3002;BPG&#x7684;&#x6210;&#x672C;&#x4F1A;&#x5927;&#x4E00;&#x4E9B;&#x3002;</p><p>&#x4F60;&#x6211;&#x7684;&#x56FE;&#x7247;&#x4E4B;&#x65C5;&#x8FCE;&#x6765;&#x4E86;&#x5C3E;&#x58F0;&#xFF0C;&#x65B0;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x5728;&#x65E7;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x6216;&#x89C6;&#x9891;&#x683C;&#x5F0F;&#x57FA;&#x7840;&#x4E0A;&#x6D8C;&#x73B0;&#x51FA;&#x6765;&#x3002;</p><p>&#x51E0;&#x5341;&#x5E74;&#x95F4;&#xFF0C;&#x4EBA;&#x4EEC;&#x4E0D;&#x505C;&#x5BF9;&#x66F4;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x63A2;&#x7D22;&#xFF0C;&#x51E0;&#x5341;&#x5E74;&#x540E;&#xFF0C;&#x4ECD;&#x7136;&#x4F1A;&#x8FD9;&#x6837;&#x3002;</p><p>&#x4EBA;&#x7C7B;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x8FDB;&#x6B65;&#x8FC7;&#x6765;&#x7684;&#x3002;</p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;"></a>&#x5F15;&#x7528;</h2><p>JPEG <a href="https://www.ibm.com/developerworks/cn/linux/l-cn-jpeg/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cn-jpeg/</a></p><p>JPEG <a href="http://www.codingnow.com/2000/download/jpeg.txt" target="_blank" rel="noopener">http://www.codingnow.com/2000/download/jpeg.txt</a></p><p>PNG <a href="https://www.w3.org/TR/PNG/" target="_blank" rel="noopener">https://www.w3.org/TR/PNG/</a></p><p>PNG <a href="http://www.libpng.org/pub/png/book/chapter09.html" target="_blank" rel="noopener">http://www.libpng.org/pub/png/book/chapter09.html</a></p><p>APNG <a href="https://wiki.mozilla.org/APNG_Specification" target="_blank" rel="noopener">https://wiki.mozilla.org/APNG_Specification</a></p><p>WEBP <a href="https://developers.google.com/speed/webp/docs/compression" target="_blank" rel="noopener">https://developers.google.com/speed/webp/docs/compression</a></p><p>BPG <a href="http://bellard.org/bpg/" target="_blank" rel="noopener">http://bellard.org/bpg/</a></p><p>&#x9884;&#x6D4B;&#x7F16;&#x7801; <a href="https://yq.aliyun.com/articles/31084" target="_blank" rel="noopener">https://yq.aliyun.com/articles/31084</a></p><p>&#x9884;&#x6D4B;&#x7F16;&#x7801; <a href="http://blog.csdn.net/shaqoneal/article/details/38225189" target="_blank" rel="noopener">http://blog.csdn.net/shaqoneal/article/details/38225189</a></p><p>&#x5E27;&#x5185;&#x9884;&#x6D4B; <a href="http://guoh.org/lifelog/2013/11/h-264-intra-prediction/" target="_blank" rel="noopener">http://guoh.org/lifelog/2013/11/h-264-intra-prediction/</a></p><p>&#x79FB;&#x52A8;&#x7AEF;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x8C03;&#x7814; <a href="http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/" target="_blank" rel="noopener">http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/</a></p>]]></content>
      
      <categories>
          
          <category> 图片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS中的imageIO与image解码</title>
      <link href="/iOS%E4%B8%AD%E7%9A%84imageIO%E4%B8%8Eimage%E8%A7%A3%E7%A0%81/"/>
      <url>/iOS%E4%B8%AD%E7%9A%84imageIO%E4%B8%8Eimage%E8%A7%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="ImageIO"><a href="#ImageIO" class="headerlink" title="ImageIO"></a>ImageIO</h2><p>ImageIO&#x5BF9;&#x5916;&#x5F00;&#x653E;&#x7684;&#x5BF9;&#x8C61;&#x6709;<em>CGImageSourceRef</em>&#x3001;<em>CGImageDestinationRef</em>&#xFF0C;&#x4E0D;&#x5BF9;&#x5916;&#x5F00;&#x653E;&#x7684;&#x5BF9;&#x8C61;&#x6709;<em>CGImageMetadataRef</em>&#x3002;CoreGraphics&#x4E2D;&#x7ECF;&#x5E38;&#x4E0E;imageIO&#x6253;&#x4EA4;&#x9053;&#x7684;&#x5BF9;&#x8C61;&#x6709;<em>CGImageRef</em>&#x548C;<em>CGDataProvider</em>&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x770B;&#x8FD9;&#x4E94;&#x4E2A;&#x5BF9;&#x8C61;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;UIImage&#x4E2D;&#x62C5;&#x4EFB;&#x4E86;&#x54EA;&#x4E9B;&#x89D2;&#x8272;&#x3002;</p><a id="more"></a><p>&#x7528;TimeProfiler&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x6765;&#x770B;&#x521B;&#x5EFA;<em>UIImage</em>&#x8FC7;&#x7A0B;&#x4E2D;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x7531;&#x4E8E;TimeProfiler&#x7EDF;&#x8BA1;&#x51FD;&#x6570;&#x6808;&#x4E3A;&#x95F4;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7EDF;&#x8BA1;&#x4E00;&#x6B21;&#xFF0C;&#x5BFC;&#x81F4;&#x6CA1;&#x6709;&#x8BB0;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x800C;&#x4E14;&#x6BCF;&#x6B21;&#x51FD;&#x6570;&#x6808;&#x8FD8;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x6CD5;&#x7CBE;&#x786E;&#x5224;&#x65AD;&#x51FD;&#x6570;&#x6808;&#x662F;&#x5982;&#x4F55;&#x8C03;&#x7528;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5927;&#x6982;&#x63A8;&#x6D4B;&#x51FA;&#x6BCF;&#x6B65;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x3002;</p><p>&#x4ECE;<em>CFDataRef</em>&#x5230;<em>UIImage</em>&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><pre><code class="lang-objective-c"> NSString *resource = [[NSBundle mainBundle] pathForResource:@&quot;the_red_batman&quot; ofType:@&quot;png&quot;]; NSData *data = [NSData dataWithContentsOfFile:resource options:0 error:nil]; CFDataRef dataRef = (__bridge CFDataRef)data; CGImageSourceRef source = CGImageSourceCreateWithData(dataRef, nil); CGImageRef cgImage = CGImageSourceCreateImageAtIndex(source, 0, nil); UIImage *image = [UIImage imageWithCGImage:cgImage];</code></pre><p><em>CGImagSourceCreateWithData</em> <img src="http://o79rgqboc.bkt.clouddn.com/blog_CGImageSourceCreate%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.png" alt="CGImageSourceCreate&#x51FD;&#x6570;&#x8C03;&#x7528;"></p><p>&#x8C03;&#x7528;&#x4E86;&#x5185;&#x90E8;&#x51FD;&#x6570;<em>_CGImageReadCreate</em>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;<em>CGImageSourceRef</em>&#x8DDF;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x6709;&#x5173;&#x3002;</p><p><em>CGImageSourceCreateImageAtIndex</em></p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_CGImage%20Creat%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-1.png" alt="CGImage Creat&#x51FD;&#x6570;&#x8C03;&#x7528;-1"></p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_CGImage%20Creat%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8-2.png" alt="CGImage Creat&#x51FD;&#x6570;&#x8C03;&#x7528;-2"></p><p>&#x8C03;&#x7528;&#x4E86;<em>_cg_png_read_info</em>&#x548C;<em>CGImageMetadataCreateMutable</em>&#xFF0C;&#x5728;&#x6784;&#x5EFA;<em>CGImageRef</em>&#x65F6;&#xFF0C;&#x8BFB;&#x53D6;&#x4E86;&#x56FE;&#x7247;&#x7684;&#x57FA;&#x7840;&#x6570;&#x636E;&#x548C;&#x5143;&#x6570;&#x636E;&#xFF0C;&#x57FA;&#x7840;&#x6570;&#x636E;&#x4E2D;&#x5305;&#x62EC;Image&#x7684;header chunk&#xFF0C;&#x6BD4;&#x5982;png&#x7684;IHDR&#x3002;&#x5143;&#x6570;&#x636E;&#x662F;&#x7531;<em>CGImageMetadataRef</em>&#x6765;&#x62BD;&#x8C61;&#x7684;&#x3002;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x56FE;&#x7247;&#x7684;&#x5176;&#x4ED6;&#x6570;&#x636E;&#xFF0C;&#x66F4;&#x6CA1;&#x6709;&#x505A;&#x89E3;&#x7801;&#x7684;&#x52A8;&#x4F5C;&#x3002;</p><p>&#x6709;&#x8DA3;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x8C03;&#x7528;<em>CGImageSourceCopyPropertiesAtIndex</em></p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_CGImageSourceCopyPropertiesAtIndex%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.png" alt="CGImageSourceCopyPropertiesAtIndex&#x51FD;&#x6570;&#x8C03;&#x7528;"></p><p><em>CGImageSourceCopyPropertiesAtIndex</em>&#x7684;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E86;<em>CGImageMetadataRef</em>&#xFF0C;&#x5982;&#x679C;&#x518D;&#x52A0;&#x4E0A;<em>ImageIO/CGImageMetadata.h</em>&#x6587;&#x4EF6;&#x7684;&#x6CE8;&#x91CA;</p><blockquote><p>@description CGImageMetadata APIs allow clients to view and modify metadata</p><p>for popular image formats. ImageIO supports the EXIF, IPTC, and XMP</p><p>metadata specifications. Please refer to CGImageSource.h for functions to </p><p>read metadata from a CGImageSource, and CGImageDestination.h for functions to</p><p>write metadata to a CGImageDestination. CGImageDestinationCopyImageSource can</p><p>be used to modify metadata without recompressing the image.</p></blockquote><p>&#x8BF4;&#x660E;<em>CGImageMetadataRef</em>&#x62BD;&#x8C61;&#x51FA;&#x56FE;&#x7247;&#x4E2D;EXIF&#x3001;IPTC&#x3001;XMP&#x683C;&#x5F0F;&#x7684;&#x5143;&#x6570;&#x636E;&#x63D2;&#x5165;&#x5B57;&#x6BB5;&#xFF0C;&#x800C;&#x82E5;&#x60F3;&#x83B7;&#x5F97;<em>CGImageMetadataRef</em>&#x5FC5;&#x987B;&#x8981;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x3002;</p><p>&#x540C;&#x6837;&#xFF0C;&#x770B;&#x770B;&#x6709;&#x5173;<em>CGDataProviderRef</em>&#x7684;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><pre><code class="lang-objective-c">//&#x5C06;CGImageSourceRef&#x6539;&#x7531;CGDataProviderRef&#x521B;&#x5EFA;   CFDataRef dataRef = (__bridge CFDataRef)data;CGDataProviderRef dataProvider = CGDataProviderCreateWithCFData(dataRef);CGImageSourceRef source = CGImageSourceCreateWithDataProvider(dataProvider, nil);</code></pre><pre><code class="lang-objective-c">//&#x6D4B;&#x8BD5;&#x7531;CGImageRef&#x83B7;&#x53D6;CGDataProviderRef&#x548C;&#x7531;CGDataProviderRef&#x521B;&#x5EFA;CGImageRefCGDataProviderRef newDataProvider = CGImageGetDataProvider(cgImage);size_t width = CGImageGetWidth(cgImage);size_t height = CGImageGetHeight(cgImage);CGColorSpaceRef space = CGImageGetColorSpace(cgImage);size_t bitsPerComponent = CGImageGetBitsPerComponent(cgImage);size_t bitsPerPixel = CGImageGetBitsPerPixel(cgImage);size_t bytesPerRow = CGImageGetBytesPerRow(cgImage);CGBitmapInfo bitmapInfo = CGImageGetBitmapInfo(cgImage);CGDataProviderRef newDataProvider = CGImageGetDataProvider(cgImage);CGImageRef newImage = CGImageCreate(width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, bitmapInfo, newDataProvider, NULL, false, kCGRenderingIntentDefault);</code></pre><p>&#x5F88;&#x53EF;&#x60DC;&#xFF0C;&#x6CA1;&#x6709;&#x627E;&#x51FA;&#x6709;&#x5173;<em>CGDataProviderRef</em>&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x3002;&#x65E0;&#x6CD5;&#x5F97;&#x51FA;<em>CGDataProviderRef</em>&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x3002;</p><p>&#x770B;&#x770B;&#x6709;&#x5173;<em>CGImageDestinationRef</em>&#x7684;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x4EE3;&#x7801;&#x548C;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5982;&#x4E0B;</p><pre><code class="lang-objective-c">CFMutableDataRef buffer = CFDataCreateMutable(kCFAllocatorDefault, 0);      CGImageDestinationRef destination = CGImageDestinationCreateWithData(buffer, kUTTypePNG, 1, NULL);CGImageDestinationAddImage(destination, cgImage, nil);CGImageDestinationFinalize(destination);</code></pre><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_CGImageDestinationRef%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.png" alt="CGImageDestinationRef&#x51FD;&#x6570;&#x8C03;&#x7528;"></p><p><em>CGImageDestinationRef</em>&#x5C06;&#x56FE;&#x7247;&#x6570;&#x636E;&#x5199;&#x5165;&#x76EE;&#x7684;&#x5730;&#xFF0C;&#x5E76;&#x4E14;&#x8D1F;&#x8D23;&#x505A;&#x56FE;&#x7247;&#x7F16;&#x7801;&#x6216;&#x8005;&#x8BF4;&#x56FE;&#x7247;&#x538B;&#x7F29;&#x3002;</p><h2 id="&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"><a href="#&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;" class="headerlink" title="&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"></a>&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;</h2><p><em>CGImageSourceRef</em>&#x62BD;&#x8C61;&#x4E86;&#x5BF9;&#x8BFB;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x7684;&#x901A;&#x9053;&#xFF0C;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x8981;&#x901A;&#x8FC7;&#x5B83;&#xFF0C;&#x5B83;&#x81EA;&#x5DF1;&#x672C;&#x8EAB;&#x4E0D;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x7684;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x5728;&#x4F60;&#x8C03;&#x7528;<em>CGImageSourceCopyPropertiesAtIndex</em>&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x624D;&#x53BB;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x5143;&#x6570;&#x636E;&#x3002;</p><p><em>CGImageMetadataRef</em>&#x62BD;&#x8C61;&#x51FA;&#x56FE;&#x7247;&#x4E2D;EXIF&#x3001;IPTC&#x3001;XMP&#x683C;&#x5F0F;&#x7684;&#x5143;&#x6570;&#x636E;&#xFF0C;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x83B7;&#x53D6;&#x3002;</p><p><em>CGImageRef</em>&#x62BD;&#x8C61;&#x4E86;&#x56FE;&#x50CF;&#x7684;&#x57FA;&#x672C;&#x6570;&#x636E;&#x548C;&#x5143;&#x6570;&#x636E;&#xFF0C;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x53BB;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x7684;&#x57FA;&#x7840;&#x6570;&#x636E;&#x548C;&#x5143;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x7684;&#x5176;&#x4ED6;&#x6570;&#x636E;&#xFF0C;&#x6CA1;&#x6709;&#x505A;&#x56FE;&#x7247;&#x89E3;&#x7801;&#x7684;&#x52A8;&#x4F5C;&#x3002;</p><p><em>CGDataProviderRef</em>&#x6CA1;&#x6709;&#x5F97;&#x51FA;&#x6709;&#x7528;&#x4FE1;&#x606F;&#x3002;</p><p><em>CGImageDestinationRef</em>&#x62BD;&#x8C61;&#x5199;&#x5165;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x7684;&#x901A;&#x9053;&#xFF0C;&#x5199;&#x5165;&#x56FE;&#x50CF;&#x8981;&#x901A;&#x8FC7;&#x5B83;&#xFF0C;&#x5728;&#x5199;&#x5165;&#x56FE;&#x7247;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x8D1F;&#x8D23;&#x56FE;&#x7247;&#x7684;&#x7F16;&#x7801;&#x3002;</p><h2 id="Image&#x89E3;&#x7801;"><a href="#Image&#x89E3;&#x7801;" class="headerlink" title="Image&#x89E3;&#x7801;"></a>Image&#x89E3;&#x7801;</h2><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4ECE;<em>CFDataRef</em>&#x76F4;&#x5230;&#x521B;&#x5EFA;&#x51FA;<em>UIImage</em>&#xFF0C;&#x90FD;&#x6CA1;&#x6709;&#x8C03;&#x7528;&#x8FC7;&#x5BF9;&#x56FE;&#x50CF;&#x89E3;&#x7801;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EA;&#x8BFB;&#x53D6;&#x4E86;&#x4E00;&#x4E9B;&#x56FE;&#x50CF;&#x57FA;&#x7840;&#x6570;&#x636E;&#x548C;&#x5143;&#x6570;&#x636E;&#x3002;</p><p>Image&#x89E3;&#x7801;&#x53D1;&#x751F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#xFF1F;&#x5728;<em>ImageIO/CGImageSource.h</em>&#x6587;&#x4EF6;&#x4E2D;<em>kCGImageSourceShouldCache</em>&#x7684;&#x4E0A;&#x9762;&#x5176;&#x5B9E;&#x6709;&#x660E;&#x786E;&#x6CE8;&#x91CA;&#x3002;</p><blockquote><p>Specifies whether image decoding and caching should happen at image creation time.</p><p>The value of this key must be a CFBooleanRef. The default value is kCFBooleanFalse (image decoding will happen at rendering time).</p></blockquote><p>&#x5982;&#x679C;&#x4E0D;&#x624B;&#x52A8;&#x8BBE;&#x7F6E;Image&#x53EA;&#x4F1A;&#x7B49;&#x5230;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x6E32;&#x67D3;&#x65F6;&#x518D;&#x89E3;&#x7801;&#x3002;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x786E;&#x5B9E;&#x5982;&#x6B64;&#x3002;&#x8FD9;&#x4E2A;<em>kCGImageSourceShouldCacheImmediately</em>&#x8FD8;&#x4E0D;&#x5982;&#x8D77;&#x540D;&#x4E3A;<em>kCGImageSourceShouldDecodeImmediately</em>&#x3002;</p><p>Image&#x89E3;&#x7801;&#x5230;&#x5E95;&#x5728;&#x54EA;&#x91CC;&#x505A;&#x7684;&#xFF1F;</p><p>&#x5982;&#x679C;&#x5728;&#x753B;&#x5E03;&#x4E0A;&#x6E32;&#x67D3;&#x56FE;&#x7247;&#xFF0C;&#x56FE;&#x7247;&#x4E00;&#x5B9A;&#x662F;&#x4F1A;&#x88AB;&#x89E3;&#x7801;&#x7684;&#x3002;&#x4E0B;&#x5217;&#x4EE3;&#x7801;&#x518D;&#x8DD1;&#x6D4B;&#x8BD5;</p><pre><code class="lang-objective-c">size_t width = CGImageGetWidth(cgImage);size_t height = CGImageGetHeight(cgImage);CGImageAlphaInfo alphaInfo = CGImageGetAlphaInfo(cgImage) &amp; kCGBitmapAlphaInfoMask;BOOL hasAlpha = NO;if (alphaInfo == kCGImageAlphaPremultipliedLast ||    alphaInfo == kCGImageAlphaPremultipliedFirst ||    alphaInfo == kCGImageAlphaLast ||    alphaInfo == kCGImageAlphaFirst) {    hasAlpha = YES;}CGBitmapInfo bitmapInfo = kCGBitmapByteOrder32Host;bitmapInfo |= hasAlpha ? kCGImageAlphaPremultipliedFirst : kCGImageAlphaNoneSkipFirst;CGContextRef context = CGBitmapContextCreate(NULL, width, height, 8, 0, CGColorSpaceCreateDeviceRGB(), bitmapInfo);CGContextDrawImage(context, CGRectMake(0, 0, width, height), cgImage); CGImageRef newImage = CGBitmapContextCreateImage(context);</code></pre><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_CGContextDrawImage%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.png" alt="CGContextDrawImage&#x51FD;&#x6570;&#x8C03;&#x7528;"></p><p>&#x6240;&#x6709;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x540D;&#x4E2D;&#x6CA1;&#x6709;&#x660E;&#x663E;decompress&#x6216;&#x8005;decode&#x5B57;&#x773C;&#x3002;&#x800C;&#x4E0A;&#x9762;&#x56DB;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x9891;&#x7387;&#x662F;&#x6700;&#x9AD8;&#x7684;&#x3002;&#x6839;&#x636E;<em>CGImageDestinationRef</em>&#x8C03;&#x7528;&#x7684;<em>png_compress_IDAT</em>&#xFF0C;&#x731C;&#x6D4B;<em>png_read_IDAT_data</em>&#x662F;&#x505A;&#x89E3;&#x7801;&#x7684;&#x51FD;&#x6570;&#x3002;</p><p>&#x4EE5;&#x4E0A;&#x662F;&#x4EE5;png&#x56FE;&#x7247;&#x4F5C;&#x4E3A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x4E0B;&#x9762;&#x770B;&#x770B;jpeg&#x56FE;&#x7247;&#x7684;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_jpeg%20decode%20-1.png" alt="jpeg decode -1"></p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_jpeg%20decode%20-%202.png" alt="jpeg decode - 2"></p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_jpeg%20decode%20-3.png" alt="jpeg decode -3"></p><p>&#x5F88;&#x660E;&#x663E;AppleJPEG&#x7684;decode&#x65B9;&#x6CD5;&#x662F;&#x505A;&#x89E3;&#x7801;&#x7684;&#x51FD;&#x6570;&#x3002;jpeg&#x4E0E;png&#x8C03;&#x7528;&#x4E86;&#x4E24;&#x4E2A;&#x540C;&#x6837;&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x540C;&#x7684;&#x56FE;&#x7247;&#x8C03;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x7801;&#x51FD;&#x6570;&#x3002;&#x5728;&#x753B;&#x5E03;&#x4E0A;&#x753B;&#x56FE;&#x7247;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;<em>ImageProviderCopyImageBlockSetCallback</em>&#x8BBE;&#x7F6E;<em>callback</em>&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;<em>copyImageBlock</em>&#xFF0C;&#x518D;&#x8C03;&#x7528;&#x8BBE;&#x7F6E;&#x7684;<em>callback</em>&#xFF0C;&#x4F46;&#x662F;&#x89E3;&#x7801;&#x51FD;&#x6570;&#x662F;&#x7531;<em>copyImageBlock</em>&#x7684;&#x8C03;&#x7528;&#x7684;&#x8FD8;&#x662F;&#x7531;<em>callback</em>&#x8C03;&#x7528;&#x7684;&#x65E0;&#x6CD5;&#x9A8C;&#x8BC1;&#x3002;</p><p>&#x90A3;<em>ImageProviderCopyImageBlockSetCallback</em>&#x4E0E;<em>CGDataProviderCopyData</em>&#x662F;&#x5426;&#x6709;&#x5173;&#x7CFB;&#xFF1F;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;<em>CGDataProviderCopyData</em>&#x5185;&#x90E8;&#x4E5F;&#x4F1A;&#x8C03;&#x7528;<em>ImageProviderCopyImageBlockSetCallback</em>&#x548C;<em>copyImageBlock</em>&#x3002;&#x800C;&#x4E14;<em>CGDataProviderCopyData</em>&#x5F97;&#x5230;&#x7684;<em>CFDataRef</em>&#x662F;&#x89E3;&#x7801;&#x8FC7;&#x7684;&#x50CF;&#x7D20;&#x6570;&#x7EC4;&#x3002;</p><p>&#x7ED3;&#x8BBA;&#xFF1A;Image&#x89E3;&#x7801;&#x53D1;&#x751F;&#x5728;<em>CGDataProviderCopyData</em>&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;<em>ImageProviderCopyImageBlockSetCallback</em>&#x8BBE;&#x7F6E;&#x7684;<em>callback</em>&#x6216;&#x8005;<em>copyImageBlock</em>&#x51FD;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x56FE;&#x7247;&#x683C;&#x5F0F;&#x8C03;&#x7528;&#x7684;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#x3002;</p><h2 id="Image&#x7684;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;"><a href="#Image&#x7684;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;" class="headerlink" title="Image&#x7684;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;"></a>Image&#x7684;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;</h2><p><em>imageWithData</em>&#x4ECE;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x6765;&#x770B;&#xFF0C;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x8BBF;&#x95EE;&#x56FE;&#x50CF;&#x6570;&#x636E;&#xFF0C;&#x521B;&#x5EFA;<em>CGImageRef</em>&#x3002;</p><p><em>imageWithContentsOfFile</em>&#x5185;&#x90E8;&#x8C03;&#x7528;&#x5982;&#x4E0B;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_iOS%20initWithContentOfFile%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8.png" alt="iOS_initWithContentOfFile&#x51FD;&#x6570;&#x8C03;&#x7528;"></p><p>&#x6587;&#x4EF6;&#x901A;&#x8FC7;mmap&#x5230;&#x5185;&#x5B58;&#x7136;&#x540E;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x8BBF;&#x95EE;&#x56FE;&#x50CF;&#x6570;&#x636E;&#xFF0C;&#x521B;&#x5EFA;<em>CGImageRef</em>&#x3002;</p><p><em>imageNamed</em>&#x5148;&#x4ECE;Bundle&#x91CC;&#x627E;&#x5230;&#x8D44;&#x6E90;&#x8DEF;&#x5F84;&#xFF0C;&#x7136;&#x540E;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x5C06;&#x6587;&#x4EF6;mmap&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x518D;&#x901A;&#x8FC7;<em>CGImageSourceRef</em>&#x8BBF;&#x95EE;&#x56FE;&#x50CF;&#x6570;&#x636E;&#xFF0C;&#x521B;&#x5EFA;<em>CGImageRef</em>&#x3002;</p><h2 id="Image&#x7684;&#x7F13;&#x5B58;"><a href="#Image&#x7684;&#x7F13;&#x5B58;" class="headerlink" title="Image&#x7684;&#x7F13;&#x5B58;"></a>Image&#x7684;&#x7F13;&#x5B58;</h2><p>&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x7684;<em>UIImage</em>&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;&#x7136;&#x540E;&#x521B;&#x5EFA;<em>UIImageVIew</em>&#x5C55;&#x793A;&#x5230;&#x5C4F;&#x5E55;&#x4E0A;&#xFF0C;&#x6765;&#x770B;&#x770B;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x662F;&#x5426;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x884C;&#x4E3A;&#x3002;</p><p><em>imageNamed</em>&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x5C55;&#x793A;&#x76F8;&#x540C;image&#x7684;&#x65F6;&#x5019;&#x6CA1;&#x6709;&#x8C03;&#x7528;imageIO&#x7684;&#x4EFB;&#x4F55;&#x65B9;&#x6CD5;&#x3002;</p><p><em>imageWithData</em>&#x548C;<em>imageWithContentsOfFile</em>&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x5728;&#x5C55;&#x793A;&#x76F8;&#x540C;image&#x7684;&#x65F6;&#x5019;&#x5747;&#x8C03;&#x7528;&#x4E86;imageIO&#x7684;&#x89E3;&#x7801;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x800C;imageWithData&#x548C;imageWithContentsOfFile&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x7684;UIImage&#x53EA;&#x8981;&#x4E0D;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x518D;&#x6B21;&#x6E32;&#x67D3;&#x4E0D;&#x4F1A;&#x8C03;&#x7528;imageIO&#x89E3;&#x7801;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x7ED3;&#x8BBA;&#x4E3A;<em>UIImage</em>&#x6709;&#x4E24;&#x79CD;&#x7F13;&#x5B58;&#xFF0C;&#x4E00;&#x79CD;&#x662F;<em>UIImage</em>&#x7C7B;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x79CD;&#x7F13;&#x5B58;&#x4FDD;&#x8BC1;<em>imageNamed</em>&#x521D;&#x59CB;&#x5316;&#x7684;<em>UIImage</em>&#x53EA;&#x4F1A;&#x88AB;&#x89E3;&#x7801;&#x4E00;&#x6B21;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x662F;<em>UIImage</em>&#x5BF9;&#x8C61;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x79CD;&#x7F13;&#x5B58;&#x4FDD;&#x8BC1;&#x53EA;&#x8981;<em>UIImage</em>&#x6CA1;&#x6709;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x89E3;&#x7801;&#x3002;</p><p><em>CGImageSourceCreateImageAtIndex</em>&#x65B9;&#x6CD5;&#x7684;<em>kCGImageSourceShouldCache</em>&#x9009;&#x9879;&#x6307;&#x7684;&#x662F;&#x7B2C;&#x4E8C;&#x79CD;&#x7F13;&#x5B58;&#xFF0C;&#x800C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;false&#xFF0C;&#x6211;&#x6D4B;&#x8BD5;&#x51FA;&#x6765;image&#x518D;&#x6B21;&#x6E32;&#x67D3;&#x7684;&#x65F6;&#x5019;&#x4ECD;&#x6CA1;&#x6709;&#x8FDB;&#x884C;&#x89E3;&#x7801;&#xFF0C;&#x8FD9;&#x6709;&#x4E9B;&#x5947;&#x602A;&#x3002;&#x5982;&#x679C;&#x6709;&#x540C;&#x5B66;&#x8BE6;&#x7EC6;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x56DE;&#x4E8B;&#xFF0C;&#x8FD8;&#x8BF7;&#x8D50;&#x6559;&#x3002;</p><h3 id="&#x6700;&#x540E;&#x9644;&#x4E0A;ImageIO&#x7684;&#x5168;&#x5BB6;&#x798F;"><a href="#&#x6700;&#x540E;&#x9644;&#x4E0A;ImageIO&#x7684;&#x5168;&#x5BB6;&#x798F;" class="headerlink" title="&#x6700;&#x540E;&#x9644;&#x4E0A;ImageIO&#x7684;&#x5168;&#x5BB6;&#x798F;"></a>&#x6700;&#x540E;&#x9644;&#x4E0A;ImageIO&#x7684;&#x5168;&#x5BB6;&#x798F;</h3><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_iOSimageIO%E5%85%A8%E5%AE%B6%E7%A6%8F.png" alt="iOSimageIO&#x5168;&#x5BB6;&#x798F;"></p>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>缓存之旅（二）</title>
      <link href="/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="&#x4EE5;&#x524D;&#x7559;&#x7684;&#x5751;&#x5FC5;&#x987B;&#x586B;&#xFF0C;&#x4E0D;&#x7136;&#x7EC8;&#x6709;&#x4E00;&#x65E5;&#x88AB;&#x57CB;&#x8FDB;&#x53BB;"><a href="#&#x4EE5;&#x524D;&#x7559;&#x7684;&#x5751;&#x5FC5;&#x987B;&#x586B;&#xFF0C;&#x4E0D;&#x7136;&#x7EC8;&#x6709;&#x4E00;&#x65E5;&#x88AB;&#x57CB;&#x8FDB;&#x53BB;" class="headerlink" title="&#x4EE5;&#x524D;&#x7559;&#x7684;&#x5751;&#x5FC5;&#x987B;&#x586B;&#xFF0C;&#x4E0D;&#x7136;&#x7EC8;&#x6709;&#x4E00;&#x65E5;&#x88AB;&#x57CB;&#x8FDB;&#x53BB; :)"></a>&#x4EE5;&#x524D;&#x7559;&#x7684;&#x5751;&#x5FC5;&#x987B;&#x586B;&#xFF0C;&#x4E0D;&#x7136;&#x7EC8;&#x6709;&#x4E00;&#x65E5;&#x88AB;&#x57CB;&#x8FDB;&#x53BB; :)</h2><p>&#x4E0A;&#x7BC7;&#x8BF4;&#x5230;linux&#x7684;&#x6587;&#x4EF6;cache&#x5206;&#x4E3A;page cache&#x548C;buffer cache&#x3002;<a id="more"></a>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4E00;&#x4E2A;page cache&#x5BF9;&#x5E94;&#x591A;&#x4E2A;buffer cache&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_pageCacheBufferCache.jpg" alt="page cache&#x548C;buffer cache"></p><p>&#x8FD9;&#x4E24;&#x4E2A;&#x4E1C;&#x897F;&#x5BB9;&#x6613;&#x50BB;&#x50BB;&#x5206;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x5C06;&#x4ED6;&#x4EEC;&#x5206;&#x5F00;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x9996;&#x5148;&#xFF0C;page cache&#x548C;buffer cache&#x5728;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x3002;page cache&#x5728;vfs&#x548C;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x6570;&#x636E;&#x4EA4;&#x6362;&#xFF0C;&#x8FD9;&#x4E00;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x903B;&#x8F91;&#x5C42;&#x6B21;&#x4E0A;&#x3002;&#x800C;buffer cache&#x5728;&#x5177;&#x4F53;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x8FD9;&#x4E00;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7269;&#x7406;&#x5C42;&#x6B21;&#x4E0A;&#x3002;&#x5176;&#x6B21;page cache&#x548C;buffer cache&#x4E0D;&#x662F;&#x4E3A;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x76EE;&#x7684;&#xFF0C;page cache&#x5C31;&#x662F;&#x9875;&#xFF0C;&#x4F5C;&#x4E3A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x5728;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x7F13;&#x5B58;&#x3002;buffer cache&#x662F;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x8BFB;&#x5199;&#x78C1;&#x76D8;&#x7684;&#x65F6;&#x5019;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;I/O&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x6512;&#x9F50;&#x4E00;&#x5B9A;&#x91CF;&#x7684;&#x6570;&#x636E;&#x518D;&#x5199;&#x548C;&#x6512;&#x9F50;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x8BFB;&#x51FA;&#x7684;&#x6570;&#x636E;&#x518D;&#x8FD4;&#x56DE;&#x3002;</p><h3 id="linux&#x5982;&#x4F55;&#x5B9E;&#x73B0;LRU"><a href="#linux&#x5982;&#x4F55;&#x5B9E;&#x73B0;LRU" class="headerlink" title="linux&#x5982;&#x4F55;&#x5B9E;&#x73B0;LRU"></a>linux&#x5982;&#x4F55;&#x5B9E;&#x73B0;LRU</h3><p>linux&#x7684;&#x9875;&#x9762;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x7528;&#x7684;&#x662F;LRU&#xFF0C;linux&#x7528;&#x4E86;&#x4E24;&#x4E2A;&#x53CC;&#x5411;&#x94FE;&#x8868;&#x5B9E;&#x73B0;&#x3002;active_list&#x548C;inactive_list&#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;active_list&#x5B58;&#x653E;&#x6700;&#x8FD1;&#x88AB;&#x8BBF;&#x95EE;&#x9891;&#x8DEF;&#x8F83;&#x9AD8;&#x7684;&#xFF0C;inactive_list&#x5B58;&#x653E;&#x6700;&#x8FD1;&#x8BBF;&#x95EE;&#x9891;&#x7387;&#x8F83;&#x4F4E;&#x7684;&#x7684;&#x3002;&#x94FE;&#x8868;&#x8282;&#x70B9;&#x6709;&#x662F;&#x5426;&#x88AB;&#x8BBF;&#x95EE;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8BBE;&#x4E3A;referenced&#x72B6;&#x6001;&#x8868;&#x793A;&#x6B63;&#x5728;&#x88AB;&#x8BBF;&#x95EE;&#xFF0C;&#x8BBE;&#x7F6E;unreferenced&#x8868;&#x793A;&#x6CA1;&#x88AB;&#x8BBF;&#x95EE;&#x3002;&#x90A3;&#x4E48;&#x5177;&#x4F53;&#x7B97;&#x6CD5;&#x5982;&#x4E0B;&#xFF0C;&#x65B0;&#x52A0;&#x5165;&#x7684;&#x8282;&#x70B9;&#x63D2;&#x5165;&#x5230;inactive_list&#x7684;&#x9996;&#x90E8;&#x3002;&#x6DD8;&#x6C70;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x904D;&#x5386;&#x4E00;&#x904D;active_list&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5C06;unreferenced&#x72B6;&#x6001;&#x7684;&#x8282;&#x70B9;&#x63D2;&#x5165;&#x5230;inactive_list&#x9996;&#x90E8;&#xFF0C;&#x7136;&#x540E;&#x4ECE;inactive_list&#x5C3E;&#x90E8;&#x5F00;&#x59CB;&#x9010;&#x4E2A;&#x6DD8;&#x6C70;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_LRU%202Q.png" alt="Linux&#x5B9E;&#x73B0;LRU 2Q"></p><p>&#x8FD9;&#x662F;&#x6539;&#x826F;&#x7248;&#x7684;LRU 2Q&#x7B97;&#x6CD5;&#xFF0C;&#x7528;&#x4E24;&#x4E2A;&#x4F18;&#x5148;&#x961F;&#x5217;&#x5B8C;&#x6210;&#x7B97;&#x6CD5;&#x3002;&#x6700;&#x8FD1;&#x8BBF;&#x95EE;&#x8FC7;&#x4E00;&#x6B21;&#xFF0C;&#x4E0D;&#x7B97;&#x662F;&#x201C;&#x5E38;&#x201D;&#x8BBF;&#x95EE;&#x3002;&#x6700;&#x8FD1;&#x6CA1;&#x8BBF;&#x95EE;&#xFF0C;&#x4E5F;&#x4E0D;&#x76F4;&#x63A5;&#x6DD8;&#x6C70;&#x3002;</p><h3 id="&#x6587;&#x4EF6;&#x968F;&#x673A;&#x8BBF;&#x95EE;cache"><a href="#&#x6587;&#x4EF6;&#x968F;&#x673A;&#x8BBF;&#x95EE;cache" class="headerlink" title="&#x6587;&#x4EF6;&#x968F;&#x673A;&#x8BBF;&#x95EE;cache"></a>&#x6587;&#x4EF6;&#x968F;&#x673A;&#x8BBF;&#x95EE;cache</h3><p>&#x5728;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x6211;&#x7528;&#x4E86;LinkedHashMap&#x6765;&#x52A0;&#x901F;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x3002;linux&#x7528;&#x7684;&#x662F;radix tree(&#x57FA;&#x6570;&#x6811;)&#x6765;&#x52A0;&#x901F;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x3002;radix tree&#x5C06;&#x6587;&#x4EF6;&#x5185;&#x504F;&#x79FB;&#x91CF;&#x548C;&#x5176;&#x5BF9;&#x5E94;&#x7684;cache&#x5BF9;&#x5E94;&#x8D77;&#x6765;&#x3002;radix tree&#x5206;&#x4E3A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x548C;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x3002;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x6307;&#x5411;&#x5176;&#x4ED6;&#x8282;&#x70B9;&#x3002;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x6307;&#x5411;cache&#x3002;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x5230;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#x6240;&#x7ECF;&#x8FC7;&#x7684;&#x8282;&#x70B9;&#x7684;&#x952E;&#x503C;&#x62FC;&#x63A5;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x6587;&#x4EF6;&#x5185;&#x504F;&#x79FB;&#x91CF;&#x7684;&#x5730;&#x5740;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_radixTree.jpg" alt="linux&#x5B9E;&#x73B0;&#x7684;radixTree"></p><p>&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x6587;&#x4EF6;&#x7684;inode&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;address_space&#x7ED3;&#x6784;&#x4F53;&#xFF0C;address_space&#x7ED3;&#x6784;&#x4F53;&#x53C8;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;radix tree&#x3002;radix tree&#x7684;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;page&#x7ED3;&#x6784;&#x4F53;&#x3002;&#x7B80;&#x5316;&#x8FC7;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x5982;&#x4E0B;&#xFF0C;</p><pre><code class="lang-c">struct inode {struct address_space    *i_mapping;     //&#x5BF9;&#x5E94;address_spacestruct address_space    i_data;         //&#x5BF9;&#x5E94;address_space&#x7684;host};struct address_space  {struct inode             *host;           //&#x6307;&#x5411;&#x6B64;space&#x7684;inodestruct radix_tree_root    page_tree;      //radix tree&#x6839;&#x8282;&#x70B9;unsigned long             nrpages;        //&#x5BF9;&#x5E94;&#x7684;page&#x7684;&#x6570;&#x91CF;} __attribute__((aligned(sizeof(long))));struct radix_tree_root {    unsigned int        height;           //&#x6811;&#x7684;&#x9AD8;&#x5EA6;    gfp_t               gfp_mask;    struct radix_tree_node  __rcu *rnode;};struct page{    struct list_head list;                  struct address_space * mapping;   //&#x5BF9;&#x5E94;&#x7684;address_space    unsigned long index;    struct page *next_hash;           //&#x81EA;&#x8EAB;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x94FE;&#x63A5;&#x6210;&#x4E00;&#x4E2A;&#x94FE;&#x8868;    atomic t count;                   //&#x7528;&#x4E8E;&#x9875;&#x9762;&#x4EA4;&#x6362;&#x7684;&#x8BA1;&#x6570;,&#x82E5;&#x9875;&#x9762;&#x4E3A;&#x7A7A;&#x95F2;&#x5219;&#x4E3A;0&#xFF0C;&#x5206;&#x914D;&#x5C31;&#x8D4B;&#x503C;1&#xFF0C;&#x6CA1;&#x5EFA;&#x7ACB;&#x6216;&#x6062;&#x590D;&#x4E00;&#x6B21;&#x6620;&#x5C04;&#x5C31;&#x52A0;1&#xFF0C;&#x65AD;&#x5F00;&#x6620;&#x5C04;&#x5C31;&#x51CF;&#x4E00;    unsigned long flags;              //&#x53CD;&#x5E94;&#x9875;&#x9762;&#x5404;&#x79CD;&#x72B6;&#x6001;&#xFF0C;&#x4F8B;&#x5982;&#x6D3B;&#x8DC3;&#xFF0C;&#x4E0D;&#x6D3B;&#x8DC3;&#x810F;&#xFF0C;&#x4E0D;&#x6D3B;&#x8DC3;&#x5E72;&#x51C0;&#xFF0C;&#x7A7A;&#x95F2;   struct list_head lru;   unsigned long age;                 //&#x9875;&#x9762;&#x5BFF;&#x547D;   wait_queue_head_t wait;   struct page ** pprev_hash;   struct buffer_head * buffers;      //buffer cache&#x6570;&#x636E;&#x7ED3;&#x6784;   void * virtual   struct zone_struct * zone;         //&#x6307;&#x5411;&#x6240;&#x5C5E;&#x7684;&#x7BA1;&#x7406;&#x533A;}</code></pre><p>&#x8FD9;&#x4E9B;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;</p><pre><code class="lang-c">inode ------ addressSPace ------ RadixTree                  | | | |       /  |   |  \                  | | | |   page page page page                  | | | |    |     |   |    |                  | | | ------     |   |    |                  | | --------------   |    |                  | --------------------    |                  ---------------------------</code></pre><p>&#x6587;&#x4EF6;&#x901A;&#x8FC7;inode&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;addressSpace&#xFF0C;&#x4ECE;addressSpace&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;radixTree&#xFF0C;&#x518D;&#x7D22;&#x5F15;&#x5230;&#x9875;&#x3002;&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#xFF0C;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6587;&#x4EF6;&#x5185;&#x4EFB;&#x610F;&#x5730;&#x5740;&#x5BF9;&#x5E94;&#x7684;&#x9875;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x9875;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x4EA4;&#x7ED9;MMU&#x548C;&#x9875;&#x8868;&#xFF0C;&#x5982;&#x679C;&#x6839;&#x636E;&#x865A;&#x62DF;&#x5730;&#x5740;&#x5224;&#x65AD;&#x51FA;&#x9875;&#x662F;&#x865A;&#x62DF;&#x9875;&#xFF0C;&#x5C31;&#x4F1A;&#x53D1;&#x751F;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x9875;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#xFF0C;&#x9875;&#x5C31;&#x88AB;&#x7F13;&#x5B58;&#x5230;&#x4E86;&#x5185;&#x5B58;&#x4E2D;&#x3002;</p><h3 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h3><p>mmap&#x76F8;&#x5F53;&#x4E8E;&#x5C06;&#x6587;&#x4EF6;&#x7684;&#x9875;&#x8F7D;&#x5165;&#x5185;&#x5B58;&#xFF0C;&#x8FDB;&#x7A0B;&#x4FEE;&#x6539;&#x5185;&#x5B58;&#x6307;&#x9488;&#x7684;&#x5185;&#x5BB9;&#x5C31;&#x4FEE;&#x6539;&#x4E86;&#x6587;&#x4EF6;&#x3002;&#x9875;&#x7F13;&#x5B58;&#x662F;&#x5C06;&#x6587;&#x4EF6;&#x7F13;&#x5B58;&#x8FDB;&#x4E86;&#x5185;&#x5B58;&#xFF0C;&#x8F7D;&#x5165;&#x548C;&#x7F13;&#x5B58;&#x5165;&#x662F;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x8FDB;&#x7A0B;&#x901A;&#x8FC7;&#x9875;&#x7F13;&#x5B58;&#x8BBF;&#x95EE;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x7ECF;&#x8FC7;&#x4E24;&#x6B21;&#x62F7;&#x8D1D;&#xFF0C;&#x7531;&#x4E8E;&#x9875;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x4E2D;&#xFF0C;&#x5148;&#x8981;&#x5C06;&#x9875;&#x7F13;&#x5B58;&#x5165;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#xFF0C;&#x518D;&#x5C06;&#x9875;&#x62F7;&#x8D1D;&#x7ED9;&#x8FDB;&#x7A0B;&#x3002;&#x8FDB;&#x7A0B;&#x901A;&#x8FC7;mmap&#x8BBF;&#x95EE;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x4E00;&#x6B21;&#x62F7;&#x8D1D;&#x3002;&#x4E0D;&#x9700;&#x8981;&#x5C06;&#x9875;&#x62F7;&#x8D1D;&#x5165;&#x5185;&#x6838;&#xFF0C;&#x76F4;&#x63A5;&#x62F7;&#x8D1D;&#x7ED9;&#x8FDB;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x6240;&#x4EE5;mmap&#x6548;&#x7387;&#x66F4;&#x9AD8;&#x3002;</p><h3 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h3><p>swap&#x548C;&#x6587;&#x4EF6;cache&#x7684;&#x76EE;&#x7684;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#xFF0C;swap&#x662F;&#x5F53;&#x5185;&#x5B58;&#x5BB9;&#x91CF;&#x544A;&#x6025;&#xFF0C;&#x5C06;&#x5185;&#x5B58;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x4EA4;&#x6362;&#x5230;&#x786C;&#x76D8;&#x4E0A;&#x3002;swap&#x7684;&#x5185;&#x5BB9;&#x662F;&#x5806;&#x4E0A;&#x7533;&#x8BF7;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x672C;&#x6765;&#x5C31;&#x662F;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x8BA1;&#x7B97;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x50CF;&#x9875;&#x672C;&#x6765;&#x662F;&#x786C;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x3002;swap&#x5728;&#x73B0;&#x5728;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5927;&#x591A;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x5F00;&#x542F;&#x7684;&#x3002;swap&#x53EF;&#x60F3;&#x800C;&#x77E5;&#x4F1A;&#x8017;&#x8D39;&#x5927;&#x91CF;I/O&#x548C;&#x5185;&#x5B58;&#x3002;&#x5728;iOS&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;swap&#x673A;&#x5236;&#xFF0C;&#x624D;&#x4F1A;&#x51FA;&#x73B0;&#x5185;&#x5B58;&#x544A;&#x6025;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7CFB;&#x7EDF;&#x53D1;&#x7ED9;&#x4F60;&#x4E00;&#x4E2A;&#x901A;&#x77E5;&#xFF0C;&#x4F60;&#x5982;&#x679C;&#x4E0D;&#x505A;&#x5904;&#x7406;&#x5C31;&#x4F1A;&#x88AB;kill&#x6389;&#x3002;</p><h2 id="&#x586B;&#x5751;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#x6316;&#x5751;&#x3002;&#x4EBA;&#x751F;&#x5C31;&#x662F;&#x6316;&#x4E00;&#x4E2A;&#x5751;&#x518D;&#x586B;&#x8D77;&#x6765;&#x7684;do-while&#x3002;"><a href="#&#x586B;&#x5751;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#x6316;&#x5751;&#x3002;&#x4EBA;&#x751F;&#x5C31;&#x662F;&#x6316;&#x4E00;&#x4E2A;&#x5751;&#x518D;&#x586B;&#x8D77;&#x6765;&#x7684;do-while&#x3002;" class="headerlink" title="&#x586B;&#x5751;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#x6316;&#x5751;&#x3002;&#x4EBA;&#x751F;&#x5C31;&#x662F;&#x6316;&#x4E00;&#x4E2A;&#x5751;&#x518D;&#x586B;&#x8D77;&#x6765;&#x7684;do while&#x3002;"></a>&#x586B;&#x5751;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#x6316;&#x5751;&#x3002;&#x4EBA;&#x751F;&#x5C31;&#x662F;&#x6316;&#x4E00;&#x4E2A;&#x5751;&#x518D;&#x586B;&#x8D77;&#x6765;&#x7684;do while&#x3002;</h2><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E5%A5%BD%E7%B4%AF.jpeg" alt="&#x672C;&#x5B9D;&#x5B9D;&#x89C9;&#x5F97;&#x597D;&#x7D2F;"></p><p>&#x672C;&#x7BC7;&#x804A;&#x804A;&#x786C;&#x76D8;&#x7F13;&#x5B58;&#xFF0C;&#x786C;&#x76D8;&#x5B58;&#x50A8;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5BF9;&#x6587;&#x4EF6;&#x8BFB;&#x5199;&#x6216;&#x8005;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5355;&#x6761;&#x6570;&#x636E;&#x5728;&#x4E00;&#x4E2A;&#x9608;&#x503C;&#x4E4B;&#x4E0A;&#xFF0C;&#x6587;&#x4EF6;&#x8BFB;&#x5199;&#x4F1A;&#x6BD4;&#x6570;&#x636E;&#x5E93;&#x8BFB;&#x5199;&#x66F4;&#x5FEB;&#x3002;&#x800C;sqlite&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x8FD9;&#x4E2A;&#x9608;&#x503C;&#x5728;20KB&#xFF0C;&#x8BE6;&#x89C1;&#xFF1A;<a href="http://www.sqlite.org/intern-v-extern-blob.html" target="_blank" rel="noopener">http://www.sqlite.org/intern-v-extern-blob.html</a> </p><h3 id="&#x9608;&#x503C;&#x4E0B;&#x6570;&#x636E;&#x5E93;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6587;&#x4EF6;&#x5B58;&#x53D6;&#xFF1F;"><a href="#&#x9608;&#x503C;&#x4E0B;&#x6570;&#x636E;&#x5E93;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6587;&#x4EF6;&#x5B58;&#x53D6;&#xFF1F;" class="headerlink" title="&#x9608;&#x503C;&#x4E0B;&#x6570;&#x636E;&#x5E93;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6587;&#x4EF6;&#x5B58;&#x53D6;&#xFF1F;"></a>&#x9608;&#x503C;&#x4E0B;&#x6570;&#x636E;&#x5E93;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6587;&#x4EF6;&#x5B58;&#x53D6;&#xFF1F;</h3><p>&#x6570;&#x636E;&#x5E93;&#x5EFA;&#x7ACB;&#x7684;&#x7D22;&#x5F15;&#x548C;&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;&#x90FD;&#x662F;&#x4F18;&#x5316;&#x901F;&#x5EA6;&#x7684;&#x5173;&#x952E;&#x3002;</p><h3 id="&#x6570;&#x636E;&#x5E93;&#x7D22;&#x5F15;"><a href="#&#x6570;&#x636E;&#x5E93;&#x7D22;&#x5F15;" class="headerlink" title="&#x6570;&#x636E;&#x5E93;&#x7D22;&#x5F15;"></a>&#x6570;&#x636E;&#x5E93;&#x7D22;&#x5F15;</h3><p>&#x6570;&#x636E;&#x5E93;&#x7D22;&#x5F15;&#x5206;&#x4E3A;&#x987A;&#x5E8F;&#x7D22;&#x5F15;&#x3001;B+&#x6811;&#x7D22;&#x5F15;&#x3001;hash&#x7D22;&#x5F15;&#x3002;</p><p>1.&#x987A;&#x5E8F;&#x7D22;&#x5F15;&#x4E3A;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7D22;&#x5F15;&#xFF0C;&#x5757;&#x4E2D;&#x7684;&#x5143;&#x7EC4;&#x6309;&#x903B;&#x8F91;&#x5B58;&#x50A8;&#x7684;&#x987A;&#x5E8F;&#x7528;&#x94FE;&#x8868;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x52A0;&#x901F;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;(&#x7C7B;LlinkedHashMap&#x7ED3;&#x6784;)&#x3002;</p><p>2.B+&#x6811;&#x7D22;&#x5F15;&#x4E3A;&#x6587;&#x4EF6;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;B+&#x6811;&#xFF0C;B+&#x6811;&#x5206;&#x4E3A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x548C;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x3002;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5305;&#x542B;(&#x672C;&#x5C42;&#x9AD8;&#x5EA6;-1)/2&#x5230;(&#x672C;&#x5C42;&#x9AD8;&#x5EA6;-1)&#x4E2A;&#x7D22;&#x5F15;&#x548C;&#x7D22;&#x5F15;&#x5BF9;&#x5E94;&#x7684;&#x5176;&#x4ED6;&#x8282;&#x70B9;&#x3002;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5305;&#x542B;(&#x672C;&#x5C42;&#x9AD8;&#x5EA6;-1)/2&#x5230;(&#x672C;&#x5C42;&#x9AD8;&#x5EA6;-1)&#x4E2A;&#x7D22;&#x5F15;&#x548C;&#x7D22;&#x5F15;&#x5BF9;&#x5E94;&#x7684;&#x5143;&#x7EC4;&#x5730;&#x5740;&#x3002;</p><p>3.hash&#x7D22;&#x5F15;&#x4E3A;&#x6587;&#x4EF6;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;hash&#x8868;&#xFF0C;&#x6620;&#x5C04;&#x7D22;&#x5F15;&#x548C;&#x7D22;&#x5F15;&#x5BF9;&#x5E94;&#x7684;&#x5143;&#x7EC4;&#x5730;&#x5740;&#x3002;</p><p>&#x7D22;&#x5F15;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x51CF;&#x5C11;&#x78C1;&#x76D8;&#x5757;&#x7684;I/O&#x3002;&#x5047;&#x5982;&#x4F60;&#x5B58;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x628A;&#x6587;&#x4EF6;&#x6240;&#x6709;&#x5757;&#x6574;&#x4E2A;&#x8BFB;&#x53D6;&#x5165;&#x5185;&#x5B58;&#x3002;&#x800C;&#x5B58;&#x5165;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x5B58;&#x50A8;&#x7D22;&#x5F15;&#x7684;&#x5757;&#x548C;&#x6240;&#x67E5;&#x627E;&#x7684;&#x5143;&#x7EC4;&#x6240;&#x5728;&#x7684;&#x5757;&#x8BFB;&#x5165;&#x5185;&#x5B58;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5927;&#x90E8;&#x5206;&#x60C5;&#x51B5;&#xFF0C;&#x5B58;&#x50A8;&#x7D22;&#x5F15;&#x7684;&#x5757;&#x4E00;&#x822C;&#x5DF2;&#x7ECF;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x4E86;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x66F4;&#x5C11;&#x7684;&#x78C1;&#x76D8;&#x5757;&#x7684;I/O&#x4E86;&#x3002;</p><h3 id="&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;"><a href="#&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;" class="headerlink" title="&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;"></a>&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;</h3><p>&#x67E5;&#x8BE2;&#x5668;&#x4F18;&#x5316;&#xFF0C;&#x8FD9;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7CBE;&#x9AD3;&#xFF0C;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x5E93;&#x4F7F;&#x7528;&#x7684;&#x7B56;&#x7565;&#x4E0D;&#x540C;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x516C;&#x5F00;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x5C5E;&#x4E8E;&#x5546;&#x4E1A;&#x673A;&#x5BC6;&#x5427;&#x3002;</p><p>&#x5047;&#x8BBE;&#x8981;&#x627E;&#x51FA;&#x4E24;&#x4E2A;&#x5173;&#x7CFB;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x540C;&#x503C;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;&#x5173;&#x7CFB;&#x8FDB;&#x884C;join&#xFF0C;&#x6709;3&#x79CD;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#x3002;</p><p>1.nested loop join&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x6570;&#x636E;&#x53D6;&#x51FA;&#xFF0C;&#x53CC;&#x5C42;for&#x5FAA;&#x73AF;&#x4E24;&#x4E2A;&#x5173;&#x7CFB;&#x7684;&#x5143;&#x7EC4;&#xFF0C;O(M <em> N)&#x3002;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6709;&#x6539;&#x8FDB;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x5229;&#x7528;&#x7A7A;&#x95F4;&#x5C40;&#x90E8;&#x6027;&#xFF0C;&#x6539;&#x8FDB;&#x4E3A;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x5757;&#x7684;&#x53CC;&#x5C42;for&#x5FAA;&#x73AF;&#xFF0C;&#x5148;&#x5FAA;&#x73AF;&#x5757;&#x518D;&#x5FAA;&#x73AF;&#x5757;&#x5185;&#x7684;&#x5143;&#x7EC4;&#xFF0C;&#x590D;&#x6742;&#x5EA6;&#x540C;&#x6837;&#x662F;O(M </em> N)&#xFF0C;&#x4F46;&#x8FD9;&#x4E2A;M&#x548C;N&#x6307;&#x7684;&#x662F;&#x5757;&#x7684;&#x6570;&#x91CF;&#x800C;&#x4E0D;&#x662F;&#x5143;&#x7EC4;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_NestedLoopJoin.png" alt="&#x53CC;&#x5C42;for&#x5FAA;&#x73AF;join"></p><p>2.hash join&#xFF0C;&#x4E3A;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5143;&#x7EC4;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x62C9;&#x94FE;&#x6CD5;&#x7684;hash&#x8868;&#xFF0C;&#x5BF9;&#x53E6;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x7528;&#x540C;&#x6837;&#x7684;hash&#x51FD;&#x6570;&#xFF0C;&#x518D;&#x5C06;&#x6620;&#x5C04;&#x5230;&#x540C;&#x4E00;&#x8868;&#x9879;&#x4E2D;&#x7684;&#x5143;&#x7EC4;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x503C;&#x76F8;&#x7B49;&#x3002;&#x5982;&#x679C;&#x5185;&#x5B58;&#x8DB3;&#x591F;&#x7684;&#x8BDD;&#xFF0C;&#x5C06;hash&#x8868;&#x653E;&#x5165;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x4F1A;&#x5F88;&#x5FEB;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x8981;&#x6DFB;&#x52A0;&#x591A;&#x6B21;&#x7684;hash&#x8868;&#x7684;I/O&#xFF0C;O(M + N)&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_HashJoin.png" alt="&#x54C8;&#x5E0C;join"></p><p>3.&#x6392;&#x5E8F;-&#x5F52;&#x5E76;-&#x8FDE;&#x63A5;(merge-join)&#xFF0C;&#x5148;&#x5C06;&#x4E24;&#x4E2A;&#x5173;&#x7CFB;&#x6392;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x5173;&#x7CFB;&#x88C5;&#x4E0D;&#x4E0B;&#x5185;&#x5B58;&#xFF0C;&#x5C31;&#x8981;&#x5916;&#x90E8;&#x6392;&#x5E8F;&#x3002;&#x7136;&#x540E;&#x518D;&#x50CF;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x90A3;&#x6837;&#x5224;&#x65AD;&#x5143;&#x7EC4;&#x662F;&#x5426;&#x76F8;&#x7B49;&#xFF0C;O(M + N)&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_MergeJoin.png" alt="&#x6392;&#x5E8F;&#x5F52;&#x5E76;join"></p><p>SQL&#x8BED;&#x53E5;&#x4F1A;&#x88AB;&#x6570;&#x636E;&#x5E93;&#x89E3;&#x91CA;&#x6210;&#x5173;&#x7CFB;&#x4EE3;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5173;&#x7CFB;&#x4EE3;&#x6570;&#x6709;&#x7B49;&#x4EF7;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x53EF;&#x4EE5;&#x89E3;&#x91CA;&#x6210;&#x591A;&#x4E2A;&#x5173;&#x7CFB;&#x4EE3;&#x6570;&#xFF0C;&#x5F62;&#x6210;&#x591A;&#x4E2A;&#x67E5;&#x8BE2;&#x8BA1;&#x5212;&#x3002;&#x591A;&#x4E2A;&#x5173;&#x7CFB;&#x8FDE;&#x63A5;&#x987A;&#x5E8F;&#x5F62;&#x6210;&#x591A;&#x79CD;&#x7684;&#x6392;&#x5E8F;&#x65B9;&#x5F0F;&#xFF0C;&#x6BCF;&#x4E2A;&#x5173;&#x7CFB;&#x8FDE;&#x63A5;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x79CD;&#x7684;join&#x65B9;&#x5F0F;&#xFF0C;&#x4E58;&#x8D77;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x662F;&#x5F88;&#x5927;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x627E;&#x51FA;&#x6700;&#x4F18;&#x67E5;&#x8BE2;&#x8BA1;&#x5212;&#x4F1A;&#x5F88;&#x8017;&#x65F6;&#x3002;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x51CF;&#x5C11;&#x8017;&#x65F6;&#xFF0C;&#x4E0D;&#x540C;&#x79CD;&#x7684;&#x6392;&#x5E8F;&#x65B9;&#x5F0F;&#x4F1A;&#x5305;&#x542B;&#x5F88;&#x591A;&#x91CD;&#x590D;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5B58;&#x50A8;&#x4E0B;&#x6765;&#x8282;&#x7701;&#x65F6;&#x95F4;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x9009;&#x62E9;&#x6700;&#x4F4E;&#x6210;&#x672C;&#x7684;&#x8FDE;&#x63A5;&#x6765;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x4E5F;&#x53EB;&#x6700;&#x8FD1;&#x90BB;&#x5C45;&#x7B97;&#x6CD5;&#xFF0C;3.8.0&#x7248;&#x672C;&#x4E4B;&#x524D;&#x7684;sqlite&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;&#x8BE6;&#x89C1;&#xFF1A;<a href="http://www.devbean.net/2016/04/how-database-works-5/" target="_blank" rel="noopener">http://www.devbean.net/2016/04/how-database-works-5/</a></p><h3 id="&#x9608;&#x503C;&#x4E0A;&#x6587;&#x4EF6;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#xFF1F;"><a href="#&#x9608;&#x503C;&#x4E0A;&#x6587;&#x4EF6;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#xFF1F;" class="headerlink" title="&#x9608;&#x503C;&#x4E0A;&#x6587;&#x4EF6;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#xFF1F;"></a>&#x9608;&#x503C;&#x4E0A;&#x6587;&#x4EF6;&#x4E3A;&#x4F55;&#x5FEB;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#xFF1F;</h3><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6211;&#x65E0;&#x6CD5;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5F88;&#x4E25;&#x8C28;&#x7684;&#x7B54;&#x6848;&#xFF0C;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x662F;&#x5404;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x9645;benchmark&#x51FA;&#x6765;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x7F51;&#x7EDC;&#x4E0A;&#x8D44;&#x6599;&#x6709;&#x9650;&#xFF0C;&#x6211;&#x7684;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x5149;&#x63D2;&#x5165;&#x548C;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#x4E0D;&#x4F1A;&#x6BD4;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6162;&#x592A;&#x591A;&#xFF0C;&#x6027;&#x80FD;&#x66F4;&#x591A;&#x7684;&#x6D88;&#x8017;&#x5E94;&#x8BE5;&#x5728;&#x4E8B;&#x52A1;&#x3001;&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x5668;&#x3001;&#x6570;&#x636E;&#x5E93;&#x5907;&#x4EFD;&#x4E0A;&#x3002;&#x800C;mongo&#x6709;&#x4E2A;&#x5355;&#x4E2A;&#x6587;&#x6863;&#x7684;&#x9650;&#x5236;&#x5728;16MB&#xFF0C;mongo&#x7684;&#x6587;&#x6863;&#x9650;&#x5236;&#x548C;&#x5927;blob&#x964D;&#x4F4E;&#x6570;&#x636E;&#x5E93;&#x6027;&#x80FD;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;mongo&#x9650;&#x5236;&#x7684;&#x539F;&#x56E0;&#x662F;&#x4E0D;&#x5E0C;&#x671B;&#xFF0C;&#x5355;&#x4E2A;&#x6587;&#x6863;&#x8017;&#x8D39;&#x592A;&#x591A;&#x5185;&#x5B58;&#x6216;&#x8005;&#x5E26;&#x5BBD;&#x3002; &#x8BE6;&#x89C1;&#xFF1A;<a href="https://docs.mongodb.com/manual/core/document/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/document/</a></p><h2 id="&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;"><a href="#&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;" class="headerlink" title="&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;"></a>&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;</h2><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_%E6%94%BE%E5%BC%80%E6%88%91%EF%BC%81%E6%88%91%E8%A6%81%E8%A3%85%E9%80%BC%EF%BC%81.jpeg" alt="&#x653E;&#x5F00;&#x6211;!&#x6211;&#x8981;&#x88C5;&#x903C;&#xFF01;"></p><p>&#x5982;&#x679C;&#x8981;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x6027;&#x80FD;&#x80AF;&#x5B9A;&#x8981;&#x4F18;&#x4E8E;&#x6587;&#x4EF6;&#x3002;&#x5B9E;&#x73B0;&#x51FA;&#x786C;&#x76D8;&#x7F13;&#x5B58;&#x96BE;&#x70B9;&#x5C31;&#x5728;&#x4E8E;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x9A71;&#x52A8;&#x5C31;&#x662F;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x5BF9;&#x5916;&#x5C42;&#x8C03;&#x7528;&#x8005;&#x9694;&#x7EDD;&#x6570;&#x636E;&#x5E93;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x8D1F;&#x8D23;&#x628A;SQL&#x8BED;&#x53E5;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;&#x6570;&#x636E;&#x5E93;&#x3002;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x53EA;&#x8981;&#x6309;&#x7167;JDBC&#x548C;ODBC&#x89C4;&#x8303;&#xFF0C;&#x5305;&#x62EC;Connection&#x3001;ResultSet&#x3001;Statement&#x7B49;&#x7B49;&#x3002;&#x518D;&#x52A0;&#x4E0A;&#x76F8;&#x5173;&#x6570;&#x636E;&#x5E93;API&#x7684;&#x8C03;&#x7528;&#x5C31;&#x59A5;&#x4E86;&#x3002;</p><p>&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x6709;&#x4E00;&#x4E9B;&#x7F13;&#x5B58;&#x6280;&#x5DE7;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;ConnectionPool&#x7F13;&#x5B58;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x53EF;&#x4EE5;&#x7F13;&#x5B58;&#x7ECF;&#x8FC7;prepared&#x7684;statement&#x3002;&#x67E5;&#x8BE2;&#x4F18;&#x5316;&#x662F;&#x5F88;&#x8D39;&#x65F6;&#x95F4;&#x7684;&#x4E00;&#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x6240;&#x4EE5;&#x6570;&#x636E;&#x5E93;&#x5185;&#x90E8;&#x4F1A;&#x7F13;&#x5B58;&#x67E5;&#x8BE2;&#x8BA1;&#x5212;(plan caching)&#x3002;</p><p>SQL&#x8BED;&#x53E5;&#x4F1A;&#x88AB;&#x6570;&#x636E;&#x5E93;&#x7FFB;&#x8BD1;&#x6210;Statement&#xFF0C;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x5E93;SQL&#x8BED;&#x53E5;&#x5C31;&#x50CF;&#x662F;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;Statement&#x662F;&#x7FFB;&#x8BD1;&#x540E;&#x7684;&#x673A;&#x5668;&#x7801;&#x3002;&#x4E00;&#x4E2A;Statement&#x4ECE;&#x5EFA;&#x7ACB;&#x5230;&#x6267;&#x884C;&#x5C31;&#x662F;&#x7F16;&#x7A0B;&#x65F6;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5173;&#x952E;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x6B65;&#x5EFA;&#x7ACB;Statement&#x548C;&#x51C6;&#x5907;Statement</p><pre><code>- (RBEStatement *)prepareStatementWithSql:(NSString *)sql {    sqlite3_stmt *pStmt;    pStmt = (sqlite3_stmt *)CFDictionaryGetValue(_cachedStatement, (__bridge const void *)sql);  //&#x7F13;&#x5B58;prepared statement    if (!pStmt) {        int responseCode = sqlite3_prepare_v2(_db, sql.UTF8String, -1, &amp;pStmt, 0);        if (responseCode != SQLITE_OK) {            NSLog(@&quot;RBEDatabase: error occur statement preparing errorcode %d errorMsg %@&quot;, [self lastErrorCode], [self lastErrorMsg]);          //&#x91CA;&#x653E;statement&#x8D44;&#x6E90;            sqlite3_finalize(pStmt);            return nil;        }else {            CFDictionarySetValue(_cachedStatement, (__bridge const void *)sql, pStmt);        }    }else {      //&#x91CD;&#x65B0;&#x4F7F;&#x7528;statement        sqlite3_reset(pStmt);    }    RBEStatement *statement = [[RBEStatement alloc] init];    [statement setStmt:pStmt];    return statement;}</code></pre><p>&#x7B2C;&#x4E8C;&#x6B65;&#x7ED1;&#x5B9A;&#x53C2;&#x6570;&#xFF0C;&#x5C06;SQL&#x8BED;&#x53E5;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x7ED1;&#x5B9A;&#x5230;Statement&#x4E0A;</p><pre><code>//&#x4E0D;&#x540C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x5E93;API- (void)bindObject:(id)obj toIndex:(int)idx ofStmt:(sqlite3_stmt *)pStmt {    if (!obj || [obj isKindOfClass:[NSNull class]]) {        sqlite3_bind_null(pStmt, idx);    }else if ([obj isKindOfClass:[NSData class]]) {        const void *bytes = [obj bytes];        if (!bytes) {            bytes = &quot;&quot;;        }        sqlite3_bind_blob(pStmt, idx, bytes, (int)[obj length], SQLITE_STATIC);    }else if ([obj isKindOfClass:[NSDate class]]) {        sqlite3_bind_double(pStmt, idx, [obj timeIntervalSince1970]);    }else if ([obj isKindOfClass:[NSNumber class]]) {        if (strcmp([obj objCType], @encode(unsigned char)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj unsignedCharValue]);        }else if (strcmp([obj objCType], @encode(unsigned short)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj unsignedShortValue]);        }else if (strcmp([obj objCType], @encode(unsigned int)) == 0) {            sqlite3_bind_int64(pStmt, idx, [obj unsignedIntValue]);        }else if (strcmp([obj objCType], @encode(unsigned long)) == 0) {            sqlite3_bind_int64(pStmt, idx, [obj unsignedLongValue]);        }else if (strcmp([obj objCType], @encode(unsigned long long)) == 0) {            sqlite3_bind_int64(pStmt, idx, [obj unsignedLongLongValue]);        }else if (strcmp([obj objCType], @encode(bool)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj boolValue] ? 1 : 0);        }else if (strcmp([obj objCType], @encode(char)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj charValue]);        }else if (strcmp([obj objCType], @encode(short)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj shortValue]);        }else if (strcmp([obj objCType], @encode(int)) == 0) {            sqlite3_bind_int(pStmt, idx, [obj intValue]);        }else if (strcmp([obj objCType], @encode(long)) == 0) {            sqlite3_bind_int64(pStmt, idx, [obj longValue]);        }else if (strcmp([obj objCType], @encode(long long)) == 0) {            sqlite3_bind_int64(pStmt, idx, [obj longLongValue]);        }else if (strcmp([obj objCType], @encode(float)) == 0) {            sqlite3_bind_double(pStmt, idx, [obj floatValue]);        }else if (strcmp([obj objCType], @encode(double)) == 0) {            sqlite3_bind_double(pStmt, idx, [obj doubleValue]);        }else {            sqlite3_bind_text(pStmt, idx, [[obj description] UTF8String], -1, SQLITE_STATIC);        }    }else {        sqlite3_bind_text(pStmt, idx, [[obj description] UTF8String], -1, SQLITE_STATIC);    }}</code></pre><p>&#x7B2C;&#x4E09;&#x6B65;ResultSet&#x91CC;&#x7684;next&#x8BED;&#x53E5;&#x6267;&#x884C;SQL&#x8BED;&#x53E5;</p><pre><code>- (BOOL)next {  //&#x6267;&#x884C;SQL&#x8BED;&#x53E5;    int responseCode = sqlite3_step(_statement.stmt);    if (responseCode != SQLITE_DONE &amp;&amp; responseCode != SQLITE_ROW) {        NSLog(@&quot;RBEDatabase: error occur query excuting errorcode %d errorMsg %@&quot;, [_db lastErrorCode], [_db lastErrorMsg]);    }    if (responseCode != SQLITE_ROW) {        [self close];    }    return responseCode == SQLITE_ROW;}</code></pre><p>&#x6700;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x4ECE;&#x7ED3;&#x679C;&#x96C6;&#x83B7;&#x53D6;&#x7ED3;&#x679C;&#x4E86;&#x3002;</p><p>sqlite&#x4F1A;&#x4E3A;&#x9664;select SQL&#x8BED;&#x53E5;&#x4F7F;&#x7528;&#x9690;&#x5F0F;&#x4E8B;&#x52A1;&#xFF0C;&#x6211;&#x5B9E;&#x73B0;&#x7684;&#x5355;&#x8868;&#x7B80;&#x5355;&#x64CD;&#x4F5C;&#x4E0D;&#x9700;&#x8981;&#x8003;&#x8651;&#x4E8B;&#x52A1;&#xFF0C;sqlite&#x5DF2;&#x7ECF;&#x5E2E;&#x6211;&#x7167;&#x987E;&#x597D;&#x4E86;&#x3002;</p><p>&#x6CE8;&#x610F;&#x591A;&#x7EBF;&#x7A0B;&#xFF01;&#x8981;&#x4E0D;&#x7136;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x52A0;&#x9501;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#xFF0C;&#x8981;&#x4E0D;&#x7136;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0A;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3002;</p><h2 id="&#x5F15;&#x7528;"><a href="#&#x5F15;&#x7528;" class="headerlink" title="&#x5F15;&#x7528;:"></a>&#x5F15;&#x7528;:</h2><p>linux cache <a href="http://www.penglixun.com/tech/system/linux_cache_discovery.html" target="_blank" rel="noopener">http://www.penglixun.com/tech/system/linux_cache_discovery.html</a></p><p>linux&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x4E2D;&#x7684;&#x57FA;&#x6570;&#x6811; <a href="http://rick_stone.leanote.com/post/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%E2%80%94%E2%80%94%E5%9F%BA%E6%95%B0%E6%A0%91%EF%BC%88%E4%BA%8C%EF%BC%89" target="_blank" rel="noopener">http://rick_stone.leanote.com/post/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%A1%B5%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%E2%80%94%E2%80%94%E5%9F%BA%E6%95%B0%E6%A0%91%EF%BC%88%E4%BA%8C%EF%BC%89</a></p><p>mmap <a href="http://www.cnblogs.com/huxiao-tee/p/4660352.html" target="_blank" rel="noopener">http://www.cnblogs.com/huxiao-tee/p/4660352.html</a></p><p>&#x6570;&#x636E;&#x5E93;&#x4E66;&#x7C4D;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x6982;&#x5FF5;</p>]]></content>
      
      <categories>
          
          <category> 计算机体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>缓存之旅（一）</title>
      <link href="/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/%E7%BC%93%E5%AD%98%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="&#x7F13;&#x5B58;&#x771F;&#x7684;&#x6709;&#x6548;&#xFF1F;"><a href="#&#x7F13;&#x5B58;&#x771F;&#x7684;&#x6709;&#x6548;&#xFF1F;" class="headerlink" title="&#x7F13;&#x5B58;&#x771F;&#x7684;&#x6709;&#x6548;&#xFF1F;"></a>&#x7F13;&#x5B58;&#x771F;&#x7684;&#x6709;&#x6548;&#xFF1F;</h2><p>&#x771F;&#x7684;&#x3002;&#x55EF;&#xFF0C;&#x6839;&#x636E;&#x8BA1;&#x7B97;&#x673A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x7ECF;&#x5E38;&#x4F1A;&#x5448;&#x73B0;&#x51FA;&#x7684;&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;&#x3002;&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;&#x53C8;&#x5305;&#x62EC;&#x7A7A;&#x95F4;&#x5C40;&#x90E8;&#x6027;&#x548C;&#x65F6;&#x95F4;&#x5C40;&#x90E8;&#x6027;&#x3002;&#x7A7A;&#x95F4;&#x5C40;&#x90E8;&#x6027;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x5176;&#x5B58;&#x50A8;&#x5728;&#x90BB;&#x8FD1;&#x7684;&#x6570;&#x636E;&#x4E5F;&#x7ECF;&#x5E38;&#x4F1A;&#x88AB;&#x8BBF;&#x95EE;&#x3002;&#x65F6;&#x95F4;&#x5C40;&#x90E8;&#x6027;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x76F8;&#x5BF9;&#x7684;&#x4E00;&#x5C0F;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x7ECF;&#x5E38;&#x4F1A;&#x8BBF;&#x95EE;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#x3002;&#x5B9E;&#x9645;&#x4E2D;&#x662F;&#x600E;&#x4E48;&#x8FD0;&#x7528;&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;&#x7684;&#x5462;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4ECE;&#x786C;&#x76D8;&#x4E2D;&#x8BFB;&#x5757;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E0D;&#x4F1A;&#x53EA;&#x8BFB;&#x4F60;&#x8981;&#x7684;&#x7279;&#x5B9A;&#x5757;&#xFF0C;&#x9644;&#x8FD1;&#x7684;&#x5FEB;&#x5F88;&#x6709;&#x53EF;&#x80FD;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x88AB;&#x8BBF;&#x95EE;&#xFF0C;&#x4ED6;&#x4F1A;&#x628A;&#x8FD9;&#x4E9B;&#x5757;&#x4E5F;&#x4E00;&#x8D77;&#x9884;&#x8BFB;&#x51FA;&#x6765;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x8BFB;&#x9644;&#x8FD1;&#x7684;&#x5FEB;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x8BBF;&#x95EE;&#x786C;&#x76D8;&#x4E86;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x8FD0;&#x7528;&#x5C40;&#x90E8;&#x6027;&#x539F;&#x7406;&#x5C31;&#x51CF;&#x5C11;&#x4E86;&#x8BBF;&#x95EE;&#x78C1;&#x76D8;&#x7684;&#x6B21;&#x6570;&#x3002;&#x9644;&#x8FD1;&#x7684;&#x5757;&#x5C31;&#x88AB;&#x7F13;&#x5B58;&#x4E86;&#x8D77;&#x6765;&#xFF0C;&#x52A0;&#x5FEB;&#x4E86;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#x3002;</p><a id="more"></a><h2 id="&#x7F13;&#x5B58;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#&#x7F13;&#x5B58;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="&#x7F13;&#x5B58;&#x4EC0;&#x4E48;&#xFF1F;"></a>&#x7F13;&#x5B58;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>&#x6240;&#x6709;&#x5904;&#x7406;&#x9700;&#x8981;&#x76F8;&#x5BF9;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x5185;&#x5BB9;&#x90FD;&#x53EF;&#x4EE5;&#x7F13;&#x5B58;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x5C06;&#x56FE;&#x50CF;&#x663E;&#x793A;&#x5230;&#x5C4F;&#x5E55;&#x4E0A;&#xFF0C;&#x56FE;&#x50CF;&#x89E3;&#x7801;&#x76F8;&#x5BF9;&#x4E8E;&#x6E32;&#x67D3;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x7F13;&#x5B58;&#x56FE;&#x50CF;&#x89E3;&#x7801;&#x3002;&#x518D;&#x6BD4;&#x5982;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x4ECE;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x76F8;&#x5BF9;&#x8BA1;&#x7B97;&#x6240;&#x9700;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x7F13;&#x5B58;&#x4ECE;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x7684;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x6837;&#x6700;&#x7EC8;&#x8FBE;&#x5230;&#x901F;&#x5EA6;&#x5339;&#x914D;&#xFF0C;&#x8BA9;&#x6574;&#x4E2A;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x90A3;&#x6B65;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x592A;&#x957F;&#x3002;</p><p>&#x82E5;&#x60F3;&#x7406;&#x89E3;&#x7F13;&#x5B58;&#xFF0C;&#x83AB;&#x8FC7;&#x4E8E;&#x52A8;&#x624B;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x4EE5;&#x6700;&#x5E38;&#x89C1;&#x7684;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x4ECE;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x4E3A;&#x5F15;&#x5B50;&#xFF0C;&#x6765;&#x804A;&#x4E00;&#x804A;&#x7F13;&#x5B58;&#x3002;</p><h2 id="&#x6709;&#x4E2A;&#x4F1F;&#x4EBA;&#x8BF4;&#x7684;&#x597D;&#xFF0C;&#x6211;&#x771F;tm&#x60F3;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7F13;&#x5B58;&#x4E0B;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x6240;&#x6709;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x4F1F;&#x4EBA;&#x5C31;&#x662F;&#x6211;&#x3002;"><a href="#&#x6709;&#x4E2A;&#x4F1F;&#x4EBA;&#x8BF4;&#x7684;&#x597D;&#xFF0C;&#x6211;&#x771F;tm&#x60F3;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7F13;&#x5B58;&#x4E0B;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x6240;&#x6709;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x4F1F;&#x4EBA;&#x5C31;&#x662F;&#x6211;&#x3002;" class="headerlink" title="&#x6709;&#x4E2A;&#x4F1F;&#x4EBA;&#x8BF4;&#x7684;&#x597D;&#xFF0C;&#x6211;&#x771F;tm&#x60F3;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7F13;&#x5B58;&#x4E0B;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x6240;&#x6709;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x4F1F;&#x4EBA;&#x5C31;&#x662F;&#x6211;&#x3002;"></a>&#x6709;&#x4E2A;&#x4F1F;&#x4EBA;&#x8BF4;&#x7684;&#x597D;&#xFF0C;&#x6211;&#x771F;tm&#x60F3;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7F13;&#x5B58;&#x4E0B;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x6240;&#x6709;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x4F1F;&#x4EBA;&#x5C31;&#x662F;&#x6211;&#x3002;</h2><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_CacheClientSideAllTheThings.jpg" alt="&#x5BA2;&#x6237;&#x7AEF;&#x7F13;&#x5B58;&#x6240;&#x6709;&#x7684;&#x5185;&#x5BB9;"></p><p>&#x4F46;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x7F13;&#x5B58;&#x4E0B;&#x6240;&#x6709;&#x4E1C;&#x897F;&#x5FC5;&#x5B9A;&#x4E0D;&#x53EF;&#x80FD;&#xFF0C;&#x4E0D;&#x4EC5;&#x4F60;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x5927;&#x7684;&#x5B58;&#x50A8;&#x5668;&#xFF0C;&#x800C;&#x4E14;&#x7F13;&#x5B58;&#x4F1A;&#x5927;&#x5927;&#x589E;&#x52A0;&#x4F60;&#x7F16;&#x7A0B;&#x7684;&#x590D;&#x6742;&#x6027;&#xFF0C;&#x6240;&#x4EE5;&#x7F13;&#x5B58;&#x5FC5;&#x5B9A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;trade-Off&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x6743;&#x8861;&#x5404;&#x79CD;&#x5229;&#x5F0A;&#xFF0C;&#x65E0;&#x6CD5;&#x91CF;&#x5316;&#x7684;&#x65F6;&#x5019;&#x751A;&#x81F3;&#x5C31;&#x9760;&#x76F4;&#x89C9;&#x548C;&#x7ECF;&#x9A8C;&#x4E86;&#x3002;</p><h2 id="&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E86;&#x4E00;&#x4E2A;Basic-Idea&#xFF0C;&#x5982;&#x4F55;&#x5F00;&#x59CB;&#x5462;&#xFF1F;"><a href="#&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E86;&#x4E00;&#x4E2A;Basic-Idea&#xFF0C;&#x5982;&#x4F55;&#x5F00;&#x59CB;&#x5462;&#xFF1F;" class="headerlink" title="&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E86;&#x4E00;&#x4E2A;Basic Idea&#xFF0C;&#x5982;&#x4F55;&#x5F00;&#x59CB;&#x5462;&#xFF1F;"></a>&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E86;&#x4E00;&#x4E2A;Basic Idea&#xFF0C;&#x5982;&#x4F55;&#x5F00;&#x59CB;&#x5462;&#xFF1F;</h2><p>&#x7F13;&#x5B58;&#x8FD9;&#x4E2A;&#x7528;&#x7A7A;&#x95F4;&#x6362;&#x65F6;&#x95F4;&#x7684;&#x6982;&#x5FF5;&#x5B58;&#x5728;&#x7740;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x5404;&#x4E2A;&#x9886;&#x57DF;&#xFF0C;cpu&#x3001;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3001;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x3001;&#x6570;&#x636E;&#x5E93;&#x3002;&#x4ECE;&#x8FD9;&#x4E9B;&#x9886;&#x57DF;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x501F;&#x9274;&#x4ED6;&#x4EEC;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7F13;&#x5B58;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6765;&#x8003;&#x8651;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x7F13;&#x5B58;&#x662F;&#x5206;&#x5C42;&#x6B21;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x7F13;&#x5B58;&#x5C71;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_%E5%AD%98%E5%82%A8%E5%99%A8%E5%B1%B1.png" alt="&#x7F13;&#x5B58;&#x5668;&#x5C71;"></p><p>&#x6BCF;&#x4E00;&#x5C42;&#x5B9E;&#x9645;&#x4E0A;&#x90FD;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x4E0B;&#x4E00;&#x5C42;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF0C;&#x4ECE;&#x5C71;&#x9876;&#x5230;&#x5C71;&#x811A;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x65F6;&#x95F4;&#x9012;&#x589E;&#xFF0C;&#x800C;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x7269;&#x7406;&#x786C;&#x4EF6;&#x9020;&#x4EF7;&#x9012;&#x51CF;&#xFF0C;cpu&#x8BA1;&#x7B97;&#x6570;&#x636E;&#x5148;&#x4ECE;&#x5C71;&#x9876;&#x5F00;&#x59CB;&#x627E;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x672C;&#x5C42;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5C31;&#x53BB;&#x4E0B;&#x5C42;&#x627E;&#xFF0C;&#x6BCF;&#x5411;&#x4E0B;&#x627E;&#x4E00;&#x5C42;&#xFF0C;&#x627E;&#x7684;&#x5C42;&#x6570;&#x8D8A;&#x591A;&#xFF0C;&#x8BA1;&#x7B97;&#x6240;&#x9700;&#x7684;&#x65F6;&#x95F4;&#x81EA;&#x7136;&#x5C31;&#x8D8A;&#x591A;&#x3002;</p><h3 id="&#x5982;&#x4F55;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F13;&#x5B58;&#xFF1F;"><a href="#&#x5982;&#x4F55;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F13;&#x5B58;&#xFF1F;" class="headerlink" title="&#x5982;&#x4F55;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F13;&#x5B58;&#xFF1F;"></a>&#x5982;&#x4F55;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F13;&#x5B58;&#xFF1F;</h3><p>&#x7D22;&#x5F15;+&#x6620;&#x5C04;&#x3002;&#x4E3A;&#x7F13;&#x5B58;&#x7684;&#x5185;&#x5BB9;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x7D22;&#x5F15;&#x3002;&#x5BF9;&#x4E8E;cpu&#x8FD0;&#x7B97;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7D22;&#x5F15;&#x662F;&#x6309;&#x5730;&#x5740;&#x5212;&#x5206;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x5E94;&#x7528;&#x5C42;&#x6765;&#x8BF4;&#x7D22;&#x5F15;&#x5C31;&#x662F;&#x7F13;&#x5B58;&#x7684;key&#x503C;&#x3002;&#x7D22;&#x5F15;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4E00;&#x5BF9;&#x4E00;&#x76F8;&#x8054;&#x3001;&#x7EC4;&#x76F8;&#x8054;&#x3001;&#x5168;&#x76F8;&#x8054;&#x3002;&#x7D22;&#x5F15;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x7F13;&#x5B58;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x4E4B;&#x95F4;&#x6709;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;&#x7D22;&#x5F15;&#x96C6;&#x5408;&#x67E5;&#x627E;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F13;&#x5B58;&#x4E86;&#x3002;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x76F4;&#x63A5;&#x4ECE;&#x7F13;&#x5B58;&#x96C6;&#x5408;&#x627E;&#x5462;&#xFF1F;&#x5047;&#x8BBE;&#x7F13;&#x5B58;&#x5BB9;&#x91CF;&#x6709;4KB&#xFF0C;&#x6BCF;&#x4E2A;&#x7F13;&#x5B58;&#x5927;&#x5C0F;&#x4E3A;16B&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5171;&#x6709;256&#x4E2A;&#x7F13;&#x5B58;&#x3002;&#x7F13;&#x5B58;&#x7684;&#x7D22;&#x5F15;&#x8303;&#x56F4;&#x5C31;&#x662F;0&#x5230;255&#xFF0C;&#x7D22;&#x5F15;&#x96C6;&#x5408;&#x5360;256B&#x3002;&#x5982;&#x679C;&#x4ECE;&#x7D22;&#x5F15;&#x96C6;&#x5408;&#x67E5;&#x627E;&#xFF0C;&#x53EA;&#x9700;&#x904D;&#x5386;256B&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x4ECE;&#x7F13;&#x5B58;&#x96C6;&#x5408;&#x67E5;&#x627E;&#x9700;&#x8981;&#x904D;&#x5386;4KB&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x660E;&#x663E;&#x7D22;&#x5F15;&#x96C6;&#x5408;&#x53EF;&#x4EE5;&#x52A0;&#x5FEB;&#x67E5;&#x627E;&#x7684;&#x901F;&#x5EA6;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x7528;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x7A7A;&#x95F4;&#x53BB;&#x6620;&#x5C04;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#x3002;</p><h3 id="cpu&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"><a href="#cpu&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;" class="headerlink" title="cpu&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"></a>cpu&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;</h3><p>cpu&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x8BA1;&#x7B97;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;cpu&#x548C;&#x5185;&#x5B58;&#x4E4B;&#x95F4;&#x7684;&#x6027;&#x80FD;&#x9010;&#x6E10;&#x589E;&#x5927;&#xFF0C;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x8005;&#x5728;cpu&#x548C;&#x5185;&#x5B58;&#x4E4B;&#x95F4;&#x63D2;&#x5165;&#x4E86;3&#x5C42;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x6709;&#x4E09;&#x4E2A;&#x5C42;&#x7EA7;&#xFF0C;&#x5C31;&#x662F;&#x6574;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x7F13;&#x5B58;&#x7CFB;&#x7EDF;&#x7684;&#x4E00;&#x4E2A;&#x5C0F;&#x7F29;&#x5F71;&#x3002;</p><p>&#x7F13;&#x5B58;&#x6D89;&#x53CA;&#x5230;&#xFF0C;&#x8BFB;&#x64CD;&#x4F5C;&#x3001;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x5C42;&#x7EA7;&#x4E4B;&#x95F4;&#x5982;&#x4F55;&#x534F;&#x8C03;&#x3001;&#x7F13;&#x5B58;&#x5BB9;&#x91CF;&#x6EE1;&#x4E86;&#x540E;&#x7684;&#x6DD8;&#x6C70;&#x7B97;&#x6CD5;&#x3002;&#x6DD8;&#x6C70;&#x4E0B;&#x9762;&#x4F1A;&#x8BB2;&#xFF0C;&#x8FD9;&#x91CC;&#x5173;&#x6CE8;&#x4E00;&#x4E0B;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x5C42;&#x7EA7;&#x4E4B;&#x95F4;&#x7684;&#x534F;&#x8C03;&#x3002;</p><p>&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x7684;&#x8BFB;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5148;&#x4ECE;&#x9AD8;&#x5C42;&#x8BFB;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x7F13;&#x5B58;&#x547D;&#x4E2D;&#x4E86;&#x5C31;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x547D;&#x4E2D;&#x5C31;&#x53BB;&#x4F4E;&#x5C42;&#x8BFB;&#xFF0C;&#x5982;&#x679C;&#x4ECE;&#x4F4E;&#x5C42;&#x547D;&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x7684;&#x540C;&#x65F6;&#x5C06;&#x4F4E;&#x5C42;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;&#x9AD8;&#x5C42;&#x3002;</p><p>&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x7684;&#x5199;&#x590D;&#x6742;&#x4E00;&#x70B9;&#xFF0C;&#x5148;&#x76F4;&#x63A5;&#x5411;&#x9AD8;&#x5C42;&#x5199;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x4F55;&#x65F6;&#x5411;&#x4F4E;&#x5C42;&#x5199;&#x5165;&#x5462;&#xFF1F;&#x4E00;&#x79CD;&#x662F;&#x76F4;&#x5199;&#xFF08;write-through&#xFF09;&#xFF0C;&#x5C31;&#x662F;&#x7ACB;&#x5373;&#x5411;&#x4F4E;&#x5C42;&#x5199;&#x5165;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x5199;&#x56DE;&#xFF08;write-back&#xFF09;&#xFF0C;&#x7B49;&#x5230;&#x7B97;&#x6CD5;&#x6DD8;&#x6C70;&#x7684;&#x65F6;&#x5019;&#x518D;&#x5411;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x3002;&#x76F4;&#x5199;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x6BCF;&#x6B21;&#x5199;&#x5165;&#x90FD;&#x4F1A;&#x6709;&#x66F4;&#x591A;&#x7684;&#x603B;&#x7EBF;&#x6D41;&#x91CF;&#x3002;&#x7B2C;&#x4E8C;&#x79CD;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x603B;&#x7EBF;&#x6D41;&#x91CF;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x4ED6;&#x5FC5;&#x987B;&#x4E3A;&#x6BCF;&#x4E2A;&#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x662F;&#x5426;&#x4FEE;&#x6539;&#xFF08;dirty&#x4F4D;&#xFF09;&#xFF0C;&#x5373;&#x662F;&#x5426;&#x5199;&#x5165;&#x4F4E;&#x5C42;&#x3002;&#x5411;&#x4F4E;&#x5C42;&#x5199;&#xFF0C;&#x65F6;&#x95F4;&#x6D88;&#x8017;&#x4E3B;&#x8981;&#x5728;&#x8BBF;&#x95EE;&#x7684;&#x65F6;&#x95F4;&#x4E0A;&#xFF0C;&#x6BCF;&#x6B21;&#x5199;&#x7684;&#x91CF;&#x591A;&#x5C11;&#xFF0C;&#x5DEE;&#x522B;&#x4E0D;&#x5927;&#x3002;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x5199;&#x56DE;&#xFF0C;Mongo&#x4E5F;&#x662F;&#x5199;&#x56DE;&#x3002;&#x672C;&#x6587;&#x63A8;&#x8350;&#x7F13;&#x5B58;&#x4F7F;&#x7528;&#x5199;&#x56DE;&#x3002;</p><h3 id="&#x62BD;&#x8C61;&#x5757;&#xFF1A;"><a href="#&#x62BD;&#x8C61;&#x5757;&#xFF1A;" class="headerlink" title="&#x62BD;&#x8C61;&#x5757;&#xFF1A;"></a>&#x62BD;&#x8C61;&#x5757;&#xFF1A;</h3><p>&#x7406;&#x89E3;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x4E4B;&#x524D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6982;&#x5FF5;&#x5C31;&#x662F;&#x62BD;&#x8C61;&#x5757;&#x3002;&#x62BD;&#x8C61;&#x5757;&#x5462;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x5728;&#x62BD;&#x8C61;&#x4E24;&#x5B57;&#x4E0A;&#x3002;&#x800C;&#x62BD;&#x8C61;&#x4E3B;&#x8981;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x9690;&#x85CF;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x786C;&#x76D8;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x7ED9;&#x5185;&#x5B58;&#xFF0C;&#x786C;&#x76D8;&#x4F20;&#x8F93;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5757;&#xFF08;block&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x5757;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x786C;&#x76D8;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x786C;&#x76D8;&#x8981;&#x60F3;&#x627E;&#x5230;&#x6570;&#x636E;&#xFF0C;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x78C1;&#x76D8;&#x7684;&#x65CB;&#x8F6C;&#x548C;&#x5BFB;&#x9053;&#xFF0C;&#x5185;&#x5B58;&#x6839;&#x672C;&#x4E0D;&#x7BA1;&#x5FC3;&#xFF0C;&#x786C;&#x76D8;&#x65CB;&#x8F6C;&#x4E86;&#x51E0;&#x5708;&#x8FD8;&#x662F;&#x6570;&#x636E;&#x5728;&#x90A3;&#x6761;&#x9053;&#x4E0A;&#xFF0C;&#x5185;&#x5B58;&#x53EA;&#x5173;&#x5FC3;&#x6570;&#x636E;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x786C;&#x76D8;&#x53EA;&#x7ED9;&#x5185;&#x5B58;&#x4E00;&#x4E2A;&#x5757;&#xFF08;block&#xFF09;&#xFF0C;&#x786C;&#x76D8;&#x5411;&#x5185;&#x5B58;&#x9690;&#x85CF;&#x5982;&#x4F55;&#x5B58;&#x53D6;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x540C;&#x6837;&#x7684;&#x601D;&#x60F3;&#x4E5F;&#x5728;&#x7F51;&#x7EDC;&#x4E94;&#x5C42;&#x534F;&#x8BAE;&#x4E2D;&#xFF0C;&#x6BCF;&#x5C42;&#x90FD;&#x7ED9;&#x9AD8;&#x5C42;&#x6216;&#x5E95;&#x5C42;&#x4E00;&#x4E2A;&#x201C;&#x5757;&#x201D;(&#x5B9E;&#x9645;&#x4E0A;&#x53EB;&#x5305;&#xFF0C;packet)&#xFF0C;&#x672C;&#x5C42;&#x4E0D;&#x5173;&#x5FC3;&#x5176;&#x4ED6;&#x5C42;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x672C;&#x5C42;&#x76F4;&#x63A5;&#x5728;&#x5757;&#x4E0A;&#x5934;&#x90E8;&#x548C;&#x5C3E;&#x90E8;&#x52A0;&#x4E0A;&#x81EA;&#x5DF1;&#x5C42;&#x505A;&#x7684;&#x4E8B;&#xFF0C;&#x7136;&#x540E;&#x4F20;&#x7ED9;&#x9AD8;&#x5C42;&#x6216;&#x8005;&#x4F4E;&#x5C42;&#xFF0C;&#x5E94;&#x7528;&#x5C42;&#x7BA1;&#x672C;&#x5C42;&#x7684;&#x5757;&#x53EB;&#x62A5;&#x6587;&#xFF0C;&#x4F20;&#x8F93;&#x5C42;&#x53EB;&#x62A5;&#x6587;&#x6BB5;&#xFF0C;&#x7F51;&#x7EDC;&#x5C42;&#x53EB;&#x6570;&#x636E;&#x62A5;&#x3002;</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_%E6%AF%95%E5%8A%A0%E7%B4%A2%E7%9A%84%E7%89%9B.jpeg" alt="&#x6BD5;&#x52A0;&#x7D22;&#x7684;&#x725B;"></p><p>&#x6BD5;&#x52A0;&#x7D22;&#x7684;&#x725B;&#x62BD;&#x8C61;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x9690;&#x85CF;&#x7EC6;&#x8282;&#xFF0C;&#x55EF;&#xFF0C;&#x5230;&#x6700;&#x540E;&#x5DF2;&#x4E0D;&#x80FD;&#x770B;&#x51FA;&#x662F;&#x725B;&#x4E86;&#x3002;&#x3002;</p><h3 id="&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"><a href="#&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;" class="headerlink" title="&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"></a>&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;</h3><p>&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x786C;&#x76D8;&#x7ED9;&#x5185;&#x5B58;&#x7684;&#x62BD;&#x8C61;&#x5757;&#x5C31;&#x662F;&#x9875;&#xFF08;page&#xFF09;&#x3002;&#x4ECE;&#x78C1;&#x76D8;&#x4E0A;&#x8BFB;&#x53D6;&#x9875;&#x5BFC;&#x81F4;&#x7684;I/O&#x662F;&#x5F88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9875;&#x5C31;&#x88AB;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x9875;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x5C31;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x9875;&#x7F13;&#x5B58;&#x3002;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x9875;&#x4E5F;&#x5C31;&#x6210;&#x4E86;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7F13;&#x5B58;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x4E00;&#x4E0B;linux&#x7684;cache</p><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_linuxCache.jpg" alt="linux&#x7684;cache"></p><p>&#x56FE;&#x4E2D;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#x5173;&#x952E;&#x90E8;&#x5206;&#xFF0C;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x3001;&#x865A;&#x62DF;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF08;VFS&#xFF09;&#x3001;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x9875;&#x5B9E;&#x9645;&#x4E0A;&#x5C06;&#x4ED6;&#x4EEC;&#x8054;&#x7CFB;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x5C06;&#x9875;&#x4ECE;&#x786C;&#x76D8;&#x8BFB;&#x51FA;&#x6216;&#x5199;&#x5165;&#x786C;&#x76D8;&#xFF0C;&#x865A;&#x62DF;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x5C06;&#x9875;&#x4F20;&#x9012;&#x7ED9;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x548C;&#x4ECE;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x63A5;&#x6536;&#x9875;&#xFF0C;&#x5185;&#x5B58;&#x8D1F;&#x8D23;&#x7BA1;&#x7406;&#x9875;&#x7684;&#x5206;&#x914D;&#x6216;&#x56DE;&#x6536;&#x548C;&#x7F6E;&#x6362;&#x7B56;&#x7565;&#x3002;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x5982;&#x4F55;&#x7BA1;&#x7406;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x7684;&#x3002;</p><p>&#x5E73;&#x65F6;&#x5728;&#x7F16;&#x7A0B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5305;&#x62EC;CPU&#x63A5;&#x89E6;&#x5230;&#x7684;&#x90FD;&#x662F;&#x865A;&#x62DF;&#x5730;&#x5740;&#x800C;&#x4E0D;&#x662F;&#x771F;&#x5B9E;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x3002;&#x8FD9;&#x662F;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;(&#x4E5F;&#x8BD1;&#x4F5C;&#x865A;&#x62DF;&#x5185;&#x5B58;)&#x7684;&#x4E00;&#x5927;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x3002;&#x5047;&#x5982;&#x4F60;&#x6709;&#x4E2A;&#x9875;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x4F60;&#x60F3;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x9875;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x9875;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x8F6C;&#x5316;&#x4E3A;&#x9875;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x3002;&#x9875;&#x8868;(page table)&#x548C;MMU&#x5C31;&#x8D1F;&#x8D23;&#x5C06;&#x9875;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x6620;&#x5C04;&#x5230;&#x7269;&#x7406;&#x5730;&#x5740;&#x3002;&#x9875;&#x8868;&#x8D1F;&#x8D23;&#x8BB0;&#x5F55;&#x54EA;&#x4E9B;&#x865A;&#x62DF;&#x9875;&#x6620;&#x5C04;&#x4E86;&#x7269;&#x7406;&#x9875;&#xFF0C;&#x4EE5;&#x53CA;&#x8FD9;&#x4E9B;&#x9875;&#x7684;PTE(&#x9875;&#x8868;&#x6761;&#x76EE;)&#x3002;&#x800C;MMU&#x662F;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x786C;&#x4EF6;&#xFF0C;MMU&#x8D1F;&#x8D23;&#x8FDB;&#x884C;&#x865A;&#x62DF;&#x5730;&#x5740;&#x8FDB;&#x884C;&#x7269;&#x7406;&#x5730;&#x5740;&#x7684;&#x7FFB;&#x8BD1;&#xFF0C;&#x7FFB;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x4ECE;&#x9875;&#x8868;&#x83B7;&#x53D6;&#x9875;&#x7684;PTE&#xFF0C;MMU&#x4E5F;&#x4F1A;&#x7528;TLB&#x7F13;&#x5B58;&#x9875;&#x53F7;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4ECE;&#x786C;&#x4EF6;&#x5230;&#x8F6F;&#x4EF6;&#x90FD;&#x6709;&#x7F13;&#x5B58;&#xFF01;</p><p>&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&gt;&#x6B64;&#x5904;&#x8981;&#x8DD1;&#x9898;</p><p>&#x9875;&#x8868;&#x4E0D;&#x4E00;&#x5B9A;&#x53EA;&#x6620;&#x865A;&#x62DF;&#x9875;&#xFF0C;&#x8FD8;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x6587;&#x4EF6;&#x672C;&#x8EAB;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5C06;&#x6587;&#x4EF6;&#x76F4;&#x63A5;&#x8F7D;&#x5165;&#x4E86;&#x5185;&#x5B58;&#xFF0C;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5185;&#x5B58;&#x5C31;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x6587;&#x4EF6;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x53EB;mmap(Memory Map)&#x3002;MongDB&#x4F7F;&#x7528;&#x7684;&#x5C31;&#x662F;mmap&#xFF0C;&#x8BE6;&#x89C1;:<a href="https://docs.mongodb.org/manual/faq/storage/" target="_blank" rel="noopener">https://docs.mongodb.org/manual/faq/storage/</a></p><p>linux&#x6587;&#x4EF6;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;cache&#x5206;&#x4E3A;Page Cache&#x3001;Buffer Cache&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8BE6;&#x7EC6;&#x53D9;&#x8FF0;&#x4E86;&#xFF0C;&#x6B64;&#x5904;&#x7559;&#x5751;&#x3002;</p><p> <img src="http://o79rgqboc.bkt.clouddn.com/blog_ShutUp.jpg" alt="ShutUp"></p><p>&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&gt;&#x6B64;&#x5904;&#x88AB;&#x4E3B;&#x9898;&#x541B;&#x62C9;&#x4E86;&#x56DE;&#x6765;</p><p>&#x7EE7;&#x7EED;&#x6B63;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x53D6;&#x51FA;&#x9875;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x3002;&#x4ED6;&#x4F1A;&#x5148;&#x770B;&#x865A;&#x62DF;&#x9875;&#x662F;&#x5426;&#x6709;&#x6620;&#x5C04;&#x7269;&#x7406;&#x9875;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x6620;&#x5C04;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6620;&#x5C04;&#xFF0C;&#x5C31;&#x4F1A;&#x53D1;&#x751F;&#x7F3A;&#x9875;&#x4E2D;&#x65AD;&#x3002;&#x5C06;&#x76F8;&#x5E94;&#x7684;&#x7269;&#x7406;&#x9875;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#xFF0C;&#x5E76;&#x4E0E;&#x865A;&#x62DF;&#x9875;&#x6620;&#x5C04;&#x3002;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x67E5;&#x627E;&#xFF0C;&#x8FD9;&#x6B21;&#x67E5;&#x627E;&#x865A;&#x62DF;&#x9875;&#x5C31;&#x4F1A;&#x6620;&#x5C04;&#x7269;&#x7406;&#x9875;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5185;&#x5B58;&#x5BB9;&#x91CF;&#x6709;&#x9650;&#xFF0C;&#x4E0D;&#x80FD;&#x8BA9;&#x6240;&#x6709;&#x7269;&#x7406;&#x9875;&#x90FD;&#x7F13;&#x5B58;&#xFF0C;&#x9700;&#x8981;&#x7528;&#x7B97;&#x6CD5;&#x6DD8;&#x6C70;&#x6389;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7269;&#x7406;&#x9875;&#x3002;</p><p>FIFO&#xFF1A;&#x5148;&#x8FDB;&#x5148;&#x51FA;&#x7B97;&#x6CD5;&#xFF0C;&#x6BCF;&#x6B21;&#x6DD8;&#x6C70;&#x6389;&#x505C;&#x7559;&#x65F6;&#x95F4;&#x6700;&#x957F;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x5E76;&#x4E0D;&#x5E38;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x5F88;&#x53EF;&#x80FD;&#x6DD8;&#x6C70;&#x6389;&#x7ECF;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#x9875;&#x9762;&#x3002;</p><p>LRU(Least Recently Used)&#xFF1A;&#x9009;&#x62E9;&#x6700;&#x8FD1;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x672A;&#x4F7F;&#x7528;&#x8FC7;&#x7684;&#x9875;&#x9762;&#x7F6E;&#x6362;&#x6389;&#x3002;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x975E;&#x5E38;&#x4F18;&#x79C0;&#xFF0C;&#x4F46;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5B9E;&#x73B0;&#x5B83;&#x8FD8;&#x9700;&#x8981;&#x786C;&#x4EF6;&#x652F;&#x6301;&#xFF0C;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x76F8;&#x5F53;&#x8D39;&#x65F6;&#xFF0C;&#x6240;&#x4EE5;&#x53C8;&#x6D8C;&#x73B0;&#x4E86;&#x5F88;&#x591A;&#x6A21;&#x4EFF;LRU&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x66F4;&#x52A0;&#x5B9E;&#x7528;&#xFF0C;NRU&#x3001;NFU&#x3001;2Q&#x3001;MQ&#x3001;Clock&#x7B49;&#x3002;</p><h3 id="&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"><a href="#&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;" class="headerlink" title="&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;"></a>&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF1A;</h3><p>&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x76F8;&#x4F3C;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x5C06;&#x5757;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x4E0A;&#xFF0C;&#x53EB;&#x505A;&#x7F13;&#x51B2;&#x533A;&#xFF08;buffer&#xFF09;&#xFF0C;&#x7531;&#x7F13;&#x5B58;&#x533A;&#x7BA1;&#x7406;&#x5668;&#x7BA1;&#x7406;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x6570;&#x636E;&#x5E93;&#x4F7F;&#x7528;&#x7684;&#x7B97;&#x6CD5;&#x4E3A;&#x8FD1;&#x4F3C;LRU&#x7B97;&#x6CD5;&#x3002;</p><p>&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#x4E3A;&#x4E86;&#x5728;&#x5D29;&#x6E83;&#x540E;&#xFF0C;&#x4E5F;&#x8981;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x6709;&#x65F6;&#x4F1A;&#x5C06;&#x5757;&#x5F3A;&#x5236;&#x5199;&#x56DE;&#xFF0C;&#x6709;&#x65F6;&#x4F1A;&#x9650;&#x5236;&#x5757;&#x7684;&#x5199;&#x56DE;&#x3002;</p><h2 id="&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;"><a href="#&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;" class="headerlink" title="&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;"></a>&#x8BA9;Idea&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Idea&#xFF1A;</h2><p>&#x73B0;&#x5728;&#x7740;&#x624B;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#xFF0C;&#x6839;&#x636E;&#x5177;&#x4F53;&#x7F13;&#x5B58;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BED;&#x8A00;&#x4E0B;&#xFF0C;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0D;&#x8FC7;&#xFF0C;&#x601D;&#x60F3;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5B9E;&#x9645;&#x80FD;&#x8C03;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x5C42;&#x7EA7;&#xFF0C;&#x5185;&#x5B58;&#x548C;&#x786C;&#x76D8;&#x3002;&#x90A3;&#x4E48;&#x5C31;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x3002;</p><p>&#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x5C31;&#x662F;&#x5BF9;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x5C01;&#x88C5;&#x2014;&#x5B57;&#x5178;&#xFF0C;&#x62E5;&#x6709;&#x5E38;&#x6570;&#x7EA7;&#x522B;&#x7684;&#x67E5;&#x8BE2;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x8981;&#x518D;&#x52A0;&#x4E0A;&#x6DD8;&#x6C70;&#x7B97;&#x6CD5;&#xFF0C;&#x5B57;&#x5178;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x5C31;&#x4E0D;&#x7406;&#x60F3;&#x4E86;&#x3002;&#x800C;iOS&#x4E2D;&#x6709;&#x7CFB;&#x7EDF;&#x7EA7;&#x5DF2;&#x5B9E;&#x73B0;&#x597D;&#x7684;NSCache&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x6548;&#x7387;&#x4E0D;&#x9AD8;&#xFF0C;&#x867D;&#x8BF4;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x3002;&#x672C;&#x6587;&#x63A8;&#x8350;&#x5927;&#x5BB6;&#x4F7F;&#x7528;LinkedHashMap&#xFF0C;&#x7B49;&#x5230;&#x4E0B;&#x6587;&#x804A;&#x5230;&#x6DD8;&#x6C70;&#x7B97;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7EC6;&#x8BB2;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x6839;&#x636E;&#x4F60;&#x8981;&#x5B58;&#x50A8;&#x7684;&#x5185;&#x5BB9;&#x3001;&#x590D;&#x6742;&#x6027;&#x548C;&#x6027;&#x80FD;&#x4E4B;&#x95F4;&#x7684;&#x6743;&#x8861;&#xFF0C;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x8981;&#x786E;&#x5B9A;&#x7F13;&#x5B58;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BB9;&#x91CF;&#x53EF;&#x4EE5;&#x662F;&#x7F13;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x6570;&#x91CF;&#x6216;&#x8005;&#x662F;&#x7F13;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x53D6;&#x51B3;&#x4E8E;&#x4F60;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7F13;&#x5B58;&#x7684;&#x5BB9;&#x91CF;&#x662F;&#x4E0D;&#x5BB9;&#x6613;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8BA1;&#x7B97;&#x51FA;&#x5BB9;&#x91CF;&#x8981;&#x82B1;&#x8D39;&#x5F88;&#x957F;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4E0D;&#x8981;&#x53BB;&#x8BA1;&#x7B97;&#xFF0C;&#x7F13;&#x5B58;&#x672C;&#x6765;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x7701;&#x65F6;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x82B1;&#x8D39;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x53BB;&#x505A;&#x989D;&#x5916;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5F97;&#x4E0D;&#x507F;&#x5931;&#x4E86;&#x3002;</p><p>&#x8BFB;&#x5199;&#x548C;&#x4E24;&#x5C42;&#x7684;&#x540C;&#x6B65;&#xFF0C;&#x76F4;&#x63A5;&#x53C2;&#x7167;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x7684;&#x601D;&#x60F3;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x5199;&#x56DE;&#x3002;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5199;&#x56DE;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E24;&#x4E2A;&#x6307;&#x6807;&#x6765;&#x89E6;&#x53D1;&#x5199;&#x56DE;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x8FD8;&#x672A;&#x5199;&#x56DE;&#x7684;&#x6570;&#x91CF;&#x548C;&#x4E24;&#x6B21;&#x53D1;&#x751F;&#x5199;&#x56DE;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x6807;&#x662F;&#x6216;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8FBE;&#x6807;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x89E6;&#x53D1;&#x5199;&#x56DE;&#x3002;&#x6BCF;&#x6B21;&#x5199;&#x5165;&#x7F13;&#x5B58;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x68C0;&#x67E5;&#x4E00;&#x4E0B;&#x672A;&#x5199;&#x56DE;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x6807;&#x4E86;&#x5C31;&#x5199;&#x56DE;&#x3002;&#x518D;&#x7528;&#x4E00;&#x4E2A;&#x8BA1;&#x65F6;&#x5668;&#xFF0C;&#x6BCF;&#x9694;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x89E6;&#x53D1;&#x5199;&#x56DE;&#x3002;&#x8FD8;&#x6709;&#x5F53;app&#x5C06;&#x8981;&#x9000;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x8981;&#x5199;&#x56DE;&#x3002;</p><p>&#x7F13;&#x5B58;&#x8BFB;&#x5199;&#xFF1A;</p><pre><code>- (void)setObject:(id)object forKeyedSubscript:(id)key {    self.memoryCache[key] = object;    self.syncDic[key] = key;    if (self.syncDic.count &gt;= self.syncCount) {        dispatch_async(_queue, ^{            [self sync];        });    }}- (id)objectForKeyedSubscript:(id)key {    id object = nil;    if (self.memoryCache[key]) {        object = self.memoryCache[key];        [self.diskCache setModificationDate:[[NSDate alloc] init] forKey:key];    }else if (self.diskCache[key]) {        object = self.diskCache[key];        self.memoryCache[key] = object;    }    return object;}- (void)syncRecursively {    __weak typeof(self) weakSelf = self;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(self.syncInterval * NSEC_PER_SEC)), _queue, ^{        __strong typeof(weakSelf) strongSelf = weakSelf;        [strongSelf sync];        [strongSelf syncRecursively];    });}- (void)sync {        [self.syncDic enumerateKeysAndObjectsUsingBlock:^(id  _Nonnull key, id  _Nonnull keyToo, BOOL * _Nonnull stop) {        id obj = self.memoryCache[key];        if (obj) {            self.diskCache[key] = obj;        }    }];    [self.syncDic removeAllObjects];    }</code></pre><p>&#x6DD8;&#x6C70;&#x7684;&#x7B97;&#x6CD5;&#x5462;&#xFF0C;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#x5E94;&#x7528;&#x5C42;&#xFF0C;&#x5B9E;&#x73B0;LRU&#x5F88;&#x7B80;&#x5355;&#x3002;&#x53EA;&#x8981;&#x7528;&#x4E00;&#x4E2A;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684;LinkedHashMap&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;java&#x4E2D;&#x6709;&#x7CFB;&#x7EDF;&#x5B9E;&#x73B0;&#x7684;LinkedHashMap&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x3002;&#x5148;&#x7528;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#x6765;&#x5B9E;&#x73B0;&#x6700;&#x8FD1;&#x6700;&#x5C11;&#x4F7F;&#x7528;&#xFF0C;&#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x63D2;&#x5165;&#x5230;&#x8868;&#x5934;&#xFF0C;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x4E5F;&#x628A;&#x6570;&#x636E;&#x63D2;&#x5165;&#x5230;&#x8868;&#x5934;&#xFF0C;&#x5220;&#x9664;&#x6570;&#x636E;&#x4ECE;&#x8868;&#x5C3E;&#x5220;&#x9664;&#xFF0C;&#x8D8A;&#x5E38;&#x7528;&#x7684;&#x4F1A;&#x8D8A;&#x9760;&#x8FD1;&#x8868;&#x5934;&#xFF0C;&#x8868;&#x5C3E;&#x5C31;&#x662F;&#x6700;&#x4E0D;&#x5E38;&#x7528;&#x7684;&#x4E86;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x94FE;&#x8868;&#x67E5;&#x8BE2;&#x590D;&#x6742;&#x5EA6;&#x662F;&#x7EBF;&#x6027;&#x7684;&#xFF0C;&#x641E;&#x4E0D;&#x597D;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x6570;&#x636E;&#x5728;&#x8868;&#x5C3E;&#xFF0C;&#x5C31;&#x5F97;&#x904D;&#x5386;&#x4E00;&#x6B21;&#x8868;&#x3002;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5F15;&#x5165;&#x54C8;&#x5E0C;&#x8868;&#x3002;&#x5229;&#x7528;&#x54C8;&#x5E0C;&#x8868;&#x5E38;&#x6570;&#x7EA7;&#x7684;&#x67E5;&#x8BE2;&#x590D;&#x6742;&#x5EA6;&#x3002;&#x6700;&#x540E;&#x624D;&#x53EB;&#x505A;linkedHashMap&#x3002;&#x4E0B;&#x9762;&#x662F;&#x7528;OC&#x5199;&#x7684;&#xFF0C;&#x7FFB;&#x6210;&#x522B;&#x7684;&#x8BED;&#x8A00;&#x4E5F;&#x4E0D;&#x8D39;&#x52B2;&#x3002;</p><pre><code class="lang-objc">@interface RBELinkedHashMapNode : NSObject {    @package    id _key;    id _value;    __unsafe_unretained RBELinkedHashMapNode *_prev;    __unsafe_unretained RBELinkedHashMapNode *_next;}@end@implementation RBELinkedHashMapNode@end@interface RBELinkedHashMap : NSObject- (id)findObjctForKey:(id)key;- (void)insertObject:(id)obj forKey:(id)key;- (void)eraseLastObject;- (void)eraseObjectForKey:(id)key;- (void)eraseAll;- (NSUInteger)currentTotalUsage;@end@implementation RBELinkedHashMap {    @package    CFMutableDictionaryRef _hashMap;    NSUInteger _totalUsage;    RBELinkedHashMapNode *_head;    RBELinkedHashMapNode *_tail;}- (instancetype)init {    self = [super init];    if (self) {        _hashMap = CFDictionaryCreateMutable(CFAllocatorGetDefault(), 0, &amp;kCFTypeDictionaryKeyCallBacks, &amp;kCFTypeDictionaryValueCallBacks);    }    return self;}- (void)dealloc {    CFRelease(_hashMap);}- (id)findObjctForKey:(id)key {    id obj = nil;    RBELinkedHashMapNode *node = CFDictionaryGetValue(_hashMap, (__bridge const void *)key);    if (node) {        [self detach:node];        [self attachToHead:node];        obj = node-&gt;_value;    }    return obj;}- (void)insertObject:(id)obj forKey:(id)key {    RBELinkedHashMapNode *node = CFDictionaryGetValue(_hashMap, (__bridge const void *)key);    if (node) {        node-&gt;_value = obj;        [self detach:node];        [self attachToHead:node];        return;    }    RBELinkedHashMapNode *newNode = [RBELinkedHashMapNode new];    newNode-&gt;_key = key;    newNode-&gt;_value = obj;    [self attachToHead:newNode];    CFDictionarySetValue(_hashMap, (__bridge const void *)key, (__bridge const void *)newNode);    _totalUsage ++;}- (void)eraseLastObject {    if (!_head) {        return;    }    RBELinkedHashMapNode *deleteNode = _tail;    if (_head == deleteNode) {        _head = nil;        _tail = nil;    }    [self detach:deleteNode];    CFDictionaryRemoveValue(_hashMap, (__bridge const void *)deleteNode-&gt;_key);    _totalUsage --;}- (void)eraseObjectForKey:(id)key {    if (!_head) {        return;    }    RBELinkedHashMapNode *deleteNode = CFDictionaryGetValue(_hashMap, (__bridge const void *)key);    if (deleteNode) {        if (_head == _tail) {            _head = nil;            _tail = nil;        }        if (deleteNode == _head) {            _head = _head-&gt;_next;            _head-&gt;_prev = nil;            deleteNode-&gt;_next = nil;        }        [self detach:deleteNode];        CFDictionaryRemoveValue(_hashMap, (__bridge const void *)key);        _totalUsage --;    }}- (void)eraseAll {    _totalUsage = 0;    if (CFDictionaryGetCount(_hashMap) &gt; 0) {        CFDictionaryRemoveAllValues(_hashMap);    }}- (void)detach:(RBELinkedHashMapNode *)node {    if (_head == _tail || _head == node) {        return;    }else if (node == _tail) {        _tail = _tail-&gt;_prev;        _tail-&gt;_next = nil;        node-&gt;_prev = nil;    }else {        node-&gt;_prev-&gt;_next = node-&gt;_next;        node-&gt;_next-&gt;_prev = node-&gt;_prev;    }}- (void)attachToHead:(RBELinkedHashMapNode *)node {    if (_head == nil) {        _head = node;        _tail = node;    }else if (_head == node) {        return;    }else{        _head-&gt;_prev = node;        node-&gt;_next = _head;        _head = node;    }}- (NSUInteger)currentTotalUsage {    return _totalUsage;}@end</code></pre><p>&#x672C;&#x6587;&#x6CA1;&#x6709;&#x804A;&#x786C;&#x76D8;&#x4E0A;&#x7684;&#x7F13;&#x5B58;&#x600E;&#x4E48;&#x505A;&#xFF0C;&#x5199;&#x5230;&#x8FD9;&#x91CC;&#x5DF2;&#x7ECF;&#x611F;&#x89C9;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x4EE5;&#x540E;&#x6709;&#x65F6;&#x95F4;&#x6162;&#x6162;&#x586B;&#x5427;&#x3002;</p><p>&#x6CE8;&#x610F;&#x591A;&#x7EBF;&#x7A0B;&#xFF01;&#x7F13;&#x5B58;&#x65F6;&#x5E38;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x4E0A;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x5C31;&#x4E00;&#x5B9A;&#x8981;&#x52A0;&#x9501;&#x3002;&#x5EFA;&#x8BAE;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x4F7F;&#x7528;&#x81EA;&#x65CB;&#x9501;&#xFF0C;&#x78C1;&#x76D8;&#x7F13;&#x5B58;&#x4F7F;&#x7528;&#x4FE1;&#x53F7;&#x91CF;&#x3002;&#x81EA;&#x65CB;&#x9501;&#xFF0C;&#x4F1A;&#x4E00;&#x76F4;&#x8BE2;&#x95EE;&#x9501;&#x662F;&#x5426;&#x5F00;&#x4E86;&#xFF0C;&#x4F1A;&#x5360;&#x7528;&#x5927;&#x91CF;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x53EA;&#x9002;&#x5408;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x5F88;&#x77ED;&#x5C31;&#x80FD;&#x8FDB;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x4FE1;&#x53F7;&#x91CF;&#x4F1A;&#x5728;&#x95EE;&#x5B8C;&#x662F;&#x5426;&#x5F00;&#x4EE5;&#x540E;&#xFF0C;&#x7761;&#x7720;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x66F4;&#x9002;&#x5408;&#x957F;&#x65F6;&#x95F4;&#x7B49;&#x5F85;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x800C;OSSpinLock&#x5728;iOS&#x4E2D;&#x5E76;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5728;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;mutex&#x9501;&#x66FF;&#x4EE3;&#x3002;&#x8BE6;&#x89C1;<a href="http://blog.ibireme.com/2016/01/16/spinlock_is_unsafe_in_ios/" target="_blank" rel="noopener">http://blog.ibireme.com/2016/01/16/spinlock_is_unsafe_in_ios/</a></p><p>&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x9501;&#xFF0C;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x5B8F;&#x9884;&#x5904;&#x7406;</p><pre><code>- (void)mutexLock {    pthread_mutex_lock(&amp;_mutexLock);}- (void)mutexUnLock {    pthread_mutex_unlock(&amp;_mutexLock);}</code></pre><h2 id="&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E9B;&#x8FD8;&#x4E0D;&#x591F;&#xFF1F;"><a href="#&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E9B;&#x8FD8;&#x4E0D;&#x591F;&#xFF1F;" class="headerlink" title="&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E9B;&#x8FD8;&#x4E0D;&#x591F;&#xFF1F;"></a>&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E9B;&#x8FD8;&#x4E0D;&#x591F;&#xFF1F;</h2><p><img src="http://o79rgqboc.bkt.clouddn.com/blog_%E4%BD%A0%E7%9C%9F%E6%A3%92.jpg" alt="&#x4F60;&#x771F;&#x68D2;"></p><p>&#x5982;&#x679C;&#x4F60;&#x7F13;&#x5B58;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4ECE;&#x7F51;&#x7EDC;&#x83B7;&#x53D6;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x53EF;&#x4EE5;&#x505A;&#x7684;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x62FF;&#x5230;&#x6570;&#x636E;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x4E00;&#x4E2A;&#x8868;&#x8FF0;&#xFF0C;&#x4E00;&#x4E2A;&#x526F;&#x672C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x539F;&#x6765;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53EA;&#x6709;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#x3002;&#x800C;&#x7F51;&#x7EDC;&#x7F13;&#x5B58;&#x5C31;&#x662F;&#x4F7F;&#x7528;http&#x63D0;&#x4F9B;&#x7684;&#x7F13;&#x5B58;&#x62A5;&#x5934;&#x5B57;&#x6BB5;&#xFF0C;Expires&#x3001;E-Tag&#x3001;Last-Modified&#x3002;&#x5177;&#x4F53;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x7EC6;&#x8BF4;&#x4E86;&#xFF0C;&#x603B;&#x4F53;&#x7B56;&#x7565;&#x5C31;&#x662F;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#xFF0C;&#x7B49;&#x5230;&#x8FC7;&#x671F;&#x624D;&#x56DE;&#x53BB;&#x670D;&#x52A1;&#x5668;&#x8BF7;&#x6C42;&#xFF0C;&#x8BF7;&#x6C42;&#x8FD8;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5B9E;&#x4F53;&#x662F;&#x5426;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5C31;&#x53EA;&#x9700;&#x8981;&#x544A;&#x8BC9;&#x5BA2;&#x6237;&#x7AEF;&#x6CA1;&#x6709;&#x53D8;&#x5316;&#xFF0C;&#x4E0D;&#x7528;&#x518D;&#x8FD4;&#x56DE;&#x4E00;&#x904D;&#x6240;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF0C;&#x6D6A;&#x8D39;&#x6D41;&#x91CF;&#x3002;</p><h2 id="&#x5F15;&#x7528;&#xFF1A;"><a href="#&#x5F15;&#x7528;&#xFF1A;" class="headerlink" title="&#x5F15;&#x7528;&#xFF1A;"></a>&#x5F15;&#x7528;&#xFF1A;</h2><ul><li>&#x7F13;&#x5B58;&#x6982;&#x5FF5;&#xFF1A;<a href="https://zh.wikipedia.org/wiki/CPU%E7%BC%93%E5%AD%98" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/CPU%E7%BC%93%E5%AD%98</a></li><li>&#x5B58;&#x50A8;&#x5668;&#x5C71;&#x4E66;&#x7C4D;&#xFF1A;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;</li><li>&#x9875;&#x9762;&#x7F6E;&#x6362;&#x4E66;&#x7C4D;&#xFF1A;&#x73B0;&#x4EE3;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</li><li>http&#x7F13;&#x5B58;&#x4E66;&#x7C4D;&#xFF1A;http&#x6743;&#x5A01;&#x6307;&#x5357;</li><li>&#x6570;&#x636E;&#x5E93;&#x7F13;&#x5B58;&#xFF1A;<a href="http://www.devbean.net/2016/04/how-database-works-6/" target="_blank" rel="noopener">http://www.devbean.net/2016/04/how-database-works-6/</a></li><li>iOS&#x7AEF;cache&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x4EE5;&#x53CA;YYCache&#xFF1A;<a href="http://blog.ibireme.com/2015/10/26/yycache/" target="_blank" rel="noopener">http://blog.ibireme.com/2015/10/26/yycache/</a></li></ul>]]></content>
      
      <categories>
          
          <category> 计算机体系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机体系 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
  
</search>
